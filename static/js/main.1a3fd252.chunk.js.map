{"version":3,"sources":["assets/images/logo.png","utils/StringUtils.ts","components/configure/modals/connection/ConnectionModal.tsx","components/configure/header/Header.tsx","services/hid/Hid.ts","services/hid/Commands.ts","services/hid/WebHid.ts","services/provider/Firebase.ts","store/state.ts","actions/actions.ts","services/storage/Validator.ts","actions/storage.action.ts","actions/hid.action.ts","components/configure/header/Header.container.ts","components/configure/keycodekey/any/AnyKeyEditDialog.tsx","components/configure/keycodekey/KeycodeKey.tsx","components/configure/keycodekey/KeycodeKey.container.ts","components/configure/keycodekey/any/AddAnyKeycodeKey.tsx","components/configure/keycodekey/any/AddAnyKeycodeKey.container.ts","components/configure/keycodes/Keycodes.tsx","components/configure/keycodes/Keycodes.container.ts","components/configure/keycap/Keycap.tsx","models/KeyModel.ts","models/KeyboardModel.ts","components/configure/keycap/Keycap.container.ts","components/configure/layoutoptions/LayoutOptionsDialog.tsx","components/configure/layoutoptions/LayoutOptionsDialog.container.ts","components/configure/keyboards/Keyboards.tsx","components/configure/keyboards/Keyboards.container.ts","components/configure/keydiff/Keydiff.tsx","components/configure/keydiff/Keydiff.container.ts","components/configure/keymap/Keymap.tsx","components/configure/keymap/Keymap.container.ts","components/configure/keyboardlist/KeyboardList.tsx","components/configure/keyboardlist/KeyboardList.container.ts","components/configure/keyboarddefform/KeyboardDefinitionForm.tsx","components/configure/keyboarddefform/KeyboardDefinitionForm.container.ts","assets/files/key_descriptions.ts","components/configure/content/Content.tsx","components/configure/content/Content.container.ts","components/configure/Configure.tsx","components/configure/Configure.container.ts","services/hid/ui/Hid.tsx","assets/images/top/card-1.png","assets/images/top/card-2.png","assets/images/top/card-3.png","assets/images/top/card-4.png","assets/images/top/card-5.png","components/top/Top.tsx","App.tsx","store/reducers.ts","reportWebVitals.ts","utils/ErrorReportingLogger.ts","index.tsx"],"names":["hexadecimal","num","digit","hex","Array","fill","join","Number","toString","slice","toUpperCase","ConnectionModal","props","Modal","aria-labelledby","aria-describedby","className","open","this","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","React","Component","Header","onCloseConnectionStateMenu","setState","connectionStateEl","onClickDevice","event","currentTarget","onClickConnectionMenuItemNewDevice","state","hasKeysToFlush","remaps","reduce","has","v","Object","values","length","src","logo","alt","showKeyboardList","onClick","productName","vendorId","productId","ArrowDropDown","Menu","anchorEl","keepMounted","openConnectionStateMenu","PaperProps","style","maxHeight","keyboards","map","kbd","index","info","getInformation","isOpenedKbd","openedKeyboard","linking","MenuItem","undefined","onClickKeyboardMenuItem","bind","disabled","Link","fontSize","LinkOff","Button","size","color","onClickAnotherKeyboard","variant","flushLoading","onClickFlushButton","CircularProgress","draggingKey","marginLeft","Boolean","IKeycodeCategory","BASIC","LAYERS","LIGHTING","MACRO","MEDIA","NUMBER","SPECIAL","ANY","AbstractCommand","request","responseHandler","device","outputReport","createReport","sendReport","OUTPUT_REPORT_ID","getResponseHandler","success","error","cause","data","resultArray","Uint8Array","buffer","response","createResponse","isSameRequest","DynamicKeymapGetKeycodeCommand","req","getRequest","layer","row","column","code","DynamicKeymapSetKeycodeCommand","DynamicKeymapGetLayerCountCommand","value","DynamicKeymapReadBufferCommand","offset","createKeymap","isAny","keycodeInfo","keycodeArray","find","keycode","categoryToKeymapsMap","basic","codes","layers","lighting","macro","media","number","kp","special","Keyboard","hid","commandQueue","handleInputReport","e","a","outputUint8Array","command","canHandleInputReport","shift","getDevice","console","warn","log","close","opened","removeEventListener","target","isOpened","addEventListener","array","lines","out","ascii","i","String","fromCharCode","push","rowCount","columnCount","totalSize","commandResults","remainingSize","Promise","resolve","reject","result","enqueue","all","responses","keymapMap","forEach","Error","keymap","getKeymap","layerCount","WebHid","handler","navigator","getDevices","devices","filter","collectionInfo","collections","usage","usagePage","connectParams","requestDevice","filters","keyboard","collection","checkViaSupportedDevice","connect","disconnect","category","config","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","SetupPhase","keyboardNotSelected","connectingKeyboard","fetchingKeyboardDefinition","waitingKeyboardDefinitionUpload","openingKeyboard","firebaseProvider","db","auth","unsubscribeAuthStateChanged","firebase","initializeApp","app","firestore","where","get","querySnapshot","empty","exists","document","id","docs","name","vendor_id","product_id","json","doc","documentSnapshot","users","provider","GithubAuthProvider","signInWithRedirect","callback","onAuthStateChanged","user","INIT_STATE","entities","NaN","keymaps","macros","keyboardDefinition","package","version","setupPhase","notifications","keyboardHeight","header","instance","storage","selectedLayer","selectedPos","keycodes","keys","keycodeKey","selectedKey","hoverKey","keydiff","origin","destination","keyboardDefinitionForm","dragging","layoutOptions","selectedOptions","KEYBOARDS_ACTIONS","KEYBOARDS_CLEAR_SELECTED_POS","KEYBOARDS_UPDATE_SELECTED_LAYER","KEYBOARDS_UPDATE_SELECTED_POS","KeyboardsActions","type","pos","KEYCODES_ACTIONS","KEYCODES_UPDATE_CATEGORY","KEYCODES_UPDATE_MACRO","KEYCODES_LOAD_KEYCODE_INFO_FOR_ALL_CATEGORIES","KeycodesActions","text","getKeymapCandidatesByCategory","label","meta","getKeysByCategory","KEYCODEKEY_ACTIONS","KEYCODEKEY_UPDATE_DRAGGING_KEY","KEYCODEKEY_UPDATE_SELECTED_KEY","KEYCODEKEY_UPDATE_HOVER_KEY","KEYCODEKEY_CLEAR","KeycodeKeyActions","key","ANYKEYCODEKEY_ACTIONS","ANYKEYCODEKEY_ADD_ANYKEY","ANYKEYCODEKEY_UPDATE_ANYKEY","AnyKeycodeKeyActions","anyKey","KEYDIFF_ACTIONS","KEYDIFF_CLEAR_KEYDIFF","KEYDIFF_UPDATE_KEYDIFF","KeydiffActions","orig","dest","NOTIFICATION_ACTIONS","NOTIFICATION_ADD_ERROR","NOTIFICATION_ADD_WARN","NOTIFICATION_ADD_INFO","NOTIFICATION_ADD_SUCCESS","NOTIFICATION_REMOVE","NotificationActions","message","HEADER_ACTIONS","HEADER_UPDATE_FLUSH_LOADING","HeaderActions","loading","KEYBOARD_DEFINITION_FORM_ACTIONS","KEYBOARD_DEFINITION_FORM_UPDATE_DRAGGING","KeyboardDefinitionFormActions","APP_ACTIONS","APP_UPDATE_SETUP_PHASE","APP_REMAPS_INIT","APP_REMAPS_SET_KEY","APP_REMAPS_REMOVE_KEY","APP_REMAPS_CLEAR","APP_PACKAGE_INIT","APP_UPDATE_KEYBOARD_HEIGHT","AppActions","height","LAYOUT_OPTIONS_ACTIONS","LAYOUT_OPTIONS_INIT_SELECTED_OPTION","LAYOUT_OPTIONS_UPDATE_SELECTED_OPTION","LayoutOptionsActions","optionIndex","option","options","list","item","validateKeyboardDefinition","source","root","JSON","parse","valid","errorMessage","validate","Ajv","compile","schema","errors","keyword","schemaPath","STORAGE_ACTIONS","STORAGE_UPDATE_KEYBOARD_DEFINITION","StorageActions","storageActionsThunk","file","dispatch","getState","endsWith","loadTextFile","fileReader","FileReader","readAsText","validateResult","getNumber","startsWith","substring","parseInt","layouts","labels","hidActionsThunk","openKeyboard","keyboardInfo","fetchKeyboardDefinition","fetchKeyboardDefinitionResult","HID_ACTIONS","HID_CONNECT_KEYBOARD","HID_DISCONNECT_KEYBOARD","HID_UPDATE_KEYBOARD","HID_UPDATE_KEYBOARD_LAYER_COUNT","HID_UPDATE_KEYBOARD_LIST","HID_UPDATE_KEYMAPS","HidActions","connectAnotherKeyboard","closeOpenedKeyboard","isSameDevice","msg","listedKbd","targetKbd","connectKeyboard","initOpenedKeyboard","matrix","rows","cols","updateAuthorizedKeyboardList","getAuthorizedKeyboard","closeKeyboard","flush","remap","indexOf","col","updateKeymap","loadKeymap","detectKeyboards","fetchLayerCount","layerResult","fetchKeymaps","keymapsResult","_dispatch","AnyKeyDialog","onClickOk","invalidateCode","onClickCancel","replace","setSelectionRange","Dialog","onEnter","onInit","DialogTitle","title","DialogContent","TextField","autoFocus","onChange","onChangeLabel","onFocus","onChangeCode","DialogActions","labelOk","KeycodeKey","clickKey","openDialog","selectedKeycapPosition","remapKey","selectKey","startDraggingKeycode","endDraggingKeycode","updateAnyKey","draggable","Fragment","selected","clickable","onMouseEnter","onMouseLeave","onDragStart","onDragEnd","closeDialog","clickOk","genKey","KeycodeInfo","long","short","ownProps","KeycodeAddKey","addAnyKey","AddAnyKeycodeKey","KeycodeCategories","Keycodes","onChangeMacroText","setMacro","loadKeycodeInfoForAllCategories","_hidInstance","cat","selectCategory","Macro","macroText","marginTop","placeholder","href","releaseSelectedKey","KEY_SIZE","Keycap","onDragOver","roofColor","roofEdgeColor","model","styleAbsolute","style2","isOddly","styleAbsolute2","styleTransform","width","top","left","width2","height2","top2","left2","baseStyle2","KEY_CAP_MARGIN_WIDTH","coverStyle","KEY_CAP_BORDER","roofStyle","borderColor","roofStyle2","background","labelsStyle","KEY_CAP_MARGIN_HEIGHT","optionLabel","isSelectedKey","orgKey","dstKey","preventDefault","onDragLeave","onDrop","onDropKeycode","onClickKeycap","KeyLabel","hasDiff","debug","split","labelSize","invisible","StyledBadge","withStyles","_","badge","right","padding","minWidth","borderRadius","Badge","OPTION_DEFAULT","KeyModel","op","location","x","y","c","r","rx","ry","optionChoice","rotate","originLeft","originTop","transformOrigin","keyOp","_x","_y","locs","w","h","x2","y2","w2","h2","d","isNaN","position","transform","rad","Math","PI","x0","y0","x1","cos","sin","max","min","y1","leftBottom","rightBottom","bottom","Current","curr","KeymapItem","_curr","choice","minus","assign","KeyboardModel","km","_km","isArray","parseKeyMap","isDefault","findIndex","optionKeymaps","keymapsList","keyRow","nextRow","keymapItem","setOp","next","prototype","hasOwnProperty","call","minX","Infinity","minY","m","align","choices","origCurr","targetRow","findOrigin","targetItem","current","searchOriginalPosition","diffX","diffY","flat","endRight","endBottom","LayoutOptionsDialog","keyboardLayoutOptions","selectedLayoutOptions","selectedKeyboardOptions","PaperComponent","cursor","dividers","Grid","container","spacing","OptionRowComponent","selectedOption","setLayoutOption","xs","Switch","checked","inputProps","Select","handle","cancel","Paper","Keyboards","onClickLayer","onClickLayerNumber","openLayoutOptionDialog","setKeyboardHeight","border","hasKeyboardOptions","Chip","isDecal","closeLayoutOptionDialog","appName","appVersion","Keydiff","origKey","startIcon","Clear","Keymap","KeyboardList","onClickItem","onClickConnectAnotherKeyboard","KeyboardDefinitionForm","onDropFile","files","dataTransfer","onDragOverFile","onChangeFile","onDragLeaveFile","KEY_DESCRIPTIONS","Key","KC_NO","KC_TRANSPARENT","KC_A","KC_B","KC_C","KC_D","KC_E","KC_F","KC_G","KC_H","KC_I","KC_J","KC_K","KC_L","KC_M","KC_N","KC_O","KC_P","KC_Q","KC_R","KC_S","KC_T","KC_U","KC_V","KC_W","KC_X","KC_Y","KC_Z","KC_1","KC_2","KC_3","KC_4","KC_5","KC_6","KC_7","KC_8","KC_9","KC_0","KC_ENTER","KC_ESCAPE","KC_BSPACE","KC_TAB","KC_SPACE","KC_MINUS","KC_EQUAL","KC_LBRACKET","KC_RBRACKET","KC_BSLASH","KC_NONUS_HASH","KC_SCOLON","KC_QUOTE","KC_GRAVE","KC_COMMA","KC_DOT","KC_SLASH","KC_CAPSLOCK","KC_F1","KC_F2","KC_F3","KC_F4","KC_F5","KC_F6","KC_F7","KC_F8","KC_F9","KC_F10","KC_F11","KC_F12","KC_PSCREEN","KC_SCROLLLOCK","KC_PAUSE","KC_INSERT","KC_HOME","KC_PGUP","KC_DELETE","KC_END","KC_PGDOWN","KC_RIGHT","KC_LEFT","KC_DOWN","KC_UP","KC_NUMLOCK","KC_KP_SLASH","KC_KP_ASTERISK","KC_KP_MINUS","KC_KP_PLUS","KC_KP_ENTER","KC_KP_1","KC_KP_2","KC_KP_3","KC_KP_4","KC_KP_5","KC_KP_6","KC_KP_7","KC_KP_8","KC_KP_9","KC_KP_0","KC_KP_DOT","KC_NONUS_BSLASH","KC_APPLICATION","KC_POWER","KC_KP_EQUAL","KC_F13","KC_F14","KC_F15","KC_F16","KC_F17","KC_F18","KC_F19","KC_F20","KC_F21","KC_F22","KC_F23","KC_F24","KC_EXECUTE","KC_HELP","KC_MENU","KC_SELECT","KC_STOP","KC_AGAIN","KC_UNDO","KC_CUT","KC_COPY","KC_PASTE","KC_FIND","KC__MUTE","KC__VOLUP","KC__VOLDOWN","KC_LOCKING_CAPS","KC_LOCKING_NUM","KC_LOCKING_SCROLL","KC_KP_COMMA","KC_KP_EQUAL_AS400","KC_INT1","KC_INT2","KC_INT3","KC_INT4","KC_INT5","KC_INT6","KC_INT7","KC_INT8","KC_INT9","KC_LANG1","KC_LANG2","KC_LANG3","KC_LANG4","KC_LANG5","KC_LANG6","KC_LANG7","KC_LANG8","KC_LANG9","KC_ALT_ERASE","KC_SYSREQ","KC_CANCEL","KC_CLEAR","KC_PRIOR","KC_RETURN","KC_SEPARATOR","KC_OUT","KC_OPER","KC_CLEAR_AGAIN","KC_CRSEL","KC_EXSEL","KC_LCTRL","KC_LSHIFT","KC_LALT","KC_LGUI","KC_RCTRL","KC_RSHIFT","KC_RALT","KC_RGUI","KC_SYSTEM_POWER","KC_SYSTEM_SLEEP","KC_SYSTEM_WAKE","KC_AUDIO_MUTE","KC_AUDIO_VOL_UP","KC_AUDIO_VOL_DOWN","KC_MEDIA_NEXT_TRACK","KC_MEDIA_PREV_TRACK","KC_MEDIA_STOP","KC_MEDIA_PLAY_PAUSE","KC_MEDIA_SELECT","KC_MEDIA_EJECT","KC_MAIL","KC_CALCULATOR","KC_MY_COMPUTER","KC_WWW_SEARCH","KC_WWW_HOME","KC_WWW_BACK","KC_WWW_FORWARD","KC_WWW_STOP","KC_WWW_REFRESH","KC_WWW_FAVORITES","KC_MEDIA_FAST_FORWARD","KC_MEDIA_REWIND","KC_BRIGHTNESS_UP","KC_BRIGHTNESS_DOWN","RESET","DEBUG","EEPROM_RESET","AU_ON","AU_OFF","AU_TOG","CLICKY_TOGGLE","CLICKY_UP","CLICKY_DOWN","CLICKY_RESET","MU_ON","MU_OFF","MU_TOG","MU_MOD","BL_TOGG","BL_STEP","BL_ON","BL_OFF","BL_INC","BL_DEC","BL_BRTG","MAGIC_SWAP_CONTROL_CAPSLOCK","MAGIC_UNSWAP_CONTROL_CAPSLOCK","MAGIC_CAPSLOCK_TO_CONTROL","MAGIC_UNCAPSLOCK_TO_CONTROL","MAGIC_SWAP_LCTL_LGUI","MAGIC_UNSWAP_LCTL_LGUI","MAGIC_SWAP_RCTL_RGUI","MAGIC_UNSWAP_RCTL_RGUI","MAGIC_SWAP_CTL_GUI","MAGIC_UNSWAP_CTL_GUI","MAGIC_TOGGLE_CTL_GUI","MAGIC_SWAP_LALT_LGUI","MAGIC_UNSWAP_LALT_LGUI","MAGIC_SWAP_RALT_RGUI","MAGIC_UNSWAP_RALT_RGUI","MAGIC_SWAP_ALT_GUI","MAGIC_UNSWAP_ALT_GUI","MAGIC_TOGGLE_ALT_GUI","MAGIC_NO_GUI","MAGIC_UNNO_GUI","MAGIC_SWAP_GRAVE_ESC","MAGIC_UNSWAP_GRAVE_ESC","MAGIC_SWAP_BACKSLASH_BACKSPACE","MAGIC_UNSWAP_BACKSLASH_BACKSPACE","MAGIC_HOST_NKRO","MAGIC_UNHOST_NKRO","MAGIC_TOGGLE_NKRO","MAGIC_EE_HANDS_LEFT","MAGIC_EE_HANDS_RIGHT","OUT_AUTO","OUT_USB","OUT_BT","DYN_REC_START1","DYN_REC_START2","DYN_MACRO_PLAY1","DYN_MACRO_PLAY2","DYN_REC_STOP","GRAVE_ESC","KC_LOCK","KC_LEAD","KC_MS_UP","KC_MS_DOWN","KC_MS_LEFT","KC_MS_RIGHT","KC_MS_BTN1","KC_MS_BTN2","KC_MS_BTN3","KC_MS_BTN4","KC_MS_BTN5","KC_MS_WH_UP","KC_MS_WH_DOWN","KC_MS_WH_LEFT","KC_MS_WH_RIGHT","KC_MS_ACCEL0","KC_MS_ACCEL1","KC_MS_ACCEL2","KC_MEH","KC_HYPR","RGB_TOG","RGB_MODE_FORWARD","RGB_MODE_REVERSE","RGB_HUI","RGB_HUD","RGB_SAI","RGB_SAD","RGB_VAI","RGB_VAD","RGB_MODE_PLAIN","RGB_MODE_BREATHE","RGB_MODE_RAINBOW","RGB_MODE_SWIRL","RGB_MODE_SNAKE","RGB_MODE_KNIGHT","RGB_MODE_XMAS","RGB_MODE_GRADIENT","RGB_MODE_RGBTEST","RGB_SPI","RGB_SPD","PRINT_ON","PRINT_OFF","KC_TILDE","KC_EXCLAIM","KC_AT","KC_HASH","KC_DOLLAR","KC_PERCENT","KC_CIRCUMFLEX","KC_AMPERSAND","KC_ASTERISK","KC_LEFT_PAREN","KC_RIGHT_PAREN","KC_UNDERSCORE","KC_PLUS","KC_LEFT_CURLY_BRACE","KC_RIGHT_CURLY_BRACE","KC_PIPE","KC_COLON","KC_DOUBLE_QUOTE","KC_LEFT_ANGLE_BRACKET","KC_RIGHT_ANGLE_BRACKET","KC_QUESTION","KC_LCPO","KC_RCPC","KC_LSPO","KC_RSPC","KC_LAPO","KC_RAPC","KC_SFTENT","SW_ON","SW_OFF","SH_MON","SH_MOFF","SH_TG","SH_TT","SH_OS","UNICODE_MODE_FORWARD","UNICODE_MODE_REVERSE","UNICODE_MODE_MAC","UNICODE_MODE_LNX","UNICODE_MODE_WIN","UNICODE_MODE_BSD","UNICODE_MODE_WINC","Content","includes","ConnectedKeyboard","Desc","desc","Configure","displayedNoficationIds","storeDisplayedNotification","removeDisplayedNotification","k","supportedBrowser","signedInForClosedBeta","enqueueSnackbar","autoHideDuration","onExited","removeNotification","action","closeSnackbar","appPackage","setConnectionEventHandler","connectedKeyboard","onConnectKeyboard","disconnectedKeyboard","onDisconnectKeyboard","onCloseKeyboard","subscribeAuthStatus","fetchClosedBetaUsers","then","email","initAppPackage","updateTitle","updateNotifications","initKeyboardConnectionEventHandler","signInWithGitHubForClosedBeta","CssBaseline","withSnackbar","test","Hid","useState","webHid","setKeyboard","setMessage","setProductName","setVendorId","setProductId","useFilter","setUseFilter","connectedKeyboards","setConnectedKeyboards","selectedKeyboardValue","setSelectedKeyboardValue","setLayerCount","setLayer","setRow","setColumn","setCode","layer2","setLayer2","setRowCount","setColumnCount","bufferOffset","setBufferOffset","bufferSize","setBufferSize","useEffect","newConnectedKeyboards","handleConnectClick","handleCloseClick","handleDynamicKeymapGetLayerCount","handleGetConnectedKeyboardsClick","handleOpenClick","handleLayerChange","handleLayer2Change","handleRowChange","handleRowCountChange","handleColumnChange","handleColumnCountChange","handleCodeChange","handleBufferOffsetChange","handleBufferSizeChange","handleFetchKeymapClick","fetchKeymapResult","handleDynamicKeymapGetKeycodeClick","handleDynamicKeymapSetKeycodeClick","handleReadBufferClick","htmlFor","KeycodeArray","FeatureCard","sm","md","Card","CardMedia","image","imageTitle","CardContent","Typography","gutterBottom","component","description","Top","onClickStartRemap","history","AppBar","Toolbar","noWrap","Container","maxWidth","paragraph","justify","rel","card1","card2","card3","card5","card4","Date","getFullYear","withRouter","App","dense","preventDuplicate","hideIconVariant","maxSnack","anchorOrigin","vertical","horizontal","classes","variantSuccess","variantError","variantWarning","warning","variantInfo","exact","path","backgroundColor","withTheme","keyboardDefinitionFormReducer","draft","storageReducer","appReducer","hidReducer","keyboardsReducer","keycodesReducer","keydiffReducer","keycodeAddKeyReducer","keycodekeyReducer","layoutOptionsReducer","notificationReducer","now","headerReducer","reducers","immer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","errorHandler","require","start","store","createStore","composeWithDevTools","applyMiddleware","thunk","report","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1a3fd252.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.79b204bc.png\";","export function hexadecimal(num: number, digit = 0): string {\n  const hex = Array(digit).fill('0').join('') + new Number(num).toString(16);\n  return `0x${hex.slice(-digit).toUpperCase()}`;\n}\n","import React from 'react';\nimport './ConnectionModal.scss';\nimport { Backdrop, Fade, Modal } from '@material-ui/core';\n\ntype OnCloseHandler = () => void;\n\ninterface IConnectionProps {\n  open: boolean;\n  onClose: OnCloseHandler;\n}\n\nexport default class ConnectionModal extends React.Component<\n  IConnectionProps,\n  {}\n> {\n  constructor(props: IConnectionProps | Readonly<IConnectionProps>) {\n    super(props);\n  }\n  render() {\n    return (\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className=\"connection-modal\"\n        open={this.props.open}\n        onClose={this.props.onClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={this.props.open}>\n          <div className=\"paper\">\n            <h2>Device list</h2>\n            <p>Lunakey Mini (VID: 0x5954 / PID: 0x0001)</p>\n          </div>\n        </Fade>\n      </Modal>\n    );\n  }\n}\n","import React from 'react';\nimport './Header.scss';\nimport logo from '../../../assets/images/logo.png';\nimport { hexadecimal } from '../../../utils/StringUtils';\nimport { Button, CircularProgress, Menu, MenuItem } from '@material-ui/core';\nimport { ArrowDropDown, Link, LinkOff } from '@material-ui/icons';\nimport ConnectionModal from '../modals/connection/ConnectionModal';\nimport { HeaderActionsType, HeaderStateType } from './Header.container';\n\ntype HeaderState = {\n  connectionStateEl: any;\n};\n\ntype OwnProps = {};\n\ntype HeaderProps = OwnProps &\n  Partial<HeaderActionsType> &\n  Partial<HeaderStateType>;\n\nexport default class Header extends React.Component<HeaderProps, HeaderState> {\n  constructor(props: HeaderProps | Readonly<HeaderProps>) {\n    super(props);\n    this.state = {\n      connectionStateEl: null,\n    };\n  }\n\n  get openConnectionStateMenu() {\n    return Boolean(this.state.connectionStateEl);\n  }\n\n  onCloseConnectionStateMenu = () => {\n    this.setState({ connectionStateEl: null });\n  };\n\n  onClickDevice = (event: React.MouseEvent) => {\n    this.setState({ connectionStateEl: event.currentTarget });\n  };\n\n  onClickConnectionMenuItemNewDevice = () => {\n    this.onCloseConnectionStateMenu();\n  };\n\n  render() {\n    const hasKeysToFlush = this.props.remaps!.reduce((has, v) => {\n      return 0 < Object.values(v).length || has;\n    }, false);\n\n    return (\n      <header className=\"header\">\n        <img src={logo} alt=\"logo\" className=\"logo\" />\n        <div\n          className={[\n            'kbd-select',\n            this.props.showKeyboardList ? '' : 'hidden',\n          ].join(' ')}\n          onClick={this.onClickDevice}\n        >\n          <div className=\"kbd-name\">\n            <h2>{this.props.productName}</h2>\n            <div className=\"ids\">\n              VID: {hexadecimal(this.props.vendorId!, 4)} / PID:{' '}\n              {hexadecimal(this.props.productId!, 4)}\n            </div>\n          </div>\n          <ArrowDropDown />\n        </div>\n        <div className=\"status\">\n          <Menu\n            anchorEl={this.state.connectionStateEl}\n            keepMounted\n            open={this.openConnectionStateMenu}\n            onClose={this.onCloseConnectionStateMenu}\n            PaperProps={{\n              style: {\n                maxHeight: 250,\n              },\n            }}\n          >\n            {this.props.keyboards!.map((kbd, index) => {\n              const info = kbd.getInformation();\n              const isOpenedKbd = this.props.openedKeyboard == kbd;\n              const linking = isOpenedKbd ? 'link-on' : 'link-off';\n              return (\n                <MenuItem\n                  key={index}\n                  onClick={\n                    isOpenedKbd\n                      ? undefined\n                      : this.props.onClickKeyboardMenuItem!.bind(this, kbd)\n                  }\n                  disabled={isOpenedKbd}\n                >\n                  <div className=\"device-item\">\n                    {isOpenedKbd ? (\n                      <Link fontSize=\"small\" className=\"link-icon link-on\" />\n                    ) : (\n                      <LinkOff\n                        fontSize=\"small\"\n                        className=\"link-icon link-off\"\n                      />\n                    )}\n                    <div className={['device-name', linking].join(' ')}>\n                      {info.productName}\n                      <span className=\"device-ids\">\n                        (VID: {hexadecimal(info.vendorId, 4)} / PID:{' '}\n                        {hexadecimal(info.productId, 4)})\n                      </span>\n                    </div>\n                  </div>\n                </MenuItem>\n              );\n            })}\n\n            <MenuItem\n              key=\"another\"\n              onClick={this.onClickConnectionMenuItemNewDevice}\n            >\n              <div className=\"another-device-wrapper\">\n                <Button\n                  size=\"small\"\n                  color=\"primary\"\n                  className=\"another-device\"\n                  onClick={this.props.onClickAnotherKeyboard?.bind(this)}\n                >\n                  + Connect another device\n                </Button>\n              </div>\n            </MenuItem>\n          </Menu>\n        </div>\n        <div\n          className={[\n            'buttons',\n            this.props.openedKeyboard ? '' : 'hidden',\n          ].join(' ')}\n        >\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            variant=\"contained\"\n            className=\"flush-btn\"\n            disabled={this.props.flushLoading || !hasKeysToFlush}\n            onClick={this.props.onClickFlushButton}\n          >\n            FLUSH\n          </Button>\n          {this.props.flushLoading && (\n            <CircularProgress size={24} className=\"flush-loading\" />\n          )}\n        </div>\n        {this.props.draggingKey && (\n          <div className=\"dragMask\" style={{ marginLeft: -8 }}></div>\n        )}\n        <ConnectionModal open={false} onClose={() => {}} />\n      </header>\n    );\n  }\n}\n","/* eslint-disable no-undef */\n/* eslint-disable no-unused-vars */\nexport interface IResult {\n  readonly success: boolean;\n  readonly error?: string;\n  readonly cause?: any;\n}\n\nexport interface IConnectParams {\n  readonly vendorId: number;\n  readonly productId: number;\n}\n\nexport interface IDeviceInformation {\n  readonly vendorId: number;\n  readonly productId: number;\n  readonly productName: string;\n}\n\nexport interface IConnectionEventHandler {\n  connect: (keyboard: IKeyboard) => void;\n  disconnect: (keyboard: IKeyboard) => void;\n  close: (keyboard: IKeyboard) => void;\n}\n\nexport interface IKeycodeInfo {\n  code: number;\n  name: {\n    long: string;\n    short: string;\n  };\n  label: string;\n}\n\nexport interface IKeycodeCategoryInfo {\n  category: string;\n  codes: number[];\n}\n\nexport const IKeycodeCategory = {\n  BASIC: 'basic',\n  LAYERS: 'layers',\n  LIGHTING: 'lighting',\n  MACRO: 'macro',\n  MEDIA: 'media',\n  NUMBER: 'number',\n  SPECIAL: 'special',\n  ANY: 'any',\n} as const;\n\nexport interface IFetchLayerCountResult extends IResult {\n  layerCount?: number;\n}\n\nexport interface IKeymap {\n  isAny: boolean;\n  code: number;\n  keycodeInfo?: IKeycodeInfo;\n}\n\nexport type IKeymaps = {\n  [pos: string]: IKeymap;\n};\n\nexport interface IFetchKeymapResult extends IResult {\n  keymap?: IKeymaps;\n}\n\nexport interface IKeyboard {\n  getDevice(): any;\n  getHid(): IHid;\n  getInformation(): IDeviceInformation;\n  open(): Promise<IResult>;\n  isOpened(): boolean;\n  isSameDevice(target: IKeyboard): boolean;\n  enqueue(command: ICommand): Promise<IResult>;\n  close(): Promise<void>;\n  fetchLayerCount(): Promise<IFetchLayerCountResult>;\n  fetchKeymaps(\n    layer: number,\n    rowCount: number,\n    columnCount: number\n  ): Promise<IFetchKeymapResult>;\n  updateKeymap(\n    layer: number,\n    row: number,\n    column: number,\n    code: number\n  ): Promise<IResult>;\n}\n\nexport interface ICommand {\n  sendReport(device: any): Promise<void>;\n  handleInputReport(data: any): Promise<void>;\n  canHandleInputReport(data: any): boolean;\n}\n\nexport interface IConnectResult extends IResult {\n  keyboard?: IKeyboard;\n}\n\nexport interface IHid {\n  detectKeyboards(): Promise<IKeyboard[]>;\n  setConnectionEventHandler(handler: IConnectionEventHandler): void;\n  connect(connectParams?: IConnectParams): Promise<IConnectResult>;\n  getKeymapCandidatesByCategory(category: string): IKeymap[];\n  getKeymap(code: number): IKeymap;\n  close(keyboard: IKeyboard): void;\n}\n","import {\n  ICommandRequest,\n  ICommandResponse,\n  ICommandResponseHandler,\n} from './WebHid';\nimport { ICommand } from './Hid';\n\nexport abstract class AbstractCommand<\n  TRequest extends ICommandRequest,\n  TResponse extends ICommandResponse\n> implements ICommand {\n  private readonly request: TRequest;\n  private readonly responseHandler: ICommandResponseHandler<TResponse>;\n\n  static OUTPUT_REPORT_ID: number = 0x00;\n\n  constructor(\n    request: TRequest,\n    responseHandler: ICommandResponseHandler<TResponse>\n  ) {\n    this.request = request;\n    this.responseHandler = responseHandler;\n  }\n\n  protected getRequest(): TRequest {\n    return this.request;\n  }\n\n  protected getResponseHandler(): ICommandResponseHandler<TResponse> {\n    return this.responseHandler;\n  }\n\n  abstract createReport(): Uint8Array;\n  // eslint-disable-next-line no-unused-vars\n  abstract createResponse(resultArray: Uint8Array): TResponse;\n  // eslint-disable-next-line no-unused-vars\n  abstract isSameRequest(resultArray: Uint8Array): boolean;\n\n  async sendReport(device: any): Promise<void> {\n    try {\n      const outputReport = this.createReport();\n      await device.sendReport(AbstractCommand.OUTPUT_REPORT_ID, outputReport);\n    } catch (error) {\n      await this.getResponseHandler()({\n        success: false,\n        error: 'Sending report failed.',\n        cause: error,\n      });\n    }\n  }\n\n  async handleInputReport(data: any): Promise<void> {\n    const resultArray = new Uint8Array(data.data.buffer);\n    await this.getResponseHandler()({\n      success: true,\n      response: this.createResponse(resultArray),\n    });\n  }\n\n  canHandleInputReport(data: any): boolean {\n    const resultArray = new Uint8Array(data.data.buffer);\n    return this.isSameRequest(resultArray);\n  }\n}\n\nexport interface ILightingGetValueResponse extends ICommandResponse {\n  value: number;\n}\n\nexport class LightingGetValueCommand extends AbstractCommand<\n  ICommandRequest,\n  ILightingGetValueResponse\n> {\n  createReport(): Uint8Array {\n    return new Uint8Array([0x08, 0x81]);\n  }\n\n  createResponse(resultArray: Uint8Array): ILightingGetValueResponse {\n    return {\n      value: resultArray[2],\n    };\n  }\n\n  isSameRequest(resultArray: Uint8Array): boolean {\n    return resultArray[0] === 0x08 && resultArray[1] === 0x81;\n  }\n}\n\nexport interface ILightingSetValueRequest extends ICommandRequest {\n  value: number;\n}\n\nexport interface ILightingSetValueResponse extends ICommandResponse {\n  value: number;\n}\n\nexport class LightingSetValueCommand extends AbstractCommand<\n  ILightingSetValueRequest,\n  ILightingSetValueResponse\n> {\n  createReport(): Uint8Array {\n    return new Uint8Array([0x07, 0x81, this.getRequest().value]);\n  }\n\n  createResponse(resultArray: Uint8Array): ILightingSetValueResponse {\n    return {\n      value: resultArray[2],\n    };\n  }\n\n  isSameRequest(resultArray: Uint8Array): boolean {\n    return (\n      resultArray[0] === 0x07 &&\n      resultArray[1] === 0x81 &&\n      resultArray[2] === this.getRequest().value\n    );\n  }\n}\n\nexport interface IDynamicKeymapGetKeycodeRequest extends ICommandRequest {\n  layer: number;\n  row: number;\n  column: number;\n}\n\nexport interface IDynamicKeymapGetKeycodeResponse extends ICommandResponse {\n  layer: number;\n  row: number;\n  column: number;\n  code: number;\n}\n\nexport class DynamicKeymapGetKeycodeCommand extends AbstractCommand<\n  IDynamicKeymapGetKeycodeRequest,\n  IDynamicKeymapGetKeycodeResponse\n> {\n  createReport(): Uint8Array {\n    const req = this.getRequest();\n    return new Uint8Array([0x04, req.layer, req.row, req.column]);\n  }\n\n  createResponse(resultArray: Uint8Array): IDynamicKeymapGetKeycodeResponse {\n    const req = this.getRequest();\n    const code = (resultArray[4] << 8) | resultArray[5];\n    return {\n      layer: req.layer,\n      row: req.row,\n      column: req.column,\n      code,\n    };\n  }\n\n  isSameRequest(resultArray: Uint8Array): boolean {\n    const req = this.getRequest();\n    return (\n      resultArray[0] === 0x04 &&\n      resultArray[1] === req.layer &&\n      resultArray[2] === req.row &&\n      resultArray[3] === req.column\n    );\n  }\n}\n\nexport interface IDynamicKeymapSetKeycodeRequest extends ICommandRequest {\n  layer: number;\n  row: number;\n  column: number;\n  code: number;\n}\n\nexport interface IDynamicKeymapSetKeycodeResponse extends ICommandResponse {\n  layer: number;\n  row: number;\n  column: number;\n  code: number;\n}\n\nexport class DynamicKeymapSetKeycodeCommand extends AbstractCommand<\n  IDynamicKeymapSetKeycodeRequest,\n  IDynamicKeymapSetKeycodeResponse\n> {\n  createReport(): Uint8Array {\n    const req = this.getRequest();\n    return new Uint8Array([\n      0x05,\n      req.layer,\n      req.row,\n      req.column,\n      req.code >> 8,\n      req.code & 0xff,\n    ]);\n  }\n\n  createResponse(resultArray: Uint8Array): IDynamicKeymapSetKeycodeResponse {\n    const req = this.getRequest();\n    const code = (resultArray[4] << 8) | resultArray[5];\n    return {\n      layer: req.layer,\n      row: req.row,\n      column: req.column,\n      code,\n    };\n  }\n\n  isSameRequest(resultArray: Uint8Array): boolean {\n    const req = this.getRequest();\n    return (\n      resultArray[0] === 0x05 &&\n      resultArray[1] === req.layer &&\n      resultArray[2] === req.row &&\n      resultArray[3] === req.column &&\n      resultArray[4] === req.code >> 8 &&\n      resultArray[5] === (req.code & 0xff)\n    );\n  }\n}\n\nexport interface IDynamicKeymapGetLayerCountResponse extends ICommandResponse {\n  value: number;\n}\n\nexport class DynamicKeymapGetLayerCountCommand extends AbstractCommand<\n  ICommandRequest,\n  IDynamicKeymapGetLayerCountResponse\n> {\n  createReport(): Uint8Array {\n    return new Uint8Array([0x11]);\n  }\n\n  createResponse(resultArray: Uint8Array): IDynamicKeymapGetLayerCountResponse {\n    return {\n      value: resultArray[1],\n    };\n  }\n\n  isSameRequest(resultArray: Uint8Array): boolean {\n    return resultArray[0] === 0x11;\n  }\n}\n\nexport interface IDynamicKeymapReadBufferRequest extends ICommandRequest {\n  offset: number;\n  size: number;\n}\n\nexport interface IDynamicKeymapReadBufferResponse extends ICommandResponse {\n  offset: number;\n  size: number;\n  buffer: Uint8Array;\n}\n\nexport class DynamicKeymapReadBufferCommand extends AbstractCommand<\n  IDynamicKeymapReadBufferRequest,\n  IDynamicKeymapReadBufferResponse\n> {\n  createReport(): Uint8Array {\n    const req = this.getRequest();\n    return new Uint8Array([0x12, req.offset >> 8, req.offset & 0xff, req.size]);\n  }\n\n  createResponse(resultArray: Uint8Array): IDynamicKeymapReadBufferResponse {\n    const offset = (resultArray[1] << 8) | resultArray[2];\n    const size = resultArray[3];\n    return {\n      offset,\n      size,\n      buffer: resultArray.slice(4),\n    };\n  }\n\n  isSameRequest(resultArray: Uint8Array): boolean {\n    const req = this.getRequest();\n    return (\n      resultArray[0] === 0x12 &&\n      resultArray[1] === req.offset >> 8 &&\n      resultArray[2] === (req.offset & 0xff) &&\n      resultArray[3] === req.size\n    );\n  }\n}\n","/* eslint-disable no-undef */\nimport {\n  ICommand,\n  IConnectParams,\n  IKeyboard,\n  IHid,\n  IDeviceInformation,\n  IResult,\n  IConnectResult,\n  IConnectionEventHandler,\n  IKeycodeInfo,\n  IKeycodeCategoryInfo,\n  IFetchKeymapResult,\n  IFetchLayerCountResult,\n  IKeymap,\n} from './Hid';\nimport keycodeArray from './assets/keycodes.json';\nimport basic from './assets/keycodes-basic.json';\nimport layers from './assets/keycodes-layers.json';\nimport lighting from './assets/keycodes-lighting.json';\nimport macro from './assets/keycodes-macro.json';\nimport media from './assets/keycodes-media.json';\nimport kp from './assets/keycodes-number.json';\nimport special from './assets/keycodes-special.json';\nimport {\n  DynamicKeymapGetLayerCountCommand,\n  DynamicKeymapReadBufferCommand,\n  DynamicKeymapSetKeycodeCommand,\n  IDynamicKeymapReadBufferResponse,\n} from './Commands';\n\nconst createKeymap = (code: number): IKeymap => ({\n  code,\n  isAny: false,\n  keycodeInfo: (keycodeArray as IKeycodeInfo[]).find(\n    (keycode) => keycode.code === code\n  )!,\n});\n\nconst basicKeymaps: IKeymap[] = (basic as IKeycodeCategoryInfo).codes.map(\n  (code) => createKeymap(code)\n);\nconst layersKeymaps: IKeymap[] = (layers as IKeycodeCategoryInfo).codes.map(\n  (code) => createKeymap(code)\n);\nconst lightingKeymaps: IKeymap[] = (lighting as IKeycodeCategoryInfo).codes.map(\n  (code) => createKeymap(code)\n);\nconst macroKeymaps: IKeymap[] = (macro as IKeycodeCategoryInfo).codes.map(\n  (code) => createKeymap(code)\n);\nconst mediaKeymaps: IKeymap[] = (media as IKeycodeCategoryInfo).codes.map(\n  (code) => createKeymap(code)\n);\nconst numberKeymaps: IKeymap[] = (kp as IKeycodeCategoryInfo).codes.map(\n  (code) => createKeymap(code)\n);\nconst specialKeymaps: IKeymap[] = (special as IKeycodeCategoryInfo).codes.map(\n  (code) => createKeymap(code)\n);\n\nconst categoryToKeymapsMap: { [p: string]: IKeymap[] } = {\n  basic: basicKeymaps,\n  layers: layersKeymaps,\n  lighting: lightingKeymaps,\n  macro: macroKeymaps,\n  media: mediaKeymaps,\n  number: numberKeymaps,\n  special: specialKeymaps,\n};\n\nexport class Keyboard implements IKeyboard {\n  private readonly hid: IHid;\n  private readonly device: any;\n  private commandQueue: ICommand[];\n\n  constructor(hid: IHid, device: any) {\n    this.hid = hid;\n    this.commandQueue = [];\n    this.device = device;\n  }\n\n  getHid(): IHid {\n    return this.hid;\n  }\n\n  getInformation(): IDeviceInformation {\n    return {\n      vendorId: this.device.vendorId,\n      productId: this.device.productId,\n      productName: this.device.productName,\n    };\n  }\n\n  isOpened(): boolean {\n    return this.device.opened;\n  }\n\n  async close(): Promise<void> {\n    try {\n      this.getDevice().removeEventListener(\n        'inputreport',\n        this.handleInputReport\n      );\n      await this.device.close();\n    } catch (error) {\n      console.log(error);\n      // Ignore.\n    }\n  }\n\n  getDevice(): any {\n    return this.device;\n  }\n\n  isSameDevice(target: IKeyboard): boolean {\n    return this.device === target.getDevice();\n  }\n\n  async open(): Promise<IResult> {\n    if (this.isOpened()) {\n      return {\n        success: false,\n        error: 'The keyboard already connected and opened.',\n      };\n    }\n    const device = this.getDevice();\n    try {\n      await device.open();\n      device.addEventListener('inputreport', this.handleInputReport);\n    } catch (error) {\n      return {\n        success: false,\n        error: 'The device cannot be opened.',\n        cause: error,\n      };\n    }\n    return {\n      success: true,\n    };\n  }\n\n  handleInputReport = async (e: any): Promise<void> => {\n    this.outputUint8Array(new Uint8Array(e.data.buffer));\n    if (this.commandQueue.length > 0) {\n      const command = this.commandQueue[0];\n      if (command!.canHandleInputReport(e)) {\n        this.commandQueue.shift();\n        await command!.handleInputReport(e);\n        if (this.commandQueue.length > 0) {\n          await this.commandQueue[0].sendReport(this.getDevice());\n          return;\n        }\n      } else {\n        // FIXME: 2021/01/16 For Windows:\n        // If command.canHandleInputReport === false, Windows Chrome might return duplicate response.\n        // The response should be ignored, and should wait a next response.\n        console.warn('Duplicate response was handled. Ignore.');\n      }\n    } else {\n      console.log(\n        'Bytes received but the command queue is empty. Close the keyboard.'\n      );\n      this.hid.close(this);\n    }\n  };\n\n  protected outputUint8Array(array: Uint8Array) {\n    let lines = '';\n    let out = '';\n    let ascii = '';\n    for (let i = 0; i < array.length; i++) {\n      // out += String.fromCharCode(array[i]);\n      let value = Number(array[i]).toString(16).toUpperCase();\n      if (value.length === 1) {\n        value = '0' + value;\n      }\n      out += value;\n      if (i % 2 !== 0) {\n        out += ' ';\n      }\n      if (0x20 <= array[i] && array[i] <= 0x7e) {\n        ascii += String.fromCharCode(array[i]);\n      } else {\n        ascii += '.';\n      }\n      if ((i + 1) % 16 === 0) {\n        lines += out + ' ' + ascii + '\\n';\n        out = '';\n        ascii = '';\n      }\n    }\n    if (out) {\n      lines += out + ' ' + ascii + '\\n';\n    }\n    console.log(lines);\n  }\n\n  async enqueue(command: ICommand): Promise<IResult> {\n    if (this.isOpened()) {\n      this.commandQueue.push(command);\n      if (this.commandQueue.length === 1) {\n        await this.commandQueue[0].sendReport(this.getDevice());\n      }\n      return {\n        success: true,\n      };\n    } else {\n      return {\n        success: false,\n        error: 'Not connected or opened.',\n      };\n    }\n  }\n\n  async fetchKeymaps(\n    layer: number,\n    rowCount: number,\n    columnCount: number\n  ): Promise<IFetchKeymapResult> {\n    const totalSize = rowCount * columnCount * 2;\n    let offset = layer * totalSize;\n    const commandResults: Promise<IDynamicKeymapReadBufferResponse>[] = [];\n    let remainingSize = totalSize;\n    do {\n      let size: number;\n      if (28 < remainingSize) {\n        size = 28;\n        remainingSize = remainingSize - 28;\n      } else {\n        size = remainingSize;\n        remainingSize = 0;\n      }\n      commandResults.push(\n        new Promise<IDynamicKeymapReadBufferResponse>((resolve, reject) => {\n          const command = new DynamicKeymapReadBufferCommand(\n            {\n              offset,\n              size,\n            },\n            async (result) => {\n              if (result.success) {\n                resolve(result.response!);\n              } else {\n                console.log(result.cause!);\n                reject(result.error!);\n              }\n            }\n          );\n          return this.enqueue(command);\n        })\n      );\n      offset = offset + 28;\n    } while (remainingSize !== 0);\n    try {\n      const responses = await Promise.all<IDynamicKeymapReadBufferResponse>(\n        commandResults\n      );\n      let row = 0;\n      let column = 0;\n      const keymapMap: { [pos: string]: IKeymap } = {};\n      responses.forEach((response) => {\n        if (rowCount === row) {\n          return;\n        }\n        const buffer = response.buffer;\n        if (buffer.length % 2 !== 0) {\n          throw new Error(`Invalid buffer size: ${buffer.length}`);\n        }\n        for (let i = 0; i < buffer.length; i += 2) {\n          const code = (buffer[i] << 8) | buffer[i + 1];\n          const keymap = this.hid.getKeymap(code);\n          keymapMap[`${row},${column}`] = keymap;\n          column = column + 1;\n          if (columnCount === column) {\n            column = 0;\n            row = row + 1;\n          }\n          if (rowCount === row) {\n            break;\n          }\n        }\n      });\n      return {\n        success: true,\n        keymap: keymapMap,\n      };\n    } catch (error) {\n      console.log(error);\n      return {\n        success: false,\n        error: 'Fetching keymaps failed.',\n        cause: error,\n      };\n    }\n  }\n\n  fetchLayerCount(): Promise<IFetchLayerCountResult> {\n    return new Promise<IFetchLayerCountResult>((resolve) => {\n      const command = new DynamicKeymapGetLayerCountCommand(\n        {},\n        async (result) => {\n          if (result.success) {\n            resolve({\n              success: true,\n              layerCount: result.response!.value,\n            });\n          } else {\n            resolve({\n              success: false,\n              error: result.error,\n              cause: result.cause,\n            });\n          }\n        }\n      );\n      return this.enqueue(command);\n    });\n  }\n\n  updateKeymap(\n    layer: number,\n    row: number,\n    column: number,\n    code: number\n  ): Promise<IResult> {\n    return new Promise<IResult>((resolve) => {\n      const command = new DynamicKeymapSetKeycodeCommand(\n        {\n          layer,\n          row,\n          column,\n          code,\n        },\n        async (result) => {\n          if (result.success) {\n            resolve({\n              success: true,\n            });\n          } else {\n            resolve({\n              success: false,\n              error: result.error,\n              cause: result.cause,\n            });\n          }\n        }\n      );\n      return this.enqueue(command);\n    });\n  }\n}\n\nexport interface ICommandRequest {}\n\nexport interface ICommandResponse {}\n\nexport interface ICommandResult<T> {\n  success: boolean;\n  response?: T;\n  error?: string;\n  cause?: any;\n}\n\nexport interface ICommandResponseHandler<T extends ICommandResponse> {\n  // eslint-disable-next-line\n  (result: ICommandResult<T>): Promise<void>;\n}\n\nexport class WebHid implements IHid {\n  private handler?: IConnectionEventHandler;\n\n  async detectKeyboards(): Promise<IKeyboard[]> {\n    const devices = await (navigator as any).hid.getDevices();\n    return devices\n      .filter((device: any) => {\n        const collectionInfo = device.collections[0];\n        return (\n          collectionInfo &&\n          collectionInfo.usage === 0x61 &&\n          collectionInfo.usagePage === 0xff60\n        );\n      })\n      .map((device: any) => {\n        return new Keyboard(this, device);\n      });\n  }\n\n  async connect(connectParams?: IConnectParams): Promise<IConnectResult> {\n    let device;\n    try {\n      let devices;\n      if (connectParams) {\n        devices = await (navigator as any).hid.requestDevice({\n          filters: [\n            {\n              vendorId: connectParams.vendorId,\n              productId: connectParams.productId,\n              usagePage: 0xff60,\n              usage: 0x61,\n            },\n          ],\n        });\n      } else {\n        devices = await (navigator as any).hid.requestDevice({\n          filters: [\n            {\n              usagePage: 0xff60,\n              usage: 0x61,\n            },\n          ],\n        });\n      }\n      device = devices[0];\n    } catch (error) {\n      return {\n        success: false,\n        error: 'The connection failed.',\n        cause: error,\n      };\n    }\n    if (device === undefined) {\n      return {\n        success: false,\n        error: 'No device was selected.',\n      };\n    }\n    return {\n      success: true,\n      keyboard: new Keyboard(this, device),\n    };\n  }\n\n  checkViaSupportedDevice(device: any): boolean {\n    const collection = device.collections[0];\n    if (collection) {\n      return collection.usage === 0x61 && collection.usagePage === 0xff60;\n    } else {\n      return false;\n    }\n  }\n\n  setConnectionEventHandler(handler: IConnectionEventHandler): void {\n    (navigator as any).hid.addEventListener('connect', (e: any) => {\n      if (this.checkViaSupportedDevice(e.device)) {\n        handler.connect(new Keyboard(this, e.device));\n      }\n    });\n    (navigator as any).hid.addEventListener('disconnect', (e: any) => {\n      if (this.checkViaSupportedDevice(e.device)) {\n        handler.disconnect(new Keyboard(this, e.device));\n      }\n    });\n    this.handler = handler;\n  }\n\n  getKeymapCandidatesByCategory(category: string): IKeymap[] {\n    return categoryToKeymapsMap[category];\n  }\n\n  getKeymap(code: number): IKeymap {\n    const keycodeInfo = keycodeArray.find(\n      (keycodeInfo) => keycodeInfo.code === code\n    );\n    if (keycodeInfo) {\n      return {\n        code,\n        isAny: false,\n        keycodeInfo,\n      };\n    } else {\n      return {\n        code,\n        isAny: true,\n      };\n    }\n  }\n\n  close(keyboard: IKeyboard): void {\n    this.handler!.close(keyboard);\n  }\n}\n","import firebase from 'firebase';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { IFetchKeyboardDefinitionResult, IStorage } from '../storage/Storage';\nimport { IAuth } from '../auth/Auth';\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGE_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nexport class FirebaseProvider implements IStorage, IAuth {\n  private db: firebase.firestore.Firestore;\n  private auth: firebase.auth.Auth;\n  private unsubscribeAuthStateChanged?: firebase.Unsubscribe;\n\n  constructor() {\n    firebase.initializeApp(config);\n    const app = firebase.app();\n    this.db = app.firestore();\n    this.auth = app.auth();\n  }\n\n  async fetchKeyboardDefinition(\n    vendorId: number,\n    productId: number\n  ): Promise<IFetchKeyboardDefinitionResult> {\n    try {\n      const querySnapshot = await this.db\n        .collection('keyboards')\n        .where('vendor_id', '==', vendorId)\n        .where('product_id', '==', productId)\n        .get();\n      if (querySnapshot.empty) {\n        return {\n          success: true,\n          exists: false,\n        };\n      } else if (querySnapshot.size !== 1) {\n        throw new Error(\n          `There are duplicate keyboard definition documents: ${vendorId}:${productId}`\n        );\n      } else {\n        return {\n          success: true,\n          exists: true,\n          document: {\n            id: querySnapshot.docs[0].id,\n            name: querySnapshot.docs[0].data().name,\n            vendorId: querySnapshot.docs[0].data().vendor_id,\n            productId: querySnapshot.docs[0].data().product_id,\n            json: querySnapshot.docs[0].data().json,\n          },\n        };\n      }\n    } catch (error) {\n      console.error(error);\n      return {\n        success: false,\n        error: 'Fetching the keyboard definition document failed',\n        cause: error,\n      };\n    }\n  }\n\n  async fetchClosedBetaUsers(): Promise<string[]> {\n    const documentSnapshot = await this.db\n      .collection('configurations')\n      .doc('closedbeta')\n      .get();\n    if (documentSnapshot.exists) {\n      return documentSnapshot.data()!.users;\n    } else {\n      return [];\n    }\n  }\n\n  signInWithGitHubForClosedBeta(): Promise<void> {\n    const provider = new firebase.auth.GithubAuthProvider();\n    return this.auth.signInWithRedirect(provider);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  subscribeAuthStatus(callback: (user: firebase.User | null) => void): void {\n    this.unsubscribeAuthStateChanged && this.unsubscribeAuthStateChanged();\n    this.unsubscribeAuthStateChanged = this.auth.onAuthStateChanged(\n      (user: firebase.User | null) => {\n        callback(user);\n      }\n    );\n  }\n}\n","import { NotificationItem } from '../actions/actions';\nimport { Key } from '../components/configure/keycodekey/KeycodeKey.container';\nimport {\n  IHid,\n  IKeyboard,\n  IKeycodeCategory,\n  IKeymap,\n} from '../services/hid/Hid';\nimport { WebHid } from '../services/hid/WebHid';\nimport { FirebaseProvider } from '../services/provider/Firebase';\nimport { IStorage } from '../services/storage/Storage';\nimport { IAuth } from '../services/auth/Auth';\nimport { KeyboardDefinitionSchema } from '../gen/types/KeyboardDefinition';\n\nexport type ISetupPhase =\n  | 'keyboardNotSelected'\n  | 'connectingKeyboard'\n  | 'fetchingKeyboardDefinition'\n  | 'waitingKeyboardDefinitionUpload'\n  | 'openingKeyboard'\n  | 'openedKeyboard';\nexport const SetupPhase: { [p: string]: ISetupPhase } = {\n  keyboardNotSelected: 'keyboardNotSelected',\n  connectingKeyboard: 'connectingKeyboard',\n  fetchingKeyboardDefinition: 'fetchingKeyboardDefinition',\n  waitingKeyboardDefinitionUpload: 'waitingKeyboardDefinitionUpload',\n  openingKeyboard: 'openingKeyboard',\n  openedKeyboard: 'openedKeyboard',\n};\n\nexport type RootState = {\n  entities: {\n    device: {\n      vendorId: number;\n      productId: number;\n      name: string | null;\n      layerCount: number;\n      rowCount: number;\n      columnCount: number;\n      keymaps: {\n        [pos: string]: IKeymap;\n      }[];\n      macros: {\n        [id: number]: string;\n      };\n    };\n    keyboards: IKeyboard[]; // authorized keyboard list\n    keyboard: IKeyboard | null;\n    keyboardDefinition: KeyboardDefinitionSchema | null;\n  };\n  app: {\n    package: {\n      name: string;\n      version: string;\n    };\n    setupPhase: ISetupPhase;\n    remaps: {\n      // remap candidates and show keydiff\n      [pos: string]: IKeymap;\n    }[];\n    notifications: NotificationItem[];\n    keyboardHeight: number;\n  };\n  header: {\n    flushLoading: boolean;\n  };\n  hid: {\n    instance: IHid;\n  };\n  storage: {\n    instance: IStorage;\n  };\n  auth: {\n    instance: IAuth;\n  };\n  keyboards: {\n    selectedPos: string;\n    selectedLayer: number;\n  };\n  keycodes: {\n    category: string;\n    keys: { [category: string]: Key[] };\n  };\n  keycodeKey: {\n    selectedKey: Key | null;\n    hoverKey: Key | null;\n    draggingKey: Key | null;\n  };\n  keydiff: {\n    origin: IKeymap | null;\n    destination: IKeymap | null;\n  };\n  keyboardDefinitionForm: {\n    dragging: boolean;\n  };\n  layoutOptions: {\n    selectedOptions: string[];\n  };\n};\n\nconst firebaseProvider = new FirebaseProvider();\n\nexport const INIT_STATE: RootState = {\n  entities: {\n    device: {\n      vendorId: NaN,\n      productId: NaN,\n      name: null,\n      layerCount: NaN,\n      rowCount: NaN,\n      columnCount: NaN,\n      keymaps: [],\n      macros: {},\n    },\n    keyboards: [],\n    keyboard: null, // hid.keyboards[i]\n    keyboardDefinition: null,\n  },\n  app: {\n    package: {\n      name: '',\n      version: '',\n    },\n    setupPhase: SetupPhase.keyboardNotSelected,\n    remaps: [],\n    notifications: [],\n    keyboardHeight: 295,\n  },\n  header: {\n    flushLoading: false,\n  },\n  hid: {\n    instance: new WebHid(),\n  },\n  storage: {\n    instance: firebaseProvider,\n  },\n  auth: {\n    instance: firebaseProvider,\n  },\n  keyboards: {\n    selectedLayer: NaN,\n    selectedPos: '',\n  },\n  keycodes: {\n    category: IKeycodeCategory.BASIC,\n    keys: {},\n  },\n  keycodeKey: {\n    selectedKey: null,\n    hoverKey: null,\n    draggingKey: null,\n  },\n  keydiff: {\n    origin: null,\n    destination: null,\n  },\n  keyboardDefinitionForm: {\n    dragging: false,\n  },\n  layoutOptions: {\n    selectedOptions: [],\n  },\n};\n","import { AnyKey } from '../components/configure/keycodekey/KeycodeKey';\nimport { Key } from '../components/configure/keycodekey/KeycodeKey.container';\nimport KeyModel from '../models/KeyModel';\nimport { IHid, IKeycodeCategory, IKeymap } from '../services/hid/Hid';\nimport { ISetupPhase } from '../store/state';\n\nexport const KEYBOARDS_ACTIONS = '@Keyboards';\nexport const KEYBOARDS_CLEAR_SELECTED_POS = `${KEYBOARDS_ACTIONS}/ClearSelectedLayer`;\nexport const KEYBOARDS_UPDATE_SELECTED_LAYER = `${KEYBOARDS_ACTIONS}/UpdateSelectedLayer`;\nexport const KEYBOARDS_UPDATE_SELECTED_POS = `${KEYBOARDS_ACTIONS}/UpdateSelectedPos`;\nexport const KeyboardsActions = {\n  clearSelectedPos: () => {\n    return {\n      type: KEYBOARDS_UPDATE_SELECTED_POS,\n    };\n  },\n  updateSelectedLayer: (layer: number) => {\n    return {\n      type: KEYBOARDS_UPDATE_SELECTED_LAYER,\n      value: layer,\n    };\n  },\n  updateSelectedPos: (pos: string) => {\n    return {\n      type: KEYBOARDS_UPDATE_SELECTED_POS,\n      value: pos,\n    };\n  },\n};\n\nexport const KEYCODES_ACTIONS = '@Keycodes';\nexport const KEYCODES_UPDATE_CATEGORY = `${KEYCODES_ACTIONS}/UpdateCategory`;\nexport const KEYCODES_UPDATE_MACRO = `${KEYCODES_ACTIONS}/UpdateMacro`;\nexport const KEYCODES_LOAD_KEYCODE_INFO_FOR_ALL_CATEGORIES = `${KEYCODES_ACTIONS}/LoadKeycodeInfoForAllCategories`;\nexport const KeycodesActions = {\n  updateCategory: (value: string) => {\n    return {\n      type: KEYCODES_UPDATE_CATEGORY,\n      value: value,\n    };\n  },\n  updateMacro: (code: number | undefined, text: string) => {\n    return {\n      type: KEYCODES_UPDATE_MACRO,\n      value: { code: code, text: text },\n    };\n  },\n  loadKeycodeInfoForAllCategories: (hid: IHid) => {\n    const getKeysByCategory = (category: string): Key[] => {\n      return hid.getKeymapCandidatesByCategory(category).map<Key>((keymap) => ({\n        code: keymap.code,\n        label: keymap.keycodeInfo!.label,\n        meta: '',\n        keymap,\n      }));\n    };\n\n    let keys: { [category: string]: Key[] } = {};\n    [\n      IKeycodeCategory.BASIC,\n      IKeycodeCategory.LAYERS,\n      IKeycodeCategory.LIGHTING,\n      IKeycodeCategory.MEDIA,\n      IKeycodeCategory.NUMBER,\n      IKeycodeCategory.SPECIAL,\n      IKeycodeCategory.MACRO,\n    ].forEach((category) => {\n      keys[category] = getKeysByCategory(category);\n    });\n    keys[IKeycodeCategory.ANY] = [];\n\n    return {\n      type: KEYCODES_LOAD_KEYCODE_INFO_FOR_ALL_CATEGORIES,\n      value: keys,\n    };\n  },\n};\n\nexport const KEYCODEKEY_ACTIONS = '@KeycodeKey';\nexport const KEYCODEKEY_UPDATE_DRAGGING_KEY = `${KEYCODEKEY_ACTIONS}/UpdateDraggingKey`;\nexport const KEYCODEKEY_UPDATE_SELECTED_KEY = `${KEYCODEKEY_ACTIONS}/UpdateSelectedKey`;\nexport const KEYCODEKEY_UPDATE_HOVER_KEY = `${KEYCODEKEY_ACTIONS}/UpdateHoverKey`;\nexport const KEYCODEKEY_CLEAR = `${KEYCODEKEY_ACTIONS}/Clear`;\nexport const KeycodeKeyActions = {\n  updateDraggingKey: (key: Key | null) => {\n    return {\n      type: KEYCODEKEY_UPDATE_DRAGGING_KEY,\n      value: key,\n    };\n  },\n  updateSelectedKey: (key: Key | null) => {\n    return {\n      type: KEYCODEKEY_UPDATE_SELECTED_KEY,\n      value: key,\n    };\n  },\n  updateHoverKey: (key: Key | null) => {\n    return {\n      type: KEYCODEKEY_UPDATE_HOVER_KEY,\n      value: key,\n    };\n  },\n  clear: () => {\n    return {\n      type: KEYCODEKEY_CLEAR,\n    };\n  },\n};\n\nexport const ANYKEYCODEKEY_ACTIONS = '@AnyKeycodeKey';\nexport const ANYKEYCODEKEY_ADD_ANYKEY = `${ANYKEYCODEKEY_ACTIONS}/AddAnyKey`;\nexport const ANYKEYCODEKEY_UPDATE_ANYKEY = `${ANYKEYCODEKEY_ACTIONS}/UpdateAnyKey`;\nexport const AnyKeycodeKeyActions = {\n  addAnyKey: (anyKey: AnyKey) => {\n    return {\n      type: ANYKEYCODEKEY_ADD_ANYKEY,\n      value: anyKey,\n    };\n  },\n  updateAnyKey: (index: number, anyKey: AnyKey) => {\n    return {\n      type: ANYKEYCODEKEY_UPDATE_ANYKEY,\n      value: {\n        index,\n        anyKey,\n      },\n    };\n  },\n};\n\nexport const KEYDIFF_ACTIONS = '@Keydiff';\nexport const KEYDIFF_CLEAR_KEYDIFF = `${KEYDIFF_ACTIONS}/ClearKeydiff`;\nexport const KEYDIFF_UPDATE_KEYDIFF = `${KEYDIFF_ACTIONS}/UpdateKeydiff`;\nexport const KeydiffActions = {\n  updateKeydiff: (orig: IKeymap, dest: IKeymap) => {\n    return {\n      type: KEYDIFF_UPDATE_KEYDIFF,\n      value: { origin: orig, destination: dest },\n    };\n  },\n  clearKeydiff: () => {\n    return {\n      type: KEYDIFF_CLEAR_KEYDIFF,\n    };\n  },\n};\n\nconst NotifyType = ['success', 'warning', 'error', 'info'] as const;\nexport type NotificationType = typeof NotifyType[number];\nexport type NotificationItem = {\n  key: string;\n  type: NotificationType;\n  message: string;\n};\nexport const NOTIFICATION_ACTIONS = '@Notification';\nexport const NOTIFICATION_ADD_ERROR = `${NOTIFICATION_ACTIONS}/AddError`;\nexport const NOTIFICATION_ADD_WARN = `${NOTIFICATION_ACTIONS}/AddWarn`;\nexport const NOTIFICATION_ADD_INFO = `${NOTIFICATION_ACTIONS}/AddInfo`;\nexport const NOTIFICATION_ADD_SUCCESS = `${NOTIFICATION_ACTIONS}/AddSuccess`;\nexport const NOTIFICATION_REMOVE = `${NOTIFICATION_ACTIONS}/Remove`;\nexport const NotificationActions = {\n  addError: (message: string, cause?: any) => {\n    return {\n      type: NOTIFICATION_ADD_ERROR,\n      value: {\n        message,\n        cause,\n      },\n    };\n  },\n  addWarn: (message: string, cause?: any) => {\n    return {\n      type: NOTIFICATION_ADD_WARN,\n      value: {\n        message,\n        cause,\n      },\n    };\n  },\n  addInfo: (message: string) => {\n    return {\n      type: NOTIFICATION_ADD_INFO,\n      value: message,\n    };\n  },\n  addSuccess: (message: string) => {\n    return {\n      type: NOTIFICATION_ADD_SUCCESS,\n      value: message,\n    };\n  },\n  removeNotification: (key: string) => {\n    return {\n      type: NOTIFICATION_REMOVE,\n      value: key,\n    };\n  },\n};\n\nexport const HEADER_ACTIONS = '@Header';\nexport const HEADER_UPDATE_FLUSH_LOADING = `${HEADER_ACTIONS}/UpdateFlushLoading`;\nexport const HeaderActions = {\n  updateFlush: (loading: boolean) => {\n    return {\n      type: HEADER_UPDATE_FLUSH_LOADING,\n      value: loading,\n    };\n  },\n};\n\nexport const KEYBOARD_DEFINITION_FORM_ACTIONS = '@KeyboardDefinitionForm';\nexport const KEYBOARD_DEFINITION_FORM_UPDATE_DRAGGING = `${KEYBOARD_DEFINITION_FORM_ACTIONS}/UpdateDragging`;\nexport const KeyboardDefinitionFormActions = {\n  updateDragging: (dragging: boolean) => {\n    return {\n      type: KEYBOARD_DEFINITION_FORM_UPDATE_DRAGGING,\n      value: dragging,\n    };\n  },\n};\n\nexport const APP_ACTIONS = '@App';\nexport const APP_UPDATE_SETUP_PHASE = `${APP_ACTIONS}/UpdateSetupPhase`;\nexport const APP_REMAPS_INIT = `${APP_ACTIONS}/RemapsInit`;\nexport const APP_REMAPS_SET_KEY = `${APP_ACTIONS}/RemapsSetKey`;\nexport const APP_REMAPS_REMOVE_KEY = `${APP_ACTIONS}/RemapsRemoveKey`;\nexport const APP_REMAPS_CLEAR = `${APP_ACTIONS}/Clear`;\nexport const APP_PACKAGE_INIT = `${APP_ACTIONS}/PackageInit`;\nexport const APP_UPDATE_KEYBOARD_HEIGHT = `${APP_ACTIONS}/UpdateKeyboardHeight`;\nexport const AppActions = {\n  updateSetupPhase: (setupPhase: ISetupPhase) => {\n    return {\n      type: APP_UPDATE_SETUP_PHASE,\n      value: setupPhase,\n    };\n  },\n  remapsInit: (layerCount: number) => {\n    const remaps: { [pos: string]: KeyModel }[] = new Array(layerCount).fill(\n      {}\n    );\n    return {\n      type: APP_REMAPS_INIT,\n      value: remaps,\n    };\n  },\n  remapsSetKey: (layer: number, pos: string, keymap: IKeymap) => {\n    return {\n      type: APP_REMAPS_SET_KEY,\n      value: {\n        layer: layer,\n        pos: pos,\n        keymap,\n      },\n    };\n  },\n  remapsRemoveKey: (layer: number, pos: string) => {\n    return {\n      type: APP_REMAPS_REMOVE_KEY,\n      value: {\n        pos: pos,\n        layer: layer,\n      },\n    };\n  },\n  remapsClear: () => {\n    return {\n      type: APP_REMAPS_CLEAR,\n    };\n  },\n  initAppPackage: (name: string, version: string) => {\n    return {\n      type: APP_PACKAGE_INIT,\n      value: {\n        name: name,\n        version: version,\n      },\n    };\n  },\n  updateKeyboardHeight: (height: number) => {\n    return {\n      type: APP_UPDATE_KEYBOARD_HEIGHT,\n      value: height,\n    };\n  },\n};\n\nexport const LAYOUT_OPTIONS_ACTIONS = '@LayoutOptions';\nexport const LAYOUT_OPTIONS_INIT_SELECTED_OPTION = `${LAYOUT_OPTIONS_ACTIONS}/InitSelectedOption`;\nexport const LAYOUT_OPTIONS_UPDATE_SELECTED_OPTION = `${LAYOUT_OPTIONS_ACTIONS}/UpdateSelectedOption`;\nexport const LayoutOptionsActions = {\n  updateSelectedOption: (optionIndex: number, option: string | null) => {\n    return {\n      type: LAYOUT_OPTIONS_UPDATE_SELECTED_OPTION,\n      value: {\n        optionIndex,\n        option,\n      },\n    };\n  },\n  initSelectedOptions: (options: (string | string[])[]) => {\n    const list: (null | string)[] = options.map((item) => {\n      return typeof item == 'string' ? null : item[1]; // the default value should be off or 1st value\n    });\n    return {\n      type: LAYOUT_OPTIONS_INIT_SELECTED_OPTION,\n      value: list,\n    };\n  },\n};\n","import Ajv from 'ajv';\nimport schema from './assets/keyboard-definition-schema.json';\n\nexport interface IValidateKeyboardDefinitionResult {\n  valid: boolean;\n  errorMessage?: string;\n}\n\nexport const validateKeyboardDefinition = (\n  source: string\n): IValidateKeyboardDefinitionResult => {\n  let root;\n  try {\n    root = JSON.parse(source);\n  } catch (error) {\n    return {\n      valid: false,\n      errorMessage: `JSON parse error: ${error}`,\n    };\n  }\n\n  const ajv = new Ajv();\n  const validate = ajv.compile(schema);\n  const valid = validate(root);\n  if (valid) {\n    return { valid: true };\n  } else {\n    const errorMessage = validate\n      .errors!.map(\n        (error) =>\n          `Invalid JSON file: [${error.keyword}] ${error.schemaPath} ${error.message}`\n      )\n      .join('\\n');\n    return {\n      valid: false,\n      errorMessage,\n    };\n  }\n};\n","import { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { RootState, SetupPhase } from '../store/state';\nimport {\n  AppActions,\n  LayoutOptionsActions,\n  NotificationActions,\n} from './actions';\nimport { hidActionsThunk } from './hid.action';\nimport { validateKeyboardDefinition } from '../services/storage/Validator';\nimport { KeyboardDefinitionSchema } from '../gen/types/KeyboardDefinition';\n\nexport const STORAGE_ACTIONS = '@Storage';\nexport const STORAGE_UPDATE_KEYBOARD_DEFINITION = `${STORAGE_ACTIONS}/UpdateKeyboardDefinition`;\nexport const StorageActions = {\n  updateKeyboardDefinition: (keyboardDefinition: any) => {\n    return {\n      type: STORAGE_UPDATE_KEYBOARD_DEFINITION,\n      value: keyboardDefinition,\n    };\n  },\n};\n\ntype ActionTypes = ReturnType<\n  | typeof StorageActions[keyof typeof StorageActions]\n  | typeof NotificationActions[keyof typeof NotificationActions]\n>;\ntype ThunkPromiseAction<T> = ThunkAction<\n  Promise<T>,\n  RootState,\n  undefined,\n  ActionTypes\n>;\nexport const storageActionsThunk = {\n  // eslint-disable-next-line no-undef\n  uploadKeyboardDefinition: (file: File): ThunkPromiseAction<void> => async (\n    dispatch: ThunkDispatch<RootState, undefined, ActionTypes>,\n    getState: () => RootState\n  ) => {\n    if (!file.type.endsWith('/json')) {\n      dispatch(NotificationActions.addWarn('The file is not JSON format.'));\n      return;\n    }\n\n    // eslint-disable-next-line no-undef\n    const loadTextFile = (file: File): Promise<string> => {\n      return new Promise<string>((resolve) => {\n        // eslint-disable-next-line no-undef\n        const fileReader = new FileReader();\n        fileReader.addEventListener('load', () => {\n          resolve(fileReader.result as string);\n        });\n        fileReader.readAsText(file);\n      });\n    };\n    const json = await loadTextFile(file);\n\n    const validateResult = validateKeyboardDefinition(json);\n    if (!validateResult.valid) {\n      dispatch(NotificationActions.addWarn(validateResult.errorMessage!));\n      return;\n    }\n\n    const keyboardDefinition = JSON.parse(json);\n    const getNumber = (source: string): number => {\n      if (!source) {\n        return NaN;\n      } else if (source.startsWith('0x')) {\n        const target = source.substring(2);\n        return Number.parseInt(target, 16);\n      } else {\n        return Number.parseInt(source);\n      }\n    };\n\n    const { entities } = getState();\n    const keyboard = entities.keyboard;\n    const vendorId = getNumber(keyboardDefinition.vendorId);\n    const productId = getNumber(keyboardDefinition.productId);\n\n    if (vendorId !== keyboard?.getInformation().vendorId) {\n      dispatch(\n        NotificationActions.addWarn(`Invalid the vendor ID: ${vendorId}`)\n      );\n      return;\n    }\n    if (productId !== keyboard?.getInformation().productId) {\n      dispatch(\n        NotificationActions.addWarn(`Invalid the product ID: ${productId}`)\n      );\n      return;\n    }\n\n    dispatch(StorageActions.updateKeyboardDefinition(keyboardDefinition));\n    dispatch(\n      LayoutOptionsActions.initSelectedOptions(\n        keyboardDefinition.layouts.labels\n          ? keyboardDefinition.layouts.labels\n          : []\n      )\n    );\n    dispatch(AppActions.updateSetupPhase(SetupPhase.openingKeyboard));\n    await dispatch(hidActionsThunk.openKeyboard());\n  },\n\n  fetchKeyboardDefinition: (\n    // eslint-disable-next-line no-unused-vars\n    vendorId: number,\n    // eslint-disable-next-line no-unused-vars\n    productId: number\n  ): ThunkPromiseAction<void> => async (\n    dispatch: ThunkDispatch<RootState, undefined, ActionTypes>,\n    getState: () => RootState\n  ) => {\n    const { entities, storage } = getState();\n    const keyboard = entities.keyboard!;\n    const keyboardInfo = keyboard.getInformation();\n    const vendorId = keyboardInfo.vendorId;\n    const productId = keyboardInfo.productId;\n    const fetchKeyboardDefinitionResult = await storage.instance.fetchKeyboardDefinition(\n      vendorId,\n      productId\n    );\n    if (!fetchKeyboardDefinitionResult.success) {\n      console.error(fetchKeyboardDefinitionResult.cause!);\n      dispatch(\n        NotificationActions.addError(\n          fetchKeyboardDefinitionResult.error!,\n          fetchKeyboardDefinitionResult.cause\n        )\n      );\n      return;\n    }\n    if (fetchKeyboardDefinitionResult.exists!) {\n      const json = fetchKeyboardDefinitionResult.document!.json;\n      const validateResult = validateKeyboardDefinition(json);\n      if (!validateResult.valid) {\n        dispatch(NotificationActions.addError(validateResult.errorMessage!));\n        dispatch(\n          AppActions.updateSetupPhase(\n            SetupPhase.waitingKeyboardDefinitionUpload\n          )\n        );\n        return;\n      }\n\n      const keyboardDefinition: KeyboardDefinitionSchema = JSON.parse(json);\n      dispatch(StorageActions.updateKeyboardDefinition(keyboardDefinition));\n      dispatch(\n        LayoutOptionsActions.initSelectedOptions(\n          keyboardDefinition.layouts.labels\n            ? keyboardDefinition.layouts.labels\n            : []\n        )\n      );\n      dispatch(AppActions.updateSetupPhase(SetupPhase.openingKeyboard));\n      await dispatch(hidActionsThunk.openKeyboard());\n    } else {\n      dispatch(\n        AppActions.updateSetupPhase(SetupPhase.waitingKeyboardDefinitionUpload)\n      );\n    }\n  },\n};\n","import { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { IHid, IKeyboard, IKeymaps } from '../services/hid/Hid';\nimport { RootState, SetupPhase } from '../store/state';\nimport {\n  AppActions,\n  HeaderActions,\n  KeyboardsActions,\n  KeycodeKeyActions,\n  KeydiffActions,\n  NotificationActions,\n} from './actions';\nimport { StorageActions, storageActionsThunk } from './storage.action';\n\nexport const HID_ACTIONS = '@Hid';\nexport const HID_CONNECT_KEYBOARD = `${HID_ACTIONS}/ConnectDevice`;\nexport const HID_DISCONNECT_KEYBOARD = `${HID_ACTIONS}/DisconnectDevice`;\nexport const HID_UPDATE_KEYBOARD = `${HID_ACTIONS}/UpdateKeyboard`;\nexport const HID_UPDATE_KEYBOARD_LAYER_COUNT = `${HID_ACTIONS}/UpdateKeyboardLayerCount`;\nexport const HID_UPDATE_KEYBOARD_LIST = `${HID_ACTIONS}/UpdateKeyboardList`;\nexport const HID_UPDATE_KEYMAPS = `${HID_ACTIONS}/UpdateKeymaps`;\nexport const HID_OPEN_KEYBOARD = `${HID_ACTIONS}/OpenKeyboard`;\nexport const HidActions = {\n  connectKeyboard: (keyboard: IKeyboard) => {\n    return {\n      type: HID_CONNECT_KEYBOARD,\n      value: { keyboard: keyboard },\n    };\n  },\n\n  disconnectKeyboard: (keyboard: IKeyboard) => {\n    return {\n      type: HID_DISCONNECT_KEYBOARD,\n      value: { keyboard: keyboard },\n    };\n  },\n\n  updateKeyboard: (keyboard: IKeyboard | null) => {\n    return {\n      type: HID_UPDATE_KEYBOARD,\n      value: { keyboard: keyboard },\n    };\n  },\n\n  updateKeyboardLayerCount: (layerCount: number) => {\n    return {\n      type: HID_UPDATE_KEYBOARD_LAYER_COUNT,\n      value: { layerCount: layerCount },\n    };\n  },\n\n  updateKeyboardList: (keyboards: IKeyboard[]) => {\n    return {\n      type: HID_UPDATE_KEYBOARD_LIST,\n      value: { keyboards: keyboards },\n    };\n  },\n\n  updateKeymaps: (keymaps: IKeymaps[]) => {\n    return {\n      type: HID_UPDATE_KEYMAPS,\n      value: { keymaps: keymaps },\n    };\n  },\n};\n\ntype ActionTypes = ReturnType<\n  | typeof HidActions[keyof typeof HidActions]\n  | typeof KeyboardsActions[keyof typeof KeyboardsActions]\n  | typeof NotificationActions[keyof typeof NotificationActions]\n  | typeof AppActions[keyof typeof AppActions]\n>;\ntype ThunkPromiseAction<T> = ThunkAction<\n  Promise<T>,\n  RootState,\n  undefined,\n  ActionTypes\n>;\nexport const hidActionsThunk = {\n  connectAnotherKeyboard: (): ThunkPromiseAction<void> => async (\n    dispatch: ThunkDispatch<RootState, undefined, ActionTypes>,\n    getState: () => RootState\n  ) => {\n    const { hid, entities } = getState();\n    const keyboards: IKeyboard[] = entities.keyboards;\n\n    await dispatch(hidActionsThunk.closeOpenedKeyboard());\n\n    const result = await hid.instance.connect();\n    if (!result.success) {\n      // no selected device\n      dispatch(AppActions.updateSetupPhase(SetupPhase.keyboardNotSelected));\n      return;\n    }\n    const keyboard: IKeyboard = result.keyboard!;\n\n    // Opened keyboard MUST had been authorized\n    if (keyboard.isOpened()) {\n      /**\n       * If the connected device has opened by this app, do nothing.\n       * We should NOT do something except showing a message if another application has opened the device.\n       */\n      const listedKbd = keyboards.find((kbd) => kbd.isSameDevice(keyboard));\n      if (listedKbd) {\n        dispatch(AppActions.updateSetupPhase(SetupPhase.openedKeyboard));\n        return;\n      }\n\n      const msg = 'This device has already opened by another application';\n      console.log(msg);\n      dispatch(NotificationActions.addWarn(msg));\n      return;\n    }\n\n    /**\n     * If the connected device has already included in state, use the keyboard object in state in order not to effect the keyboard list state.\n     * Unless the connected device has included in state, use it and add to the keyboard list in state.\n     */\n\n    const listedKbd = keyboards.find((kbd) => kbd.isSameDevice(keyboard));\n    const targetKbd = listedKbd ? listedKbd : keyboard;\n    if (!listedKbd) {\n      dispatch(HidActions.updateKeyboardList([...keyboards, keyboard]));\n    }\n\n    dispatch(HidActions.updateKeyboard(targetKbd));\n    const keyboardInfo = keyboard.getInformation();\n    dispatch(\n      AppActions.updateSetupPhase(SetupPhase.fetchingKeyboardDefinition)\n    );\n    await dispatch(\n      storageActionsThunk.fetchKeyboardDefinition(\n        keyboardInfo.vendorId,\n        keyboardInfo.productId\n      )\n    );\n  },\n\n  connectKeyboard: (keyboard: IKeyboard): ThunkPromiseAction<void> => async (\n    dispatch: ThunkDispatch<RootState, undefined, ActionTypes>,\n    getState: () => RootState\n  ) => {\n    const { entities } = getState();\n    const keyboards: IKeyboard[] = entities.keyboards;\n\n    await dispatch(hidActionsThunk.closeOpenedKeyboard());\n\n    if (keyboard.isOpened()) {\n      /**\n       * If this keyboard is opening by this app, do nothing.\n       * If this keyboard is NOT opened by this app, show warning message.\n       */\n      if (entities.keyboard?.isSameDevice(keyboard)) {\n        dispatch(AppActions.updateSetupPhase(SetupPhase.openedKeyboard));\n        return; // do nothing\n      }\n\n      const msg = 'This device has already opened by another application';\n      console.log(msg);\n      dispatch(NotificationActions.addWarn(msg));\n      return;\n    }\n\n    const listedKbd = keyboards.find((kbd) => kbd.isSameDevice(keyboard));\n    const targetKbd = listedKbd ? listedKbd : keyboard;\n    if (!listedKbd) {\n      dispatch(HidActions.updateKeyboardList([...keyboards, keyboard]));\n    }\n\n    dispatch(HidActions.updateKeyboard(targetKbd));\n    const keyboardInfo = keyboard.getInformation();\n    dispatch(\n      AppActions.updateSetupPhase(SetupPhase.fetchingKeyboardDefinition)\n    );\n    await dispatch(\n      storageActionsThunk.fetchKeyboardDefinition(\n        keyboardInfo.vendorId,\n        keyboardInfo.productId\n      )\n    );\n  },\n\n  openKeyboard: (): ThunkPromiseAction<void> => async (\n    dispatch: ThunkDispatch<RootState, undefined, ActionTypes>,\n    getState: () => RootState\n  ) => {\n    const { entities } = getState();\n    const keyboard = entities.keyboard!;\n    const result = await keyboard.open();\n    if (!result.success) {\n      console.error('Could not open');\n      dispatch(NotificationActions.addError('Could not open', result.cause));\n      return;\n    }\n    await initOpenedKeyboard(\n      dispatch,\n      keyboard,\n      entities.keyboardDefinition!.matrix.rows,\n      entities.keyboardDefinition!.matrix.cols\n    );\n    dispatch(AppActions.updateSetupPhase(SetupPhase.openedKeyboard));\n  },\n\n  updateAuthorizedKeyboardList: (): ThunkPromiseAction<void> => async (\n    dispatch: ThunkDispatch<RootState, undefined, ActionTypes>,\n    getState: () => RootState\n  ) => {\n    const { hid } = getState();\n    const keyboards: IKeyboard[] = await getAuthorizedKeyboard(hid.instance);\n    dispatch(HidActions.updateKeyboardList(keyboards));\n    if (keyboards.length === 1) {\n      const keyboard = keyboards[0];\n      dispatch(HidActions.updateKeyboard(keyboard));\n      const keyboardInfo = keyboard.getInformation();\n      dispatch(\n        AppActions.updateSetupPhase(SetupPhase.fetchingKeyboardDefinition)\n      );\n      await dispatch(\n        storageActionsThunk.fetchKeyboardDefinition(\n          keyboardInfo.vendorId,\n          keyboardInfo.productId\n        )\n      );\n    }\n  },\n\n  closeKeyboard: (keyboard: IKeyboard): ThunkPromiseAction<void> => async (\n    dispatch: ThunkDispatch<RootState, undefined, ActionTypes>,\n    // eslint-disable-next-line no-unused-vars\n    getState: () => RootState\n  ) => {\n    if (!keyboard.isOpened()) {\n      return;\n    }\n    await keyboard.close();\n    dispatch(AppActions.updateSetupPhase(SetupPhase.keyboardNotSelected));\n    dispatch(AppActions.remapsClear());\n    dispatch(KeydiffActions.clearKeydiff());\n    dispatch(KeycodeKeyActions.clear());\n    dispatch(KeyboardsActions.clearSelectedPos());\n    dispatch(StorageActions.updateKeyboardDefinition(null));\n    dispatch(HidActions.updateKeyboard(null));\n  },\n\n  closeOpenedKeyboard: (): ThunkPromiseAction<void> => async (\n    dispatch: ThunkDispatch<RootState, undefined, ActionTypes>,\n    // eslint-disable-next-line no-unused-vars\n    getState: () => RootState\n  ) => {\n    const { entities } = getState();\n    const openedKeyboard = entities.keyboard;\n    if (openedKeyboard && openedKeyboard.isOpened()) {\n      await openedKeyboard.close();\n      dispatch(AppActions.remapsClear());\n      dispatch(KeydiffActions.clearKeydiff());\n      dispatch(KeycodeKeyActions.clear());\n      dispatch(KeyboardsActions.clearSelectedPos());\n      dispatch(StorageActions.updateKeyboardDefinition(null));\n      dispatch(HidActions.updateKeyboard(null));\n    }\n  },\n\n  flush: (): ThunkPromiseAction<void> => async (\n    dispatch: ThunkDispatch<RootState, undefined, ActionTypes>,\n    getState: () => RootState\n  ) => {\n    const { app, entities } = getState();\n    const keyboard: IKeyboard = entities.keyboard!;\n    const remaps = app.remaps;\n    for (let layer = 0; layer < remaps.length; layer++) {\n      const remap = remaps[layer];\n      for (const pos of Object.keys(remap)) {\n        const key = remap[pos];\n        const row = Number(pos.substring(0, pos.indexOf(',')));\n        const col = Number(pos.substring(pos.indexOf(',') + 1));\n        const code = key.code;\n        const result = await keyboard.updateKeymap(layer, row, col, code);\n        if (!result.success) {\n          console.error(result.cause);\n          dispatch(\n            NotificationActions.addError(\n              `Flush error: [${pos}] ${result.error!}`,\n              result.cause\n            )\n          );\n          dispatch(HeaderActions.updateFlush(false));\n          return;\n        }\n      }\n    }\n    const keymaps: IKeymaps[] = await loadKeymap(\n      dispatch,\n      keyboard,\n      entities.device.layerCount,\n      entities.keyboardDefinition!.matrix.rows,\n      entities.keyboardDefinition!.matrix.cols\n    );\n    dispatch(HidActions.updateKeymaps(keymaps));\n    dispatch(AppActions.remapsInit(entities.device.layerCount));\n    dispatch(KeydiffActions.clearKeydiff());\n    dispatch(KeycodeKeyActions.clear());\n    dispatch(KeyboardsActions.clearSelectedPos());\n    dispatch(HeaderActions.updateFlush(false));\n  },\n};\n\nconst getAuthorizedKeyboard = async (hid: IHid): Promise<IKeyboard[]> => {\n  const keyboards: IKeyboard[] = await hid.detectKeyboards();\n  return keyboards;\n};\n\nconst initOpenedKeyboard = async (\n  dispatch: ThunkDispatch<RootState, undefined, ActionTypes>,\n  keyboard: IKeyboard,\n  rowCount: number,\n  columnCount: number\n) => {\n  const layerResult = await keyboard.fetchLayerCount();\n  if (!layerResult.success) {\n    // TODO:show error message\n    console.log(layerResult);\n    return;\n  }\n  const layerCount = layerResult.layerCount!;\n  dispatch(HidActions.updateKeyboardLayerCount(layerCount));\n  const keymaps: IKeymaps[] = await loadKeymap(\n    dispatch,\n    keyboard,\n    layerCount,\n    rowCount,\n    columnCount\n  );\n  dispatch(HidActions.updateKeymaps(keymaps));\n  dispatch(AppActions.remapsInit(layerCount));\n  dispatch(KeyboardsActions.updateSelectedLayer(0)); // initial selected layer\n  dispatch(HidActions.updateKeyboard(keyboard));\n};\n\nconst loadKeymap = async (\n  dispatch: ThunkDispatch<RootState, undefined, ActionTypes>,\n  keyboard: IKeyboard,\n  layerCount: number,\n  rowCount: number,\n  columnCount: number\n): Promise<IKeymaps[]> => {\n  const keymaps: IKeymaps[] = [];\n  for (let i = 0; i < layerCount; i++) {\n    const keymapsResult = await keyboard.fetchKeymaps(i, rowCount, columnCount);\n    if (!keymapsResult.success) {\n      // TODO: show error message\n      console.log(keymapsResult);\n      Promise.reject('something wrong in loading kerymaps');\n    }\n    keymaps.push(keymapsResult.keymap!);\n  }\n  return keymaps;\n};\n","import { connect } from 'react-redux';\nimport Header from './Header';\nimport { RootState, SetupPhase } from '../../../store/state';\nimport { hidActionsThunk } from '../../../actions/hid.action';\nimport { IKeyboard } from '../../../services/hid/Hid';\nimport { AppActions, HeaderActions } from '../../../actions/actions';\n\nconst mapStateToProps = (state: RootState) => {\n  const kbd = state.entities.keyboard;\n  const info = kbd?.getInformation();\n  return {\n    draggingKey: state.keycodeKey.draggingKey,\n    flushLoading: state.header.flushLoading,\n    keyboards: state.entities.keyboards,\n    openedKeyboard: kbd,\n    productId: info?.productId || NaN,\n    productName: info?.productName || '',\n    vendorId: info?.vendorId || NaN,\n    showKeyboardList: !!kbd,\n    remaps: state.app.remaps,\n  };\n};\nexport type HeaderStateType = ReturnType<typeof mapStateToProps>;\n\nconst mapDispatchToProps = (_dispatch: any) => {\n  return {\n    onClickKeyboardMenuItem: (kbd: IKeyboard) => {\n      _dispatch(AppActions.updateSetupPhase(SetupPhase.connectingKeyboard));\n      _dispatch(hidActionsThunk.connectKeyboard(kbd));\n    },\n    onClickAnotherKeyboard: () => {\n      _dispatch(AppActions.updateSetupPhase(SetupPhase.connectingKeyboard));\n      _dispatch(hidActionsThunk.connectAnotherKeyboard());\n    },\n    onClickFlushButton: () => {\n      _dispatch(HeaderActions.updateFlush(true));\n      _dispatch(hidActionsThunk.flush());\n    },\n  };\n};\nexport type HeaderActionsType = ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from '@material-ui/core';\nimport './AnyKeyEditDialog.scss';\nimport { AnyKey } from '../KeycodeKey';\n\ntype AnyKeyDialogState = {\n  label: string;\n  code: string;\n  disabled: boolean;\n};\n\ntype AnyKeyDialogOwnProps = {\n  open: boolean;\n  title: string;\n  labelOk: string;\n  value: AnyKey | null;\n  onClickCancel: () => void;\n  // eslint-disable-next-line no-unused-vars\n  onClickOk: (key: AnyKey) => void;\n};\n\nexport default class AnyKeyDialog extends React.Component<\n  AnyKeyDialogOwnProps,\n  AnyKeyDialogState\n> {\n  constructor(props: AnyKeyDialogOwnProps | Readonly<AnyKeyDialogOwnProps>) {\n    super(props);\n    this.state = {\n      label: '',\n      code: '',\n      disabled: true,\n    };\n  }\n\n  private onInit() {\n    const value = this.props.value;\n    if (value) {\n      const label = value.label;\n      const code = value.code.toString(16).toUpperCase();\n      this.setState({\n        label: label,\n        code: code,\n        disabled: 0 == label.length || this.invalidateCode(code),\n      });\n    }\n  }\n\n  private invalidateCode(code: string) {\n    return 0 == code.length || 4 < code.length;\n  }\n\n  private onClickCancel() {\n    this.props.onClickCancel();\n  }\n\n  private onClickOk = () => {\n    const anyKey: AnyKey = {\n      label: this.state.label,\n      code: parseInt(this.state.code, 16),\n    };\n    this.props.onClickOk(anyKey);\n  };\n\n  // eslint-disable-next-line no-undef\n  private onChangeLabel(e: React.ChangeEvent<HTMLInputElement>) {\n    const label = e.target.value;\n    this.setState({ label: label, disabled: label.length == 0 });\n  }\n\n  // eslint-disable-next-line no-undef\n  private onChangeCode(e: React.ChangeEvent<HTMLInputElement>) {\n    const code = e.target.value.toUpperCase().replace(/[^0-9,A-F]/g, '');\n    this.setState({ code: code, disabled: this.invalidateCode(code) });\n  }\n\n  // eslint-disable-next-line no-undef\n  private onFocus(e: React.FocusEvent<HTMLInputElement>) {\n    e.target.setSelectionRange(0, 100);\n  }\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        aria-labelledby=\"form-dialog-title\"\n        onEnter={this.onInit.bind(this)}\n        className=\"anykey-dialog\"\n      >\n        <DialogTitle id=\"form-dialog-title\">{this.props.title}</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            label=\"Label\"\n            type=\"text\"\n            value={this.state.label}\n            onChange={this.onChangeLabel.bind(this)}\n            onFocus={this.onFocus.bind(this)}\n          />\n          <div className=\"hex-code-wrapper\">\n            <div className=\"hex-code\">0x</div>\n            <TextField\n              label=\"Key Code(hex)\"\n              type=\"text\"\n              value={this.state.code}\n              onChange={this.onChangeCode.bind(this)}\n              onFocus={this.onFocus.bind(this)}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.onClickCancel.bind(this)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={this.onClickOk.bind(this)}\n            color=\"primary\"\n            disabled={this.state.disabled}\n          >\n            {this.props.labelOk}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","import React from 'react';\nimport { IKeymap } from '../../../services/hid/Hid';\nimport AnyKeyDialog from './any/AnyKeyEditDialog';\nimport {\n  Key,\n  KeycodeKeyActionsType,\n  KeycodeKeyStateType,\n} from './KeycodeKey.container';\nimport './KeycodeKey.scss';\n\nexport type AnyKey = {\n  label: string;\n  code: number;\n};\n\ntype KeycodeKeyOwnState = {\n  dragging: boolean;\n  openDialog: boolean;\n  selectedKey: AnyKey | null;\n};\n\nexport type KeycodeKeyOwnProps = {\n  index?: number;\n  value: Key;\n  draggable: boolean;\n};\n\nexport type KeycodeKeyProps = KeycodeKeyOwnProps &\n  Partial<KeycodeKeyActionsType> &\n  Partial<KeycodeKeyStateType>;\n\nexport default class KeycodeKey extends React.Component<\n  KeycodeKeyProps,\n  KeycodeKeyOwnState\n> {\n  constructor(props: KeycodeKeyProps | Readonly<KeycodeKeyProps>) {\n    super(props);\n    this.state = {\n      dragging: false,\n      openDialog: false,\n      selectedKey: null,\n    };\n  }\n  private hoverKey = (value: Key | null) => {\n    this.props.hoverKey!(value);\n  };\n\n  private clickKey = (value: Key) => {\n    if (value.keymap.isAny && !!value.keymap.keycodeInfo) {\n      const info = value.keymap.keycodeInfo;\n      this.setState({ openDialog: true, selectedKey: { ...info } });\n    } else if (this.props.selectedKeycapPosition) {\n      const pos = this.props.selectedKeycapPosition!;\n      const layer = this.props.selectedLayer!;\n      const keymap: IKeymap = this.props.keymaps![layer][pos];\n      this.props.remapKey!(layer, pos, keymap, value.keymap);\n    } else {\n      this.props.selectKey!(value);\n    }\n  };\n\n  private startDraggingKeycode(value: Key) {\n    this.props.startDraggingKeycode!(value);\n  }\n\n  private endDraggingKeycode() {\n    this.props.endDraggingKeycode!();\n  }\n  private closeDialog() {\n    this.setState({ openDialog: false, selectedKey: null });\n  }\n  private clickOk(key: AnyKey) {\n    this.props.updateAnyKey!(this.props.index!, key);\n    this.setState({ openDialog: false, selectedKey: null });\n  }\n  render() {\n    const pos = this.props.selectedKeycapPosition;\n    const draggable = this.props.draggable && (pos == undefined || pos == '');\n\n    return (\n      <React.Fragment>\n        <div\n          className={[\n            'keycodekey',\n            this.props.selected && 'selected',\n            (this.props.clickable || !draggable) && 'clickable',\n            draggable && 'grabbable',\n            this.state.dragging && 'dragging',\n          ].join(' ')}\n          onMouseEnter={this.hoverKey.bind(this, this.props.value)}\n          onMouseLeave={this.hoverKey.bind(this, null)}\n          onClick={this.clickKey.bind(this, this.props.value)}\n          draggable={draggable}\n          onDragStart={() => {\n            this.setState({ dragging: true });\n            this.startDraggingKeycode(this.props.value);\n          }}\n          onDragEnd={() => {\n            this.setState({ dragging: false });\n            this.endDraggingKeycode();\n          }}\n        >\n          {this.props.value.meta && (\n            <div className=\"code-label\">{this.props.value.meta}</div>\n          )}\n          <div className=\"code-label\">{this.props.value.label}</div>\n        </div>\n        <AnyKeyDialog\n          open={this.state.openDialog}\n          title=\"Edit your custom key\"\n          labelOk=\"Save\"\n          value={this.state.selectedKey}\n          onClickCancel={this.closeDialog!.bind(this)}\n          onClickOk={this.clickOk.bind(this)}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport KeycodeKey, { AnyKey, KeycodeKeyOwnProps } from './KeycodeKey';\nimport { RootState } from '../../../store/state';\nimport {\n  AnyKeycodeKeyActions,\n  AppActions,\n  KeycodeKeyActions,\n  KeydiffActions,\n} from '../../../actions/actions';\nimport {\n  IKeycodeCategory,\n  IKeycodeInfo,\n  IKeymap,\n} from '../../../services/hid/Hid';\n\nexport type Key = {\n  label: string;\n  meta: string;\n  keymap: IKeymap;\n};\n\nexport const genKey = (keymap: IKeymap): Key => {\n  // TODO: change the keytop label according to the platform, like JIS keyboard, mac US keyboard\n\n  if (keymap.isAny) {\n    return {\n      label: keymap.keycodeInfo\n        ? keymap.keycodeInfo.label\n        : `(${Number(keymap.code).toString(16).toUpperCase()})`,\n      meta: '',\n      keymap,\n    };\n  } else {\n    return { label: keymap.keycodeInfo!.label, meta: '', keymap };\n  }\n};\n\nexport class KeycodeInfo implements IKeycodeInfo {\n  readonly code: number;\n  readonly name: { long: string; short: string };\n  readonly label: string;\n  constructor(label: string, code: number) {\n    this.code = code;\n    this.name = {\n      long: label,\n      short: label,\n    };\n    this.label = label;\n  }\n}\n\nconst mapStateToProps = (state: RootState, ownProps: KeycodeKeyOwnProps) => {\n  const keys = state.keycodes.keys[IKeycodeCategory.MACRO];\n  const clickable: boolean = !!(\n    keys && keys.find((key) => key.keymap.code === ownProps.value.keymap.code)\n  );\n  return {\n    keymaps: state.entities.device.keymaps,\n    selectedLayer: state.keyboards.selectedLayer,\n    selected: state.keycodeKey.selectedKey == ownProps.value,\n    selectedKeycapPosition: state.keyboards.selectedPos,\n    clickable,\n  };\n};\nexport type KeycodeKeyStateType = ReturnType<typeof mapStateToProps>;\n\nconst mapDispatchToProps = (_dispatch: any) => {\n  return {\n    selectKey: (key: Key) => {\n      _dispatch(KeycodeKeyActions.updateSelectedKey(key));\n    },\n    hoverKey: (key: Key | null) => {\n      _dispatch(KeycodeKeyActions.updateHoverKey(key));\n    },\n    startDraggingKeycode: (key: Key) => {\n      _dispatch(KeycodeKeyActions.updateDraggingKey(key));\n    },\n    endDraggingKeycode: () => {\n      _dispatch(KeycodeKeyActions.updateDraggingKey(null));\n    },\n    updateAnyKey: (index: number, anyKey: AnyKey) => {\n      _dispatch(AnyKeycodeKeyActions.updateAnyKey(index, anyKey));\n    },\n    remapKey: (layer: number, pos: string, orig: IKeymap, dest: IKeymap) => {\n      _dispatch(AppActions.remapsSetKey(layer, pos, dest));\n      _dispatch(KeydiffActions.updateKeydiff(orig, dest));\n    },\n  };\n};\nexport type KeycodeKeyActionsType = ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KeycodeKey);\n","import React from 'react';\nimport { AnyKey } from '../KeycodeKey';\nimport AnyKeyDialog from './AnyKeyEditDialog';\nimport {\n  KeycodeAddKeyActionsType,\n  KeycodeAddKeyStateType,\n} from './AddAnyKeycodeKey.container';\nimport '../KeycodeKey.scss';\n\ntype KeycodeAddKeyOwnState = {\n  openDialog: boolean;\n};\n\nexport type KeycodeAddKeyOwnProps = {};\n\nexport type KeycodeAddKeyProps = KeycodeAddKeyOwnProps &\n  Partial<KeycodeAddKeyActionsType> &\n  Partial<KeycodeAddKeyStateType>;\n\nexport default class KeycodeAddKey extends React.Component<\n  KeycodeAddKeyProps,\n  KeycodeAddKeyOwnState\n> {\n  constructor(props: KeycodeAddKeyProps | Readonly<KeycodeAddKeyProps>) {\n    super(props);\n    this.state = {\n      openDialog: false,\n    };\n  }\n\n  private closeDialog() {\n    console.log('closeDialog');\n    this.setState({ openDialog: false });\n  }\n\n  private openDialog() {\n    this.setState({ openDialog: true });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div\n          className={['keycodekey', 'clickable', 'addkey'].join(' ')}\n          onClick={this.openDialog.bind(this)}\n        >\n          <div className=\"code-label\">+</div>\n        </div>\n        <AnyKeyDialog\n          open={this.state.openDialog}\n          title=\"Create a new key\"\n          labelOk=\"Create\"\n          value={{ label: 'Any', code: 0 }}\n          onClickCancel={this.closeDialog.bind(this)}\n          onClickOk={(key: AnyKey) => {\n            console.log(key);\n            this.props.addAnyKey!(key);\n            this.closeDialog();\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport AddAnyKeycodeKey from './AddAnyKeycodeKey';\nimport { RootState } from '../../../../store/state';\nimport { AnyKeycodeKeyActions } from '../../../../actions/actions';\nimport { AnyKey } from '../KeycodeKey';\n\n// eslint-disable-next-line no-unused-vars\nconst mapStateToProps = (state: RootState) => {\n  return {};\n};\nexport type KeycodeAddKeyStateType = ReturnType<typeof mapStateToProps>;\n\nconst mapDispatchToProps = (_dispatch: any) => {\n  return {\n    addAnyKey: (key: AnyKey) => {\n      _dispatch(AnyKeycodeKeyActions.addAnyKey(key));\n    },\n  };\n};\nexport type KeycodeAddKeyActionsType = ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddAnyKeycodeKey);\n","import React from 'react';\nimport './Keycodes.scss';\nimport { Button } from '@material-ui/core';\nimport KeycodeKey, { Key } from '../keycodekey/KeycodeKey.container';\nimport { KeycodesActionsType, KeycodesStateType } from './Keycodes.container';\nimport { IKeycodeCategory } from '../../../services/hid/Hid';\nimport KeycodeAddKey from '../keycodekey/any/AddAnyKeycodeKey.container';\n\nconst KeycodeCategories = [\n  { name: IKeycodeCategory.BASIC, label: 'Basic' },\n  { name: IKeycodeCategory.NUMBER, label: 'Number' },\n  { name: IKeycodeCategory.MEDIA, label: 'Media' },\n  { name: IKeycodeCategory.LAYERS, label: 'Layers' },\n  { name: IKeycodeCategory.SPECIAL, label: 'Special' },\n  { name: IKeycodeCategory.LIGHTING, label: 'QMK Lighting' },\n  { name: IKeycodeCategory.ANY, label: 'Custom' },\n] as const;\n\ntype OwnProps = {};\n\ntype KeycodesProps = OwnProps &\n  Partial<KeycodesActionsType> &\n  Partial<KeycodesStateType>;\n\nexport default class Keycodes extends React.Component<KeycodesProps, {}> {\n  constructor(props: KeycodesProps | Readonly<KeycodesProps>) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.loadKeycodeInfoForAllCategories!(this.props._hidInstance!);\n  }\n\n  // eslint-disable-next-line no-undef\n  onChangeMacroText = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const macroKeys = this.props.keys![IKeycodeCategory.MACRO];\n    if (\n      macroKeys.find(\n        (key) => key.keymap.code === this.props.selectedKey?.keymap.code\n      )\n    ) {\n      this.props.setMacro!(\n        this.props.selectedKey?.keymap.code,\n        event.target.value\n      );\n    }\n  };\n\n  render() {\n    let keys: Key[];\n    if (this.props.category && this.props.keys) {\n      keys = this.props.keys[this.props.category] || [];\n    } else {\n      keys = [];\n    }\n    return (\n      <React.Fragment>\n        <div className=\"key-categories\">\n          {KeycodeCategories.map((cat, index) => {\n            return (\n              <div className=\"key-category\" key={index}>\n                <Button\n                  disabled={this.props.category === cat.name}\n                  onClick={this.props.selectCategory!.bind(this, cat.name)}\n                >\n                  {cat.label}\n                </Button>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"keycodes\">\n          {keys.map((key, index) => {\n            return (\n              <KeycodeKey\n                index={index}\n                key={`${this.props.category}${index}`}\n                value={key}\n                draggable={true}\n              />\n            );\n          })}\n          {this.props.category == IKeycodeCategory.ANY && (\n            <KeycodeAddKey key={'add'} />\n          )}\n        </div>\n\n        {this.props.category == IKeycodeCategory.MACRO && (\n          <Macro\n            selectedKey={this.props.selectedKey}\n            macroText={this.props.macroText}\n            onChangeMacroText={this.onChangeMacroText}\n          />\n        )}\n        {this.props.draggingKey && (\n          <div\n            className=\"dragMask\"\n            style={{ marginLeft: -8, marginTop: -6 }}\n          ></div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\ntype MacroType = {\n  selectedKey?: Key | null;\n  macroText?: string | null;\n\n  // eslint-disable-next-line no-unused-vars\n  onChangeMacroText: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n};\nfunction Macro(props: MacroType) {\n  return (\n    <div className=\"macro-wrapper\">\n      <div className=\"macro\">\n        <hr />\n        {props.selectedKey ? (\n          <div>{props.selectedKey!.label}</div>\n        ) : (\n          'Please click above key to input its macro'\n        )}\n\n        <textarea\n          placeholder={'{KC_A,KC_NO,KC_A,KC_B}'}\n          onChange={props.onChangeMacroText}\n          disabled={!props.selectedKey}\n          value={props.macroText || ''}\n        ></textarea>\n        <div>\n          Enter text directry, or wrap{' '}\n          <a href=\"https://beta.docs.qmk.fm/using-qmk/simple-keycodes/keycodes_basic\">\n            Basic Keycodes\n          </a>{' '}\n          in {'{}'}.\n        </div>\n        <div>\n          Single tap: {'{KC_XXX}'}, Chord: {'{KC_XXX, KC_YYY, KC_ZZZ}'}.\n        </div>\n        <div>Type ? to search for keycodes.</div>\n      </div>\n    </div>\n  );\n}\n","import { connect } from 'react-redux';\nimport Keycodes from './Keycodes';\nimport { RootState } from '../../../store/state';\nimport { KeycodeKeyActions, KeycodesActions } from '../../../actions/actions';\nimport { IHid, IKeycodeCategory } from '../../../services/hid/Hid';\n\nconst mapStateToProps = (state: RootState) => {\n  const code = state.keycodeKey.selectedKey?.keymap.code;\n  let macroText: string | null;\n  const keys = state.keycodes.keys[IKeycodeCategory.MACRO];\n  if (keys) {\n    const key = keys.find((key) => key.keymap.code === code);\n    macroText = key ? state.entities.device.macros[key.keymap.code] : null;\n  } else {\n    macroText = null;\n  }\n\n  return {\n    _hidInstance: state.hid.instance,\n    category: state.keycodes.category,\n    draggingKey: state.keycodeKey.draggingKey,\n    keys: state.keycodes.keys,\n    selectedKey: state.keycodeKey.selectedKey,\n    macroText,\n  };\n};\nexport type KeycodesStateType = ReturnType<typeof mapStateToProps>;\n\nconst mapDispatchToProps = (_dispatch: any) => {\n  return {\n    selectCategory: (value: string) => {\n      _dispatch(KeycodesActions.updateCategory(value));\n    },\n    setMacro: (code: number | undefined, text: string) => {\n      _dispatch(KeycodesActions.updateMacro(code, text));\n    },\n    loadKeycodeInfoForAllCategories: (hid: IHid) => {\n      _dispatch(KeycodesActions.loadKeycodeInfoForAllCategories(hid));\n    },\n    releaseSelectedKey: () => {\n      _dispatch(KeycodeKeyActions.updateSelectedKey(null));\n    },\n  };\n};\n\nexport type KeycodesActionsType = ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Keycodes);\n","import React, { ReactNode } from 'react';\nimport KeyModel from '../../../models/KeyModel';\nimport { IKeymap } from '../../../services/hid/Hid';\nimport { Key, genKey } from '../keycodekey/KeycodeKey.container';\nimport { KeycapActionsType, KeycapStateType } from './Keycap.container';\nimport { Badge, withStyles } from '@material-ui/core';\n\nimport './Keycap.scss';\n\nexport const KEY_SIZE = 54;\nconst KEY_CAP_BORDER = 1;\nconst KEY_CAP_MARGIN_HEIGHT = 5;\nconst KEY_CAP_MARGIN_WIDTH = 5;\nconst KEY_CAP_ROOF_TOP_MARGIN = 3;\n\ntype KeycapOwnState = {\n  onDragOver: boolean;\n};\n\n// TODO: refactoring properties, unify the model\nexport type KeycapOwnProps = {\n  model: KeyModel;\n};\n\ntype KeycapProps = KeycapOwnProps &\n  Partial<KeycapStateType> &\n  Partial<KeycapActionsType>;\n\nexport default class Keycap extends React.Component<\n  KeycapProps,\n  KeycapOwnState\n> {\n  constructor(props: KeycapProps | Readonly<KeycapProps>) {\n    super(props);\n    this.state = {\n      onDragOver: false,\n    };\n  }\n\n  get isOddly(): boolean {\n    return this.props.model.isOddly;\n  }\n\n  render(): ReactNode {\n    const color = this.props.model.color;\n    let roofColor;\n    let roofEdgeColor;\n    if (color === '#aaaaaa') {\n      roofColor = '#C8C8C8';\n      roofEdgeColor = '#D0D0D0';\n    } else if (color === '#777777') {\n      roofColor = '#8D8D8D';\n      roofEdgeColor = '#939393';\n    } else {\n      roofColor = '#F2F2F2';\n      roofEdgeColor = '#F8F8F8';\n    }\n\n    const style = this.props.model.styleAbsolute;\n    const style2 = this.props.model.isOddly\n      ? this.props.model.styleAbsolute2\n      : undefined;\n    const styleTransform = this.props.model.styleTransform;\n\n    const width = Number(style.width) || KEY_SIZE;\n    const height = Number(style.height) || KEY_SIZE;\n    const top = Number(style.top) || 0;\n    const left = Number(style.left) || 0;\n\n    const width2 = Number(style2?.width) || KEY_SIZE;\n    const height2 = Number(style2?.height) || KEY_SIZE;\n    const top2 = Number(style2?.top) || 0;\n    const left2 = Number(style2?.left) || 0;\n\n    const baseStyle2 = {\n      ...style2,\n      width: left2 < 0 ? width2 - KEY_CAP_MARGIN_WIDTH * 2 : width2,\n    };\n    const coverStyle = {\n      ...style,\n      width:\n        left2 < 0 ? width - KEY_CAP_MARGIN_WIDTH : width - KEY_CAP_BORDER * 2,\n      height: height - KEY_CAP_BORDER * 2,\n      top: top + KEY_CAP_BORDER,\n      left: left + KEY_CAP_BORDER,\n    };\n    const roofStyle = {\n      ...style,\n      width: width - (KEY_CAP_MARGIN_WIDTH + KEY_CAP_BORDER) * 2,\n      height: height - (KEY_CAP_MARGIN_HEIGHT + KEY_CAP_BORDER) * 2,\n      top: top + KEY_CAP_ROOF_TOP_MARGIN,\n      left: left + KEY_CAP_BORDER + KEY_CAP_MARGIN_WIDTH,\n      borderColor: roofEdgeColor,\n    };\n\n    const roofStyle2 = {\n      ...style2,\n      width: width2 - (KEY_CAP_BORDER + KEY_CAP_MARGIN_WIDTH) * 2,\n      height: height2 - (KEY_CAP_BORDER + KEY_CAP_MARGIN_HEIGHT) * 2,\n      top: top2 + KEY_CAP_ROOF_TOP_MARGIN,\n      left: left2 + KEY_CAP_MARGIN_WIDTH + KEY_CAP_BORDER,\n      background: roofColor,\n      borderColor: roofEdgeColor,\n    };\n\n    const labelsStyle = {\n      ...style,\n      width: width - (KEY_CAP_MARGIN_WIDTH + KEY_CAP_BORDER * 2) * 2,\n      KEY_CAP_BORDER,\n      height: height - KEY_CAP_MARGIN_HEIGHT * 2 - KEY_CAP_BORDER * 4,\n      top: top + KEY_CAP_ROOF_TOP_MARGIN + KEY_CAP_BORDER,\n      left: left + KEY_CAP_BORDER + KEY_CAP_MARGIN_WIDTH + KEY_CAP_BORDER,\n      background: roofColor,\n    };\n\n    const selectedLayer = this.props.selectedLayer!;\n    const selectedPos = this.props.selectedPos!;\n    const pos = this.props.model.pos;\n    const option = this.props.model.optionLabel;\n    const isSelectedKey = pos == selectedPos;\n    const keymap: IKeymap = this.props.keymaps![selectedLayer][pos];\n    const orgKey: Key = genKey(keymap);\n    const dstKey: Key | null =\n      pos in this.props.remaps![selectedLayer]\n        ? genKey(this.props.remaps![selectedLayer][pos])\n        : null;\n\n    return (\n      <div\n        className={[\n          'keycap-base',\n          this.state.onDragOver && 'drag-over',\n          dstKey && 'has-diff',\n          isSelectedKey && 'keycap-selected',\n        ].join(' ')}\n        style={styleTransform}\n        onDragOver={(event) => {\n          event.preventDefault();\n          if (!this.state.onDragOver) {\n            this.setState({ onDragOver: true });\n          }\n        }}\n        onDragLeave={() => {\n          this.setState({ onDragOver: false });\n        }}\n        onDrop={() => {\n          this.setState({ onDragOver: false });\n          this.props.onDropKeycode!(\n            this.props.draggingKey!,\n            this.props.selectedLayer!,\n            pos,\n            orgKey\n          );\n        }}\n      >\n        {/* base1 */}\n        <div\n          className={['keycap', 'keycap-border'].join(' ')}\n          style={style}\n          onClick={this.props.onClickKeycap!.bind(\n            this,\n            pos,\n            isSelectedKey,\n            orgKey,\n            dstKey\n          )}\n        ></div>\n        {this.isOddly && (\n          <React.Fragment>\n            {/* base2 */}\n            <div\n              className={[\n                'keycap',\n                'keycap-border',\n                'keycap2',\n                isSelectedKey && 'keycap-selected',\n              ].join(' ')}\n              style={baseStyle2}\n              onClick={this.props.onClickKeycap!.bind(\n                this,\n                pos,\n                isSelectedKey,\n                orgKey,\n                dstKey\n              )}\n              onDragOver={(event) => {\n                event.preventDefault();\n                if (!this.state.onDragOver) {\n                  this.setState({ onDragOver: true });\n                }\n              }}\n            ></div>\n\n            {/* cover1 */}\n            <div\n              className={[\n                'keycap',\n                'pointer-pass-through',\n                isSelectedKey && 'keycap-selected',\n              ].join(' ')}\n              style={coverStyle}\n              onClick={this.props.onClickKeycap!.bind(\n                this,\n                pos,\n                isSelectedKey,\n                orgKey,\n                dstKey\n              )}\n            ></div>\n          </React.Fragment>\n        )}\n        {/* roof1 */}\n        <div\n          className={['keyroof-base'].join(' ')}\n          style={roofStyle}\n          onClick={this.props.onClickKeycap?.bind(\n            this,\n            pos,\n            isSelectedKey,\n            orgKey,\n            dstKey\n          )}\n        ></div>\n        {this.isOddly && (\n          <React.Fragment>\n            {/* roof2 */}\n            <div\n              className={['keyroof-base', 'pointer-pass-through'].join(' ')}\n              style={roofStyle2}\n              onClick={this.props.onClickKeycap!.bind(\n                this,\n                pos,\n                isSelectedKey,\n                orgKey,\n                dstKey\n              )}\n            ></div>\n          </React.Fragment>\n        )}\n        {/* labels */}\n        <div\n          className={['keyroof'].join(' ')}\n          style={labelsStyle}\n          onClick={this.props.onClickKeycap?.bind(\n            this,\n            pos,\n            isSelectedKey,\n            orgKey,\n            dstKey\n          )}\n        >\n          <KeyLabel\n            label={dstKey ? dstKey.label : orgKey.label}\n            pos={pos}\n            hasDiff={dstKey != null}\n            option={option}\n            debug={false}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\ntype KeyLabelType = {\n  label: string;\n  hasDiff: boolean;\n  pos?: string;\n  option?: string;\n  debug?: boolean;\n};\nfunction KeyLabel(props: KeyLabelType) {\n  if (props.debug) {\n    return (\n      <React.Fragment>\n        <div className=\"keylabel\">\n          <div className=\"label left top\">{props.pos}</div>\n          <div className=\"label center\"></div>\n          <div className=\"label right\"></div>\n        </div>\n        <div className=\"keylabel\">\n          <div className=\"label left\"></div>\n          <div className=\"label center\">{props.label}</div>\n          <div className=\"label right\"></div>\n        </div>\n        <div className=\"keylabel vbottom\">\n          <div className=\"label left\"></div>\n          <div className=\"label center\"></div>\n          <div className=\"label right\">{props.option}</div>\n        </div>\n      </React.Fragment>\n    );\n  } else {\n    const length = props.label.split(' ').length;\n    const labelSize = length == 2 ? '_m' : length == 3 ? '_s' : '';\n    return (\n      <div className=\"keylabel vcenter\">\n        <div className={['label', 'center', labelSize].join(' ')}>\n          <StyledBadge color=\"primary\" variant=\"dot\" invisible={!props.hasDiff}>\n            {props.label}\n          </StyledBadge>\n        </div>\n      </div>\n    );\n  }\n}\n\n// eslint-disable-next-line no-unused-vars\nconst StyledBadge = withStyles((_) => ({\n  badge: {\n    right: -2,\n    top: -2,\n    height: 4,\n    padding: 0,\n    minWidth: 4,\n    borderRadius: 2,\n  },\n}))(Badge);\n","import { CSSProperties } from 'react';\nimport { KEY_SIZE } from '../components/configure/keycap/Keycap';\nimport { KeyOp } from '../gen/types/KeyboardDefinition';\n\nexport const OPTION_DEFAULT = '-';\n\nexport default class KeyModel {\n  readonly location: string;\n  readonly pos: string;\n  readonly optionLabel: string;\n  readonly option: string;\n  readonly optionChoice: string;\n  readonly top: number;\n  readonly left: number;\n  readonly height: number;\n  readonly width: number;\n  readonly color: string;\n  readonly rotate: number;\n  readonly originLeft: number;\n  readonly originTop: number;\n  readonly transformOrigin: string;\n  readonly top2: number;\n  readonly left2: number;\n  readonly height2: number;\n  readonly width2: number;\n  readonly keyOp: KeyOp | null;\n  private _x: number;\n  private _y: number;\n\n  constructor(\n    op: KeyOp | null,\n    location: string, // \"col,row[\\n\\n\\nOption,OptionChoice]\"\n    x: number,\n    y: number,\n    c: string,\n    r: number = 0,\n    rx: number = 0,\n    ry: number = 0\n  ) {\n    this.keyOp = op;\n    this._x = x;\n    this._y = y;\n    this.location = location;\n    const locs = location.split('\\n\\n\\n');\n    this.pos = locs[0];\n    this.optionLabel = locs.length == 2 ? locs[1] : '';\n    const options =\n      locs.length == 2 ? locs[1].split(',') : [OPTION_DEFAULT, OPTION_DEFAULT];\n    this.option = options[0];\n    this.optionChoice = options[1];\n    this.left = x * KEY_SIZE;\n    this.top = y * KEY_SIZE;\n\n    this.color = c;\n    this.rotate = r;\n    this.originLeft = rx * KEY_SIZE;\n    this.originTop = ry * KEY_SIZE;\n    this.transformOrigin = `${rx * KEY_SIZE}px ${ry * KEY_SIZE}px`;\n\n    if (op) {\n      this.width = op.w ? op.w * KEY_SIZE : KEY_SIZE;\n      this.height = op.h ? op.h * KEY_SIZE : KEY_SIZE;\n      const x2 = op.x2 ? x + op.x2 : x;\n      const y2 = op.y2 ? y + op.y2 : y;\n      const w2 = op.w2 || NaN;\n      const h2 = op.h2 || NaN;\n\n      this.left2 = x2 * KEY_SIZE;\n      this.top2 = y2 * KEY_SIZE;\n      this.height2 = h2 * KEY_SIZE;\n      this.width2 = w2 * KEY_SIZE;\n    } else {\n      this.width = KEY_SIZE;\n      this.height = KEY_SIZE;\n      this.left2 = x * KEY_SIZE;\n      this.top2 = y * KEY_SIZE;\n      this.height2 = NaN;\n      this.width2 = NaN;\n    }\n  }\n\n  get x(): number {\n    return this._x;\n  }\n\n  get y(): number {\n    return this._y;\n  }\n\n  get w(): number {\n    if (this.keyOp) {\n      return this.keyOp.w ? this.keyOp.w : 1;\n    } else {\n      return 1;\n    }\n  }\n\n  get isDefault(): boolean {\n    return this.option === OPTION_DEFAULT;\n  }\n\n  get isDecal(): boolean {\n    return this.keyOp ? !!this.keyOp.d : false;\n  }\n\n  get isDefaultChoice(): boolean {\n    return this.optionChoice == '0';\n  }\n\n  get isOddly(): boolean {\n    return (\n      !Number.isNaN(this.top2) &&\n      !Number.isNaN(this.left2) &&\n      !Number.isNaN(this.height2) &&\n      !Number.isNaN(this.width2)\n    );\n  }\n\n  get style(): CSSProperties {\n    return {\n      width: this.width,\n      height: this.height,\n      background: this.color,\n    };\n  }\n\n  get styleAbsolute(): CSSProperties {\n    return {\n      position: 'absolute',\n      top: this.top,\n      left: this.left,\n      width: this.width,\n      height: this.height,\n      background: this.color,\n    };\n  }\n  get styleAbsolute2(): CSSProperties {\n    return {\n      position: 'absolute',\n      top: this.top2,\n      left: this.left2,\n      width: this.width2,\n      height: this.height2,\n      background: this.color,\n    };\n  }\n  get styleTransform(): CSSProperties {\n    if (Number.isNaN(this.originTop) || Number.isNaN(this.originLeft)) {\n      return {\n        transform: `rotate(${this.rotate}deg)`,\n      };\n    } else {\n      return {\n        transform: `rotate(${this.rotate}deg)`,\n        transformOrigin: `${this.originLeft}px ${this.originTop}px`,\n      };\n    }\n  }\n\n  get endRight(): number {\n    const rad = this.rotate * (Math.PI / 180);\n    const x0 = this.left - this.originLeft;\n    const y0 = this.top - this.originTop;\n    const x1 = x0 * Math.cos(rad) - y0 * Math.sin(rad);\n    const right = Math.max(this.width, this.width2 || 0) * Math.sin(rad);\n    return this.originLeft + x1 + this.width + right;\n  }\n\n  get endBottom(): number {\n    const rad = this.rotate * (Math.PI / 180);\n    const x0 = Math.min(this.left, this.left2) - this.originLeft; // left-top\n    const y0 = this.top - this.originTop;\n    const y1 = x0 * Math.sin(rad) + y0 * Math.cos(rad);\n    const leftBottom =\n      Math.max(this.height || 0, this.height2 || 0) * Math.cos(rad);\n\n    const rightBottom =\n      leftBottom +\n      Math.max(this.width, this.width2 + (this.left2 - this.left) || 0) *\n        Math.sin(rad);\n\n    const bottom = 0 < rad ? rightBottom : leftBottom;\n    return this.originTop + y1 + bottom;\n  }\n}\n","import { KeyOp } from '../gen/types/KeyboardDefinition';\nimport KeyModel, { OPTION_DEFAULT } from './KeyModel';\n\nclass Current {\n  x = 0;\n  y = 0;\n  c = '#cccccc';\n  r = 0;\n  rx = 0;\n  ry = 0;\n  x2 = 0;\n  y2 = 0;\n\n  constructor(curr?: Current) {\n    if (curr) {\n      this.x = curr.x;\n      this.y = curr.y;\n      this.c = curr.c;\n      this.r = curr.r;\n      this.rx = curr.rx;\n      this.ry = curr.ry;\n      this.x2 = curr.x2;\n      this.y2 = curr.y2;\n    }\n  }\n\n  minus(x: number, y: number) {\n    this.x -= x;\n    this.y -= y;\n  }\n\n  nextRow() {\n    this.x = this.rx ? this.rx : 0;\n    this.y = this.ry ? this.ry : this.y + 1;\n  }\n\n  setOp(op: KeyOp) {\n    if (op.rx) {\n      this.rx = op.rx;\n      this.x = op.rx;\n    }\n    if (op.ry) {\n      this.ry = op.ry;\n      this.y = op.ry;\n    }\n    if (op.x) {\n      this.x += op.x;\n    }\n    if (op.y) {\n      this.y += op.y;\n    }\n\n    if (op.r) {\n      this.r = op.r;\n    }\n\n    if (op.x2) {\n      this.x2 = op.x2;\n    }\n\n    if (op.y2) {\n      this.y2 = op.y2;\n    }\n\n    if (op.c) {\n      this.c = op.c;\n    }\n  }\n\n  next(w: number) {\n    this.x += w;\n    this.x2 = 0;\n    this.y2 = 0;\n  }\n}\n\nclass KeymapItem {\n  private _curr: Current;\n  readonly op: KeyOp | null;\n  readonly label: string;\n  private pos: string;\n  readonly option: string;\n  readonly choice: string;\n\n  constructor(curr: Current, label: string, op: KeyOp | null = null) {\n    this._curr = new Current(curr);\n    this.op = op;\n    this.label = label;\n    const locs = label.split('\\n\\n\\n');\n    this.pos = locs[0];\n    const options =\n      locs.length == 2 ? locs[1].split(',') : [OPTION_DEFAULT, OPTION_DEFAULT];\n    this.option = options[0];\n    this.choice = options[1];\n  }\n\n  get isDefault(): boolean {\n    return this.option == OPTION_DEFAULT;\n  }\n\n  get current(): Current {\n    return Object.assign({}, this._curr);\n  }\n\n  get x(): number {\n    return this._curr.x;\n  }\n\n  get y(): number {\n    return this._curr.y;\n  }\n\n  get c(): string {\n    return this._curr.c;\n  }\n\n  get r(): number {\n    return this._curr.r;\n  }\n\n  get rx(): number {\n    return this._curr.rx;\n  }\n\n  get ry(): number {\n    return this._curr.ry;\n  }\n\n  get x2(): number {\n    return this._curr.x2;\n  }\n\n  get y2(): number {\n    return this._curr.y2;\n  }\n\n  get w(): number {\n    if (this.op && this.op.w) {\n      return this.op.w;\n    }\n    return 1;\n  }\n\n  align(x: number, y: number) {\n    this._curr.minus(x, y);\n  }\n\n  relocate(curr: Current) {\n    this._curr = curr;\n  }\n}\n\nexport default class KeyboardModel {\n  private keymap: KeyModel[];\n  readonly width: number;\n  readonly height: number;\n\n  constructor(km: ((string | KeyOp)[] | { name: string })[]) {\n    const _km = km.filter((item) => Array.isArray(item)) as (\n      | string\n      | KeyOp\n    )[][];\n    const { keymap, width, height } = this.parseKeyMap(_km);\n    this.keymap = keymap;\n    this.width = width;\n    this.height = height;\n  }\n\n  getKeymap(options?: { option: string; optionChoice: string }[]): KeyModel[] {\n    if (!options) return this.keymap;\n\n    return this.keymap.filter((item) => {\n      return (\n        item.isDefault ||\n        0 <=\n          options.findIndex(\n            (op) =>\n              op.option == item.option && op.optionChoice == item.optionChoice\n          )\n      );\n    });\n  }\n\n  private parseKeyMap(keymap: (string | KeyOp)[][]) {\n    const optionKeymaps: {\n      [row: string]: { [option: string]: { [choice: string]: KeymapItem[] } };\n    } = {};\n    const keymapsList: KeymapItem[][] = [];\n\n    // STEP1: build  layerKeymaps\n    const curr = new Current();\n    for (let row = 0; row < keymap.length; row++) {\n      const keyRow = keymap[row];\n      keymapsList.push([]);\n      optionKeymaps[row] = {};\n\n      curr.nextRow();\n      for (let col = 0; col < keyRow.length; col++) {\n        const item: string | KeyOp = keyRow[col]; // KeyMapOp or string('rwo,col')\n        let keymapItem = null;\n\n        if (typeof item === 'string') {\n          keymapItem = new KeymapItem(curr, item);\n        } else {\n          const op = item as KeyOp;\n          const label = keyRow[++col] as string; // next item should be string(row,col)\n          curr.setOp(op);\n          keymapItem = new KeymapItem(curr, label, op);\n        }\n        curr.next(keymapItem.w);\n\n        keymapsList[row].push(keymapItem);\n        if (!keymapItem.isDefault && keymapItem.choice != '0') {\n          const option = keymapItem.option;\n          const choice = keymapItem.choice;\n          if (!Object.prototype.hasOwnProperty.call(optionKeymaps[row], option))\n            optionKeymaps[row][option] = {};\n          if (\n            !Object.prototype.hasOwnProperty.call(\n              optionKeymaps[row][option],\n              choice\n            )\n          )\n            optionKeymaps[row][option][choice] = [];\n          optionKeymaps[row][option][choice].push(keymapItem);\n        }\n      }\n    }\n\n    // STEP2: align default keymap to zero, shrink for optional keys' layout\n    const minX = keymapsList.reduce((min: number, keymaps: KeymapItem[]) => {\n      return keymaps[0].isDefault ? Math.min(min, keymaps[0].x) : min;\n    }, Infinity);\n    const minY = keymapsList.reduce((min: number, keymaps: KeymapItem[]) => {\n      return keymaps.reduce((m, item) => Math.min(item.y, m), min);\n    }, Infinity);\n    keymapsList.forEach((keymaps: KeymapItem[]) => {\n      keymaps.forEach((item) => item.align(minX, minY));\n    });\n\n    const searchOriginalPosition = (targetRow: number, option: string) => {\n      // search same row\n      const findOrigin = (keymaps: KeymapItem[]): KeymapItem | undefined => {\n        return keymaps.find(\n          (item: KeymapItem) => item.option == option && item.choice == '0'\n        );\n      };\n\n      let targetItem: KeymapItem | undefined = findOrigin(\n        keymapsList[targetRow]\n      );\n      if (targetItem) return targetItem.current;\n\n      // search below row\n      for (let i = targetRow + 1; i < keymapsList.length; i++) {\n        targetItem = findOrigin(keymapsList[i]);\n        if (targetItem) break;\n      }\n      if (targetItem) return targetItem.current;\n\n      // search above row\n      for (let i = targetRow - 1; i >= 0; i--) {\n        targetItem = findOrigin(keymapsList[i]);\n        if (targetItem) break;\n      }\n      if (targetItem) return targetItem.current;\n    };\n\n    // STEP3: relocate option keys' position\n    Object.keys(optionKeymaps).forEach((row: string) => {\n      Object.keys(optionKeymaps[row]).forEach((option: string) => {\n        Object.keys(optionKeymaps[row][option]).forEach((choice: string) => {\n          const choices: KeymapItem[] = optionKeymaps[row][option][choice];\n          const origCurr = searchOriginalPosition(Number(row), option);\n          const diffX =\n            choices[0].x + choices[0].x2 - origCurr!.x + origCurr!.x2;\n          const diffY =\n            choices[0].y + choices[0].y2 - origCurr!.y + origCurr!.y2;\n          choices.forEach((item: KeymapItem) => {\n            item.align(diffX, diffY);\n          });\n        });\n      });\n    });\n\n    let width = 0;\n    let height = 0;\n    const list: KeyModel[] = [];\n    keymapsList.flat().forEach((item: KeymapItem) => {\n      let model = new KeyModel(item.op, item.label, item.x, item.y, item.c, item.r, item.rx, item.ry); // prettier-ignore\n      list.push(model);\n      if (model.isDefault || model.optionChoice == '0') {\n        width = Math.max(width, model.endRight);\n        height = Math.max(height, model.endBottom);\n      }\n    });\n    return {\n      keymap: list,\n      width: width,\n      height: height,\n    };\n  }\n}\n","import { connect } from 'react-redux';\nimport Keycap from './Keycap';\nimport { RootState } from '../../../store/state';\nimport {\n  KeyboardsActions,\n  KeydiffActions,\n  AppActions,\n} from '../../../actions/actions';\nimport { Key } from '../keycodekey/KeycodeKey.container';\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    draggingKey: state.keycodeKey.draggingKey,\n    selectedPos: state.keyboards.selectedPos,\n    selectedLayer: state.keyboards.selectedLayer,\n    keymaps: state.entities.device.keymaps,\n    remaps: state.app.remaps,\n  };\n};\nexport type KeycapStateType = ReturnType<typeof mapStateToProps>;\n\nconst mapDispatchToProps = (_dispatch: any) => {\n  return {\n    onClickKeycap: (\n      pos: string,\n      isSelectedKey: boolean,\n      orgKey: Key,\n      dstKey: Key | null\n    ) => {\n      if (isSelectedKey) {\n        // toggle selected keycap\n        _dispatch(KeydiffActions.clearKeydiff());\n        _dispatch(KeyboardsActions.clearSelectedPos());\n\n        return;\n      }\n\n      // set new selected Position and show key diff\n      if (dstKey) {\n        _dispatch(KeydiffActions.updateKeydiff(orgKey.keymap, dstKey.keymap));\n      } else {\n        _dispatch(KeydiffActions.clearKeydiff());\n      }\n\n      _dispatch(KeyboardsActions.updateSelectedPos(pos));\n    },\n    onDropKeycode: (\n      draggingKey: Key,\n      selectedLayer: number,\n      pos: string,\n      orgKey: Key\n    ) => {\n      if (draggingKey.keymap.code === orgKey.keymap.code) {\n        return;\n      }\n      _dispatch(\n        AppActions.remapsSetKey(selectedLayer, pos, draggingKey.keymap)\n      );\n    },\n  };\n};\n\nexport type KeycapActionsType = ReturnType<typeof mapDispatchToProps>;\nexport default connect(mapStateToProps, mapDispatchToProps)(Keycap);\n","import React from 'react';\nimport './LayoutOptionsDialog.scss';\nimport {\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  MenuItem,\n  Select,\n  Switch,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n  LayoutOptionsDialogActionsType,\n  LayoutOptionsDialogStateType,\n} from './LayoutOptionsDialog.container';\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\nimport Draggable from 'react-draggable';\n\ntype OwnProps = {\n  open: boolean;\n  onClose: () => void;\n};\n\ntype LayoutOptionsDialogProps = OwnProps &\n  Partial<LayoutOptionsDialogActionsType> &\n  Partial<LayoutOptionsDialogStateType>;\n\ntype OwnState = {};\n\nexport default class LayoutOptionsDialog extends React.Component<\n  LayoutOptionsDialogProps,\n  OwnState\n> {\n  constructor(\n    props: LayoutOptionsDialogProps | Readonly<LayoutOptionsDialogProps>\n  ) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const labels = this.props.keyboardLayoutOptions!;\n    const selectedLayoutOptions = this.props.selectedKeyboardOptions!;\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={() => {}}\n        onEnter={() => {}}\n        PaperComponent={PaperComponent}\n        className=\"layout-options-dialog\"\n      >\n        <DialogTitle id=\"draggable-dialog-title\" style={{ cursor: 'move' }}>\n          Layout Options\n          <div className=\"close-dialog\">\n            <CloseIcon onClick={this.props.onClose} />\n          </div>\n        </DialogTitle>\n        <DialogContent dividers className=\"layout-options\">\n          <Grid container spacing={1}>\n            {labels.map((options, index) => {\n              return (\n                <OptionRowComponent\n                  key={index}\n                  options={options}\n                  selectedOption={selectedLayoutOptions[index]}\n                  onChange={(choice: string | null) => {\n                    this.props.setLayoutOption!(index, choice);\n                  }}\n                />\n              );\n            })}\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n\ntype OptionRowType = {\n  options: string | string[];\n  selectedOption: string | null;\n  // eslint-disable-next-line no-unused-vars\n  onChange: (value: string | null) => void;\n};\nfunction OptionRowComponent(props: OptionRowType) {\n  if (typeof props.options == 'string') {\n    const option: string = props.options;\n    return (\n      <React.Fragment>\n        <Grid item xs={6} className=\"option-label\">\n          {props.options}\n        </Grid>\n        <Grid item xs={6} className=\"option-value\">\n          <Switch\n            checked={!!props.selectedOption}\n            onChange={(e) => {\n              props.onChange(e.target.checked ? option : null);\n            }}\n            color=\"primary\"\n            name=\"checkedB\"\n            inputProps={{ 'aria-label': 'primary checkbox' }}\n          />\n        </Grid>\n      </React.Fragment>\n    );\n  }\n\n  const label = props.options[0];\n  const choices: string[] = props.options.slice(1);\n  return (\n    <React.Fragment>\n      <Grid item xs={6} className=\"option-label\">\n        {props.options[0]}\n      </Grid>\n      <Grid item xs={6} className=\"option-value\">\n        <Select\n          value={props.selectedOption}\n          onChange={(e) => {\n            props.onChange(e.target.value as string);\n          }}\n          className=\"option-value-select\"\n        >\n          {choices.map((choice, index) => {\n            return (\n              <MenuItem key={`${label}${index}`} value={choice}>\n                {choice}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nfunction PaperComponent(props: PaperProps) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n","import { connect } from 'react-redux';\nimport LayoutOptionsDialog from './LayoutOptionsDialog';\nimport { RootState } from '../../../store/state';\nimport { LayoutOptionsActions } from '../../../actions/actions';\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    selectedKeyboardOptions: state.layoutOptions.selectedOptions,\n    keyboardLayoutOptions: state.entities.keyboardDefinition?.layouts.labels,\n  };\n};\nexport type LayoutOptionsDialogStateType = ReturnType<typeof mapStateToProps>;\n\nconst mapDispatchToProps = (_dispatch: any) => {\n  return {\n    setLayoutOption: (optionIndex: number, option: string | null) => {\n      _dispatch(LayoutOptionsActions.updateSelectedOption(optionIndex, option));\n    },\n  };\n};\n\nexport type LayoutOptionsDialogActionsType = ReturnType<\n  typeof mapDispatchToProps\n>;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LayoutOptionsDialog);\n","import React from 'react';\nimport './Keyboards.scss';\nimport KeyboardModel from '../../../models/KeyboardModel';\nimport { Badge, Chip, withStyles } from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport KeyModel from '../../../models/KeyModel';\nimport Keycap from '../keycap/Keycap.container';\nimport {\n  KeyboardsActionsType,\n  KeyboardsStateType,\n} from './Keyboards.container';\nimport LayoutOptionsDialog from '../layoutoptions/LayoutOptionsDialog.container';\n\nconst BORDER_WIDTH = 4;\nconst LAYOUT_PADDING = 16;\n\ntype OwnProps = {};\n\ntype KeyboardsProps = OwnProps &\n  Partial<KeyboardsActionsType> &\n  Partial<KeyboardsStateType>;\n\ntype KeyboardsState = {\n  keyboard: KeyboardModel; // TODO: to be redux\n  openLayoutOptionDialog: boolean;\n};\n\nexport default class Keyboards extends React.Component<\n  KeyboardsProps,\n  KeyboardsState\n> {\n  constructor(props: KeyboardsProps | Readonly<KeyboardsProps>) {\n    super(props);\n    const kbd = new KeyboardModel(\n      this.props.keyboardDefinition!.layouts.keymap\n    );\n    this.state = {\n      keyboard: kbd,\n      openLayoutOptionDialog: false,\n    };\n  }\n\n  componentDidUpdate() {\n    this.props.setKeyboardHeight!(this.state.keyboard.height);\n  }\n\n  onClickLayer = (layer: number) => {\n    this.props.onClickLayerNumber!(layer);\n  };\n\n  private openLayoutOptionDialog() {\n    this.setState({ openLayoutOptionDialog: true });\n  }\n\n  private closeLayoutOptionDialog() {\n    this.setState({ openLayoutOptionDialog: false });\n  }\n\n  render() {\n    // eslint-disable-next-line no-unused-vars\n    const StyledBadge = withStyles((_) => ({\n      badge: {\n        right: 11,\n        top: 9,\n        border: `2px solid white`,\n      },\n    }))(Badge);\n\n    let layoutOptions = undefined;\n    const hasKeyboardOptions = 0 < this.props.selectedKeyboardOptions!.length;\n    if (hasKeyboardOptions) {\n      const selectedKeyboardOptions: string[] = this.props\n        .selectedKeyboardOptions!;\n      const labels: (string | string[])[] = this.props.keyboardDefinition!\n        .layouts.labels!;\n\n      layoutOptions = labels.map((choices: string | string[], index) => {\n        if (typeof choices == 'string') {\n          const selected: string | null = selectedKeyboardOptions[index];\n          return selected\n            ? { option: '' + index, optionChoice: '1' }\n            : { option: '' + index, optionChoice: '0' };\n        } else {\n          const choice: string = selectedKeyboardOptions[index];\n          const choiceIndex = choices.indexOf(choice) - 1; // first item of choices is for choice's label\n          return { option: '' + index, optionChoice: '' + choiceIndex };\n        }\n      });\n    }\n    return (\n      <React.Fragment>\n        <div className=\"layer-wrapper\">\n          <div className=\"layers\">\n            <div className=\"layer\">\n              <span>LAYER</span>\n              {this.props.layers!.map((layer) => {\n                return (\n                  <StyledBadge\n                    key={layer}\n                    color=\"primary\"\n                    variant=\"dot\"\n                    invisible={\n                      0 == Object.values(this.props.remaps![layer]).length\n                    }\n                  >\n                    <Chip\n                      key={layer}\n                      variant=\"outlined\"\n                      size=\"medium\"\n                      label={layer}\n                      color={\n                        this.props.selectedLayer == layer\n                          ? 'primary'\n                          : undefined\n                      }\n                      clickable={this.props.selectedLayer != layer}\n                      onClick={this.onClickLayer.bind(this, layer)}\n                      className={\n                        this.props.selectedLayer != layer\n                          ? 'unselected-layer'\n                          : 'selected-layer'\n                      }\n                    />\n                  </StyledBadge>\n                );\n              })}\n              {hasKeyboardOptions && (\n                <SettingsIcon\n                  className=\"option\"\n                  onClick={this.openLayoutOptionDialog.bind(this)}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"keyboards\">\n          <div\n            className=\"keyboard-root\"\n            style={{\n              width:\n                this.state.keyboard.width + (BORDER_WIDTH + LAYOUT_PADDING) * 2,\n              height:\n                this.state.keyboard.height +\n                (BORDER_WIDTH + LAYOUT_PADDING) * 2,\n            }}\n          >\n            <div\n              className=\"keyboard-frame\"\n              style={{\n                width: this.state.keyboard.width,\n                height: this.state.keyboard.height,\n              }}\n            >\n              {this.state.keyboard\n                .getKeymap(layoutOptions)\n                .map((model: KeyModel) => {\n                  return model.isDecal ? (\n                    ''\n                  ) : (\n                    <Keycap key={model.pos} model={model} />\n                  );\n                })}\n            </div>\n          </div>\n        </div>\n        {hasKeyboardOptions && (\n          <LayoutOptionsDialog\n            open={this.state.openLayoutOptionDialog}\n            onClose={this.closeLayoutOptionDialog.bind(this)}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport Keyboards from './Keyboards';\nimport { RootState } from '../../../store/state';\nimport { AppActions, KeyboardsActions } from '../../../actions/actions';\n\nconst mapStateToProps = (state: RootState) => {\n  const layerCount = state.entities.device.layerCount;\n  return {\n    appName: state.app.package.name,\n    appVersion: state.app.package.version,\n    layers: [...Array(layerCount)].map((_, i) => i),\n    selectedLayer: state.keyboards.selectedLayer,\n    selectedKeyboardOptions: state.layoutOptions.selectedOptions,\n    keymaps: state.entities.device.keymaps,\n    remaps: state.app.remaps,\n    keyboardDefinition: state.entities.keyboardDefinition,\n  };\n};\nexport type KeyboardsStateType = ReturnType<typeof mapStateToProps>;\n\nconst mapDispatchToProps = (_dispatch: any) => {\n  return {\n    onClickLayerNumber: (layer: number) => {\n      _dispatch(KeyboardsActions.clearSelectedPos());\n      _dispatch(KeyboardsActions.updateSelectedLayer(layer));\n    },\n    setKeyboardHeight: (height: number) => {\n      _dispatch(AppActions.updateKeyboardHeight(height));\n    },\n  };\n};\n\nexport type KeyboardsActionsType = ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Keyboards);\n","import React from 'react';\nimport './Keydiff.scss';\nimport { Button } from '@material-ui/core';\nimport { Clear } from '@material-ui/icons';\nimport { KeydiffActionsType, KeydiffStateType } from './Keydiff.container';\nimport { IKeymap } from '../../../services/hid/Hid';\nimport KeycodeKey, { genKey } from '../keycodekey/KeycodeKey.container';\n\ntype KeydiffOwnProps = {};\n\ntype KeydiffProps = KeydiffOwnProps &\n  Partial<KeydiffStateType> &\n  Partial<KeydiffActionsType>;\n\nexport default class Keydiff extends React.Component<KeydiffProps, {}> {\n  constructor(props: KeydiffProps | Readonly<KeydiffProps>) {\n    super(props);\n  }\n  render() {\n    const origin: IKeymap | null = this.props.keydiff!.origin;\n    const destination: IKeymap | null = this.props.keydiff!.destination;\n    if (!origin || !destination) {\n      return <div className=\"diff\"></div>;\n    }\n    const origKey = genKey(origin);\n    const dstKey = genKey(destination);\n\n    return (\n      <div className=\"diff\">\n        <div className=\"diff-frame\">\n          <div className=\"spacer\"></div>\n          <div className=\"key-orig\">\n            <KeycodeKey value={origKey!} draggable={false} />\n          </div>\n          <div className=\"arrow\">&gt;</div>\n          <div className=\"key-dest\">\n            <KeycodeKey value={dstKey!} draggable={false} />\n          </div>\n          <div className=\"cancel-button\">\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              startIcon={<Clear />}\n              onClick={this.props.onClickCancel?.bind(\n                this,\n                this.props.selectedLayer!,\n                this.props.selectedPos!\n              )}\n            >\n              Cancel\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport Keydiff from './Keydiff';\nimport { RootState } from '../../../store/state';\nimport {\n  KeydiffActions,\n  AppActions,\n  KeyboardsActions,\n} from '../../../actions/actions';\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    keydiff: state.keydiff,\n    selectedLayer: state.keyboards.selectedLayer,\n    selectedPos: state.keyboards.selectedPos,\n  };\n};\nexport type KeydiffStateType = ReturnType<typeof mapStateToProps>;\n\nconst mapDispatchToProps = (_dispatch: any) => {\n  return {\n    onClickCancel: (layer: number, pos: string) => {\n      _dispatch(AppActions.remapsRemoveKey(layer, pos));\n      _dispatch(KeyboardsActions.clearSelectedPos());\n      _dispatch(KeydiffActions.clearKeydiff());\n    },\n  };\n};\nexport type KeydiffActionsType = ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Keydiff);\n","import React from 'react';\nimport './Keymap.scss';\nimport Keyboards from '../keyboards/Keyboards.container';\nimport Keydiff from '../keydiff/Keydiff.container';\nimport { KeymapActionsType, KeymapStateType } from './Keymap.container';\n\ntype OwnProp = {};\n\ntype KeymapPropsType = OwnProp &\n  Partial<KeymapStateType> &\n  Partial<KeymapActionsType>;\n\nexport default class Keymap extends React.Component<KeymapPropsType, {}> {\n  constructor(props: KeymapPropsType | Readonly<KeymapPropsType>) {\n    super(props);\n  }\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.draggingKey && <div className=\"dragMask\"></div>}\n        <div className=\"keydiff-wrapper\">\n          <div className=\"spacer\"></div>\n          <Keydiff />\n          <div className=\"spacer\"></div>\n        </div>\n        <div className=\"keyboards-wrapper\">\n          <div className=\"spacer\"></div>\n          <Keyboards />\n          <div className=\"balancer\"></div>\n          <div className=\"spacer\"></div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport Keymap from './Keymap';\nimport { RootState } from '../../../store/state';\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    draggingKey: state.keycodeKey.draggingKey,\n  };\n};\nexport type KeymapStateType = ReturnType<typeof mapStateToProps>;\n\n// eslint-disable-next-line no-unused-vars\nconst mapDispatchToProps = (_dispatch: any) => {\n  return {};\n};\n\nexport type KeymapActionsType = ReturnType<typeof mapDispatchToProps>;\nexport default connect(mapStateToProps, mapDispatchToProps)(Keymap);\n","import React from 'react';\nimport { IKeyboard } from '../../../services/hid/Hid';\nimport { hexadecimal } from '../../../utils/StringUtils';\nimport {\n  KeyboardListActionsType,\n  KeyboardListStateType,\n} from './KeyboardList.container';\nimport './KeyboardList.scss';\n\ntype OwnProps = {};\ntype KeyboardListProps = OwnProps &\n  Partial<KeyboardListStateType> &\n  Partial<KeyboardListActionsType>;\n\nexport default class KeyboardList extends React.Component<\n  KeyboardListProps,\n  {}\n> {\n  constructor(props: KeyboardListProps | Readonly<KeyboardListProps>) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"keyboardlist-wrapper\">\n        <div className=\"message\">Please select a keyboard</div>\n        <div className=\"keyboardlist\">\n          {this.props.keyboards!.map((kbd: IKeyboard, index: number) => {\n            const info = kbd.getInformation();\n            return (\n              <div\n                key={index}\n                className=\"keyboard-item\"\n                onClick={this.props.onClickItem?.bind(this, kbd)}\n              >\n                <h3>{info.productName}</h3>\n                <div className=\"device-ids\">\n                  VID: {hexadecimal(info.vendorId, 4)} / PID:{' '}\n                  {hexadecimal(info.productId, 4)}\n                </div>\n              </div>\n            );\n          })}\n          <div\n            key={-1}\n            className=\"keyboard-item\"\n            onClick={this.props.onClickConnectAnotherKeyboard!.bind(this)}\n          >\n            <h3 className=\"another\">+ KEYBOARD</h3>\n            <div className=\"device-ids\">\n              Please add a new Web HID access permitted device\n            </div>\n          </div>\n        </div>\n        {/* {this.props.openingKeyboard && (\n          <div className=\"opening-keyboard\">\n            <div className=\"progress\">\n              <CircularProgress size={24} />\n            </div>\n          </div>\n        )} */}\n      </div>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport KeyboardList from './KeyboardList';\nimport { RootState, SetupPhase } from '../../../store/state';\nimport { AppActions, KeycodesActions } from '../../../actions/actions';\nimport { hidActionsThunk } from '../../../actions/hid.action';\nimport { IKeyboard, IKeycodeCategory } from '../../../services/hid/Hid';\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    keyboards: state.entities.keyboards || [],\n  };\n};\nexport type KeyboardListStateType = ReturnType<typeof mapStateToProps>;\n\nconst mapDispatchToProps = (_dispatch: any) => {\n  return {\n    onClickItem: (keyboard: IKeyboard) => {\n      _dispatch(AppActions.updateSetupPhase(SetupPhase.connectingKeyboard));\n      _dispatch(hidActionsThunk.connectKeyboard(keyboard));\n      _dispatch(KeycodesActions.updateCategory(IKeycodeCategory.BASIC)); // init keycode category\n    },\n    onClickConnectAnotherKeyboard: () => {\n      _dispatch(AppActions.updateSetupPhase(SetupPhase.connectingKeyboard));\n      _dispatch(hidActionsThunk.connectAnotherKeyboard());\n      _dispatch(KeycodesActions.updateCategory(IKeycodeCategory.BASIC)); // init keycode category\n    },\n  };\n};\nexport type KeyboardListActionsType = ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KeyboardList);\n","import React from 'react';\nimport {\n  KeyboardDefinitionFormActionsType,\n  KeyboardDefinitionFormStateType,\n} from './KeyboardDefinitionForm.container';\nimport './KeyboardDefinitionForm.scss';\n\ntype OwnProps = {};\ntype KeyboardDefinitionFormProps = OwnProps &\n  Partial<KeyboardDefinitionFormStateType> &\n  Partial<KeyboardDefinitionFormActionsType>;\n\nexport default class KeyboardDefinitionForm extends React.Component<\n  KeyboardDefinitionFormProps,\n  {}\n> {\n  constructor(\n    props: KeyboardDefinitionFormProps | Readonly<KeyboardDefinitionFormProps>\n  ) {\n    super(props);\n  }\n\n  // eslint-disable-next-line no-undef\n  onDropFile = (event: React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    const files = event.dataTransfer.files;\n    if (files.length !== 1) {\n      return;\n    }\n    const file = files[0];\n    this.props.onDropFile!(file);\n  };\n\n  // eslint-disable-next-line no-undef\n  onDragOverFile = (event: React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    this.props.onDragOverFile!();\n  };\n\n  // eslint-disable-next-line no-undef\n  onChangeFile = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    const files = event.target.files;\n    if (!files || files.length !== 1) {\n      return;\n    }\n    const file = files[0];\n    this.props.onDropFile!(file);\n    event.target.value = '';\n  };\n\n  render() {\n    return (\n      <div className=\"keyboarddefinitionform-wrapper\">\n        <div className=\"message\">\n          Please upload your JSON file of{' '}\n          <strong>{this.props.productName}</strong> definition from local.\n        </div>\n        <div className=\"upload-form\">\n          <div\n            className={\n              this.props.dragging\n                ? 'drop-target drop-target-active'\n                : 'drop-target'\n            }\n            onDragOver={this.onDragOverFile}\n            onDrop={this.onDropFile}\n            onDragLeave={this.props.onDragLeaveFile!.bind(this)}\n          >\n            <div className=\"place-holder\">Drop here.</div>\n          </div>\n          <input type=\"file\" onChange={this.onChangeFile} />\n        </div>\n      </div>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport { KeyboardDefinitionFormActions } from '../../../actions/actions';\nimport { RootState } from '../../../store/state';\nimport KeyboardDefinitionForm from './KeyboardDefinitionForm';\nimport { storageActionsThunk } from '../../../actions/storage.action';\n\nconst mapStateToProps = (state: RootState) => {\n  const kbd = state.entities.keyboard;\n  const info = kbd?.getInformation();\n\n  return {\n    dragging: state.keyboardDefinitionForm.dragging,\n    productName: info?.productName,\n  };\n};\nexport type KeyboardDefinitionFormStateType = ReturnType<\n  typeof mapStateToProps\n>;\n\nconst mapDispatchToProps = (_dispatch: any) => {\n  return {\n    onDragOverFile: () => {\n      _dispatch(KeyboardDefinitionFormActions.updateDragging(true));\n    },\n    // eslint-disable-next-line no-undef\n    onDropFile: (file: File) => {\n      _dispatch(KeyboardDefinitionFormActions.updateDragging(false));\n      _dispatch(storageActionsThunk.uploadKeyboardDefinition(file));\n    },\n    onDragLeaveFile: () => {\n      _dispatch(KeyboardDefinitionFormActions.updateDragging(false));\n    },\n  };\n};\nexport type KeyboardDefinitionFormActionsType = ReturnType<\n  typeof mapDispatchToProps\n>;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(KeyboardDefinitionForm);\n","const KEY_DESCRIPTIONS: { [key: string]: string } = {\n  Key: 'Description',\n  KC_NO: 'Ignore this key (NOOP)',\n  KC_TRANSPARENT: 'Use the next lowest non-transparent key',\n  KC_A: 'a and A',\n  KC_B: 'b and B',\n  KC_C: 'c and C',\n  KC_D: 'd and D',\n  KC_E: 'e and E',\n  KC_F: 'f and F',\n  KC_G: 'g and G',\n  KC_H: 'h and H',\n  KC_I: 'i and I',\n  KC_J: 'j and J',\n  KC_K: 'k and K',\n  KC_L: 'l and L',\n  KC_M: 'm and M',\n  KC_N: 'n and N',\n  KC_O: 'o and O',\n  KC_P: 'p and P',\n  KC_Q: 'q and Q',\n  KC_R: 'r and R',\n  KC_S: 's and S',\n  KC_T: 't and T',\n  KC_U: 'u and U',\n  KC_V: 'v and V',\n  KC_W: 'w and W',\n  KC_X: 'x and X',\n  KC_Y: 'y and Y',\n  KC_Z: 'z and Z',\n  KC_1: '1 and !',\n  KC_2: '2 and @',\n  KC_3: '3 and #',\n  KC_4: '4 and $',\n  KC_5: '5 and %',\n  KC_6: '6 and ^',\n  KC_7: '7 and &',\n  KC_8: '8 and *',\n  KC_9: '9 and (',\n  KC_0: '0 and )',\n  KC_ENTER: 'Return (Enter)',\n  KC_ESCAPE: 'Escape',\n  KC_BSPACE: 'Delete (Backspace)',\n  KC_TAB: 'Tab',\n  KC_SPACE: 'Spacebar',\n  KC_MINUS: '- and _',\n  KC_EQUAL: '= and +',\n  KC_LBRACKET: '[ and {',\n  KC_RBRACKET: '] and }',\n  KC_BSLASH: '\\\\ and \\\\|',\n  KC_NONUS_HASH: 'Non-US # and ~',\n  KC_SCOLON: '; and :',\n  KC_QUOTE: '\\' and \"',\n  KC_GRAVE: '` and ~, JIS Zenkaku/Hankaku',\n  KC_COMMA: ', and <',\n  KC_DOT: '. and >',\n  KC_SLASH: '/ and ?',\n  KC_CAPSLOCK: 'Caps Lock',\n  KC_F1: 'F1',\n  KC_F2: 'F2',\n  KC_F3: 'F3',\n  KC_F4: 'F4',\n  KC_F5: 'F5',\n  KC_F6: 'F6',\n  KC_F7: 'F7',\n  KC_F8: 'F8',\n  KC_F9: 'F9',\n  KC_F10: 'F10',\n  KC_F11: 'F11',\n  KC_F12: 'F12',\n  KC_PSCREEN: 'Print Screen',\n  KC_SCROLLLOCK: 'Scroll Lock, Brightness Down (macOS)',\n  KC_PAUSE: 'Pause, Brightness Up (macOS)',\n  KC_INSERT: 'Insert',\n  KC_HOME: 'Home',\n  KC_PGUP: 'Page Up',\n  KC_DELETE: 'Forward Delete',\n  KC_END: 'End',\n  KC_PGDOWN: 'Page Down',\n  KC_RIGHT: 'Right Arrow',\n  KC_LEFT: 'Left Arrow',\n  KC_DOWN: 'Down Arrow',\n  KC_UP: 'Up Arrow',\n  KC_NUMLOCK: 'Keypad Num Lock and Clear',\n  KC_KP_SLASH: 'Keypad /',\n  KC_KP_ASTERISK: 'Keypad *',\n  KC_KP_MINUS: 'Keypad -',\n  KC_KP_PLUS: 'Keypad +',\n  KC_KP_ENTER: 'Keypad Enter',\n  KC_KP_1: 'Keypad 1 and End',\n  KC_KP_2: 'Keypad 2 and Down Arrow',\n  KC_KP_3: 'Keypad 3 and Page Down',\n  KC_KP_4: 'Keypad 4 and Left Arrow',\n  KC_KP_5: 'Keypad 5',\n  KC_KP_6: 'Keypad 6 and Right Arrow',\n  KC_KP_7: 'Keypad 7 and Home',\n  KC_KP_8: 'Keypad 8 and Up Arrow',\n  KC_KP_9: 'Keypad 9 and Page Up',\n  KC_KP_0: 'Keypad 0 and Insert',\n  KC_KP_DOT: 'Keypad . and Delete',\n  KC_NONUS_BSLASH: 'Non-US \\\\ and \\\\|',\n  KC_APPLICATION: 'Application (Windows Context Menu Key)',\n  KC_POWER: 'System Power',\n  KC_KP_EQUAL: 'Keypad =',\n  KC_F13: 'F13',\n  KC_F14: 'F14',\n  KC_F15: 'F15',\n  KC_F16: 'F16',\n  KC_F17: 'F17',\n  KC_F18: 'F18',\n  KC_F19: 'F19',\n  KC_F20: 'F20',\n  KC_F21: 'F21',\n  KC_F22: 'F22',\n  KC_F23: 'F23',\n  KC_F24: 'F24',\n  KC_EXECUTE: 'Execute',\n  KC_HELP: 'Help',\n  KC_MENU: 'Menu',\n  KC_SELECT: 'Select',\n  KC_STOP: 'Stop',\n  KC_AGAIN: 'Again',\n  KC_UNDO: 'Undo',\n  KC_CUT: 'Cut',\n  KC_COPY: 'Copy',\n  KC_PASTE: 'Paste',\n  KC_FIND: 'Find',\n  KC__MUTE: 'Mute',\n  KC__VOLUP: 'Volume Up',\n  KC__VOLDOWN: 'Volume Down',\n  KC_LOCKING_CAPS: 'Locking Caps Lock',\n  KC_LOCKING_NUM: 'Locking Num Lock',\n  KC_LOCKING_SCROLL: 'Locking Scroll Lock',\n  KC_KP_COMMA: 'Keypad ,',\n  KC_KP_EQUAL_AS400: 'Keypad = on AS/400 keyboards',\n  KC_INT1: 'JIS \\\\ and _',\n  KC_INT2: 'JIS Katakana/Hiragana',\n  KC_INT3: 'JIS ¥ and \\\\|',\n  KC_INT4: 'JIS Henkan',\n  KC_INT5: 'JIS Muhenkan',\n  KC_INT6: 'JIS Numpad ,',\n  KC_INT7: 'International 7',\n  KC_INT8: 'International 8',\n  KC_INT9: 'International 9',\n  KC_LANG1: 'Hangul/English',\n  KC_LANG2: 'Hanja',\n  KC_LANG3: 'JIS Katakana',\n  KC_LANG4: 'JIS Hiragana',\n  KC_LANG5: 'JIS Zenkaku/Hankaku',\n  KC_LANG6: 'Language 6',\n  KC_LANG7: 'Language 7',\n  KC_LANG8: 'Language 8',\n  KC_LANG9: 'Language 9',\n  KC_ALT_ERASE: 'Alternate Erase',\n  KC_SYSREQ: 'SysReq/Attention',\n  KC_CANCEL: 'Cancel',\n  KC_CLEAR: 'Clear',\n  KC_PRIOR: 'Prior',\n  KC_RETURN: 'Return',\n  KC_SEPARATOR: 'Separator',\n  KC_OUT: 'Out',\n  KC_OPER: 'Oper',\n  KC_CLEAR_AGAIN: 'Clear/Again',\n  KC_CRSEL: 'CrSel/Props',\n  KC_EXSEL: 'ExSel',\n  KC_LCTRL: 'Left Control',\n  KC_LSHIFT: 'Left Shift',\n  KC_LALT: 'Left Alt (Option)',\n  KC_LGUI: 'Left GUI (Windows/Command/Meta key)',\n  KC_RCTRL: 'Right Control',\n  KC_RSHIFT: 'Right Shift',\n  KC_RALT: 'Right Alt (Option/AltGr)',\n  KC_RGUI: 'Right GUI (Windows/Command/Meta key)',\n  KC_SYSTEM_POWER: 'System Power Down',\n  KC_SYSTEM_SLEEP: 'System Sleep',\n  KC_SYSTEM_WAKE: 'System Wake',\n  KC_AUDIO_MUTE: 'Mute',\n  KC_AUDIO_VOL_UP: 'Volume Up',\n  KC_AUDIO_VOL_DOWN: 'Volume Down',\n  KC_MEDIA_NEXT_TRACK: 'Next Track',\n  KC_MEDIA_PREV_TRACK: 'Previous Track',\n  KC_MEDIA_STOP: 'Stop Track',\n  KC_MEDIA_PLAY_PAUSE: 'Play/Pause Track',\n  KC_MEDIA_SELECT: 'Launch Media Player',\n  KC_MEDIA_EJECT: 'Eject',\n  KC_MAIL: 'Launch Mail',\n  KC_CALCULATOR: 'Launch Calculator',\n  KC_MY_COMPUTER: 'Launch My Computer',\n  KC_WWW_SEARCH: 'Browser Search',\n  KC_WWW_HOME: 'Browser Home',\n  KC_WWW_BACK: 'Browser Back',\n  KC_WWW_FORWARD: 'Browser Forward',\n  KC_WWW_STOP: 'Browser Stop',\n  KC_WWW_REFRESH: 'Browser Refresh',\n  KC_WWW_FAVORITES: 'Browser Favorites',\n  KC_MEDIA_FAST_FORWARD: 'Next Track',\n  KC_MEDIA_REWIND: 'Previous Track',\n  KC_BRIGHTNESS_UP: 'Brightness Up',\n  KC_BRIGHTNESS_DOWN: 'Brightness Down',\n  RESET: 'Put the keyboard into bootloader mode for flashing',\n  DEBUG: 'Toggle debug mode',\n  EEPROM_RESET: \"Reinitializes the keyboard's EEPROM (persistent memory)\",\n  AU_ON: 'Turns on Audio Feature',\n  AU_OFF: 'Turns off Audio Feature',\n  AU_TOG: 'Toggles Audio state',\n  CLICKY_TOGGLE: 'Toggles Audio clicky mode',\n  CLICKY_UP: 'Increases frequency of the clicks',\n  CLICKY_DOWN: 'Decreases frequency of the clicks',\n  CLICKY_RESET: 'Resets frequency to default',\n  MU_ON: 'Turns on Music Mode',\n  MU_OFF: 'Turns off Music Mode',\n  MU_TOG: 'Toggles Music Mode',\n  MU_MOD: 'Cycles through the music modes',\n  BL_TOGG: 'Turn the backlight on or off',\n  BL_STEP: 'Cycle through backlight levels',\n  BL_ON: 'Set the backlight to max brightness',\n  BL_OFF: 'Turn the backlight off',\n  BL_INC: 'Increase the backlight level',\n  BL_DEC: 'Decrease the backlight level',\n  BL_BRTG: 'Toggle backlight breathing',\n  MAGIC_SWAP_CONTROL_CAPSLOCK: 'Swap Caps Lock and Left Control',\n  MAGIC_UNSWAP_CONTROL_CAPSLOCK: 'Unswap Caps Lock and Left Control',\n  MAGIC_CAPSLOCK_TO_CONTROL: 'Treat Caps Lock as Control',\n  MAGIC_UNCAPSLOCK_TO_CONTROL: 'Stop treating Caps Lock as Control',\n  MAGIC_SWAP_LCTL_LGUI: 'Swap Left Control and GUI',\n  MAGIC_UNSWAP_LCTL_LGUI: 'Unswap Left Control and GUI',\n  MAGIC_SWAP_RCTL_RGUI: 'Swap Right Control and GUI',\n  MAGIC_UNSWAP_RCTL_RGUI: 'Unswap Right Control and GUI',\n  MAGIC_SWAP_CTL_GUI: 'Swap Control and GUI on both sides',\n  MAGIC_UNSWAP_CTL_GUI: 'Unswap Control and GUI on both sides',\n  MAGIC_TOGGLE_CTL_GUI: 'Toggle Control and GUI swap on both sides',\n  MAGIC_SWAP_LALT_LGUI: 'Swap Left Alt and GUI',\n  MAGIC_UNSWAP_LALT_LGUI: 'Unswap Left Alt and GUI',\n  MAGIC_SWAP_RALT_RGUI: 'Swap Right Alt and GUI',\n  MAGIC_UNSWAP_RALT_RGUI: 'Unswap Right Alt and GUI',\n  MAGIC_SWAP_ALT_GUI: 'Swap Alt and GUI on both sides',\n  MAGIC_UNSWAP_ALT_GUI: 'Unswap Alt and GUI on both sides',\n  MAGIC_TOGGLE_ALT_GUI: 'Toggle Alt and GUI swap on both sides',\n  MAGIC_NO_GUI: 'Disable the GUI keys',\n  MAGIC_UNNO_GUI: 'Enable the GUI keys',\n  MAGIC_SWAP_GRAVE_ESC: 'Swap ` and Escape',\n  MAGIC_UNSWAP_GRAVE_ESC: 'Unswap ` and Escape',\n  MAGIC_SWAP_BACKSLASH_BACKSPACE: 'Swap \\\\ and Backspace',\n  MAGIC_UNSWAP_BACKSLASH_BACKSPACE: 'Unswap \\\\ and Backspace',\n  MAGIC_HOST_NKRO: 'Enable N-key rollover',\n  MAGIC_UNHOST_NKRO: 'Disable N-key rollover',\n  MAGIC_TOGGLE_NKRO: 'Toggle N-key rollover',\n  MAGIC_EE_HANDS_LEFT:\n    'Set the master half of a split keyboard as the left hand (for EE_HANDS)',\n  MAGIC_EE_HANDS_RIGHT:\n    'Set the master half of a split keyboard as the right hand (for EE_HANDS)',\n  OUT_AUTO: 'Automatically switch between USB and Bluetooth',\n  OUT_USB: 'USB only',\n  OUT_BT: 'Bluetooth only',\n  DYN_REC_START1: 'Start recording Macro 1',\n  DYN_REC_START2: 'Start recording Macro 2',\n  DYN_MACRO_PLAY1: 'Replay Macro 1',\n  DYN_MACRO_PLAY2: 'Replay Macro 2',\n  DYN_REC_STOP: 'Finish the macro that is currently being recorded.',\n  GRAVE_ESC: 'Escape when pressed, ` when Shift or GUI are held',\n  KC_LOCK: 'Hold down the next key pressed, until the key is pressed again',\n  'DF(layer)': 'Set the base (default) layer',\n  'MO(layer)':\n    'Momentarily turn on layer when pressed (requires KC_TRNS on destination layer)',\n  'OSL(layer)': 'Switch to layer for one keypress',\n  'LM(layer, mod)':\n    'Momentarily turn on layer (like MO) with mod active as well.  Where mod is a mods_bit.  Mods can be viewed ',\n  'LT(layer, kc)': 'Turn on layer when held, kc when tapped',\n  'TG(layer)': 'Toggle layer on or off',\n  'TO(layer)':\n    'Turns on layer and turns off all other layers, except the default layer',\n  'TT(layer)':\n    \"Normally acts like MO unless it's tapped multiple times, which toggles layer on\",\n  KC_LEAD: 'Begins a leader sequence',\n  KC_MS_UP: 'Mouse Cursor Up',\n  KC_MS_DOWN: 'Mouse Cursor Down',\n  KC_MS_LEFT: 'Mouse Cursor Left',\n  KC_MS_RIGHT: 'Mouse Cursor Right',\n  KC_MS_BTN1: 'Mouse Button 1',\n  KC_MS_BTN2: 'Mouse Button 2',\n  KC_MS_BTN3: 'Mouse Button 3',\n  KC_MS_BTN4: 'Mouse Button 4',\n  KC_MS_BTN5: 'Mouse Button 5',\n  KC_MS_WH_UP: 'Mouse Wheel Up',\n  KC_MS_WH_DOWN: 'Mouse Wheel Down',\n  KC_MS_WH_LEFT: 'Mouse Wheel Left',\n  KC_MS_WH_RIGHT: 'Mouse Wheel Right',\n  KC_MS_ACCEL0: 'Set mouse acceleration to 0',\n  KC_MS_ACCEL1: 'Set mouse acceleration to 1',\n  KC_MS_ACCEL2: 'Set mouse acceleration to 2',\n  'LCTL(kc)': 'Hold Left Control and press kc',\n  'LSFT(kc)': 'Hold Left Shift and press kc',\n  'LALT(kc)': 'Hold Left Alt and press kc',\n  'LGUI(kc)': 'Hold Left GUI and press kc',\n  'RCTL(kc)': 'Hold Right Control and press kc',\n  'RSFT(kc)': 'Hold Right Shift and press kc',\n  'RALT(kc)': 'Hold Right Alt (AltGr) and press kc',\n  'RGUI(kc)': 'Hold Right GUI and press kc',\n  'SGUI(kc)': 'Hold Left Shift and GUI and press kc',\n  'LCA(kc)': 'Hold Left Control and Alt and press kc',\n  'LSA(kc)': 'Hold Left Shift and Left Alt and press kc',\n  'RSA(kc)': 'Hold Right Shift and Right Alt (AltGr) and press kc',\n  'RCS(kc)': 'Hold Right Control and Right Shift and press kc',\n  'LCAG(kc)': 'Hold Left Control, Alt and GUI and press kc',\n  'MEH(kc)': 'Hold Left Control, Shift and Alt and press kc',\n  'HYPR(kc)': 'Hold Left Control, Shift, Alt and GUI and press kc',\n  KC_MEH: 'Left Control, Shift and Alt',\n  KC_HYPR: 'Left Control, Shift, Alt and GUI',\n  'MT(mod, kc)': 'mod when held, kc when tapped',\n  'LCTL_T(kc)': 'Left Control when held, kc when tapped',\n  'LSFT_T(kc)': 'Left Shift when held, kc when tapped',\n  'LALT_T(kc)': 'Left Alt when held, kc when tapped',\n  'LGUI_T(kc)': 'Left GUI when held, kc when tapped',\n  'RCTL_T(kc)': 'Right Control when held, kc when tapped',\n  'RSFT_T(kc)': 'Right Shift when held, kc when tapped',\n  'RALT_T(kc)': 'Right Alt (AltGr) when held, kc when tapped',\n  'RGUI_T(kc)': 'Right GUI when held, kc when tapped',\n  'SGUI_T(kc)': 'Left Shift and GUI when held, kc when tapped',\n  'LCA_T(kc)': 'Left Control and Alt when held, kc when tapped',\n  'LSA_T(kc)': 'Left Shift and Left Alt when held, kc when tapped',\n  'RSA_T(kc)': 'Right Shift and Right Alt (AltGr) when held, kc when tapped',\n  'RCS_T(kc)': 'Right Control and Right Shift when held, kc when tapped',\n  'LCAG_T(kc)': 'Left Control, Alt and GUI when held, kc when tapped',\n  'RCAG_T(kc)': 'Right Control, Alt and GUI when held, kc when tapped',\n  'C_S_T(kc)': 'Left Control and Shift when held, kc when tapped',\n  'MEH_T(kc)': 'Left Control, Shift and Alt when held, kc when tapped',\n  'HYPR_T(kc)':\n    'Left Control, Shift, Alt and GUI when held, kc when tapped - more info ',\n  RGB_TOG: 'Toggle RGB lighting on or off',\n  RGB_MODE_FORWARD: 'Cycle through modes, reverse direction when Shift is held',\n  RGB_MODE_REVERSE:\n    'Cycle through modes in reverse, forward direction when Shift is held',\n  RGB_HUI: 'Increase hue, decrease hue when Shift is held',\n  RGB_HUD: 'Decrease hue, increase hue when Shift is held',\n  RGB_SAI: 'Increase saturation, decrease saturation when Shift is held',\n  RGB_SAD: 'Decrease saturation, increase saturation when Shift is held',\n  RGB_VAI: 'Increase value (brightness), decrease value when Shift is held',\n  RGB_VAD: 'Decrease value (brightness), increase value when Shift is held',\n  RGB_MODE_PLAIN: 'Static (no animation) mode',\n  RGB_MODE_BREATHE: 'Breathing animation mode',\n  RGB_MODE_RAINBOW: 'Rainbow animation mode',\n  RGB_MODE_SWIRL: 'Swirl animation mode',\n  RGB_MODE_SNAKE: 'Snake animation mode',\n  RGB_MODE_KNIGHT: '\"Knight Rider\" animation mode',\n  RGB_MODE_XMAS: 'Christmas animation mode',\n  RGB_MODE_GRADIENT: 'Static gradient animation mode',\n  RGB_MODE_RGBTEST: 'Red,Green,Blue test animation mode',\n  RGB_SPI:\n    'Increase effect speed (does not support eeprom yet), decrease speed when Shift is held',\n  RGB_SPD:\n    'Decrease effect speed (does not support eeprom yet), increase speed when Shift is held',\n  PRINT_ON: 'Start printing everything the user types',\n  PRINT_OFF: 'Stop printing everything the user types',\n  KC_TILDE: '~',\n  KC_EXCLAIM: '!',\n  KC_AT: '@',\n  KC_HASH: '#',\n  KC_DOLLAR: '$',\n  KC_PERCENT: '%',\n  KC_CIRCUMFLEX: '^',\n  KC_AMPERSAND: '&',\n  KC_ASTERISK: '*',\n  KC_LEFT_PAREN: '(',\n  KC_RIGHT_PAREN: ')',\n  KC_UNDERSCORE: '_',\n  KC_PLUS: '+',\n  KC_LEFT_CURLY_BRACE: '{',\n  KC_RIGHT_CURLY_BRACE: '}',\n  KC_PIPE: '\\\\|',\n  KC_COLON: ':',\n  KC_DOUBLE_QUOTE: '\"',\n  KC_LEFT_ANGLE_BRACKET: '<',\n  KC_RIGHT_ANGLE_BRACKET: '>',\n  KC_QUESTION: '?',\n  'OSM(mod)': 'Hold mod for one keypress',\n  KC_LCPO: 'Left Control when held, ( when tapped',\n  KC_RCPC: 'Right Control when held, ) when tapped',\n  KC_LSPO: 'Left Shift when held, ( when tapped',\n  KC_RSPC: 'Right Shift when held, ) when tapped',\n  KC_LAPO: 'Left Alt when held, ( when tapped',\n  KC_RAPC: 'Right Alt when held, ) when tapped',\n  KC_SFTENT: 'Right Shift when held, Enter when tapped',\n  'SH_T(key)': 'Sends key with a tap; momentary swap when held.',\n  SW_ON: 'Turns on swapping and leaves it on.',\n  SW_OFF:\n    'Turn off swapping and leaves it off. Good for returning to a known state.',\n  SH_MON:\n    'Swaps hands when pressed, returns to normal when released (momentary).',\n  SH_MOFF: 'Momentarily turns off swap.',\n  SH_TG: 'Toggles swap on and off with every key press.',\n  SH_TT: 'Toggles with a tap; momentary when held.',\n  SH_OS: 'One shot swap hands: toggle while pressed or until next key press.',\n  'UC(c)': 'Send Unicode code point c',\n  'X(i)': 'Send Unicode code point at index i in unicode_map',\n  'XP(i, j)': 'Send Unicode code point at index i, or j if Shift/Caps is on',\n  UNICODE_MODE_FORWARD: 'Cycle through selected input modes',\n  UNICODE_MODE_REVERSE: 'Cycle through selected input modes in reverse',\n  UNICODE_MODE_MAC: 'Switch to macOS input',\n  UNICODE_MODE_LNX: 'Switch to Linux input',\n  UNICODE_MODE_WIN: 'Switch to Windows input',\n  UNICODE_MODE_BSD: 'Switch to BSD input (not implemented)',\n  UNICODE_MODE_WINC: 'Switch to Windows input using WinCompose',\n};\n\nexport default KEY_DESCRIPTIONS;\n","import React from 'react';\nimport './Content.scss';\nimport Keycodes from '../keycodes/Keycodes.container';\nimport Keymap from '../keymap/Keymap.container';\nimport { ContentActionsType, ContentStateType } from './Content.container';\nimport KeyboardList from '../keyboardlist/KeyboardList.container';\nimport { IKeyboard, IKeymap } from '../../../services/hid/Hid';\nimport { CircularProgress } from '@material-ui/core';\nimport { ISetupPhase, SetupPhase } from '../../../store/state';\nimport KeyboardDefinitionForm from '../keyboarddefform/KeyboardDefinitionForm.container';\nimport KEY_DESCRIPTIONS from '../../../assets/files/key_descriptions';\nimport { hexadecimal } from '../../../utils/StringUtils';\n\ntype ContentState = {\n  selectedLayer: number;\n};\n\ntype OwnProps = {};\n\ntype ContentProps = OwnProps &\n  Partial<ContentActionsType> &\n  Partial<ContentStateType>;\n\nexport default class Content extends React.Component<\n  ContentProps,\n  ContentState\n> {\n  constructor(props: ContentProps | Readonly<ContentProps>) {\n    super(props);\n    this.state = {\n      //TODO: redux\n      selectedLayer: 1,\n    };\n  }\n\n  get selectedLayer() {\n    return this.state.selectedLayer;\n  }\n\n  onClickLayer = (layer: number) => {\n    this.setState({ selectedLayer: layer });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"content\">\n          <div className=\"keyboard-wrapper\">\n            {[\n              SetupPhase.connectingKeyboard,\n              SetupPhase.fetchingKeyboardDefinition,\n              SetupPhase.openingKeyboard,\n            ].includes(this.props.setupPhase!) && (\n              <div className=\"in-progress\">\n                <div className=\"progress\">\n                  <CircularProgress size={24} />\n                </div>\n              </div>\n            )}\n\n            <div className=\"keymap\">\n              <ConnectedKeyboard\n                keyboards={this.props.keyboards || []}\n                setupPhase={this.props.setupPhase!}\n              />\n            </div>\n          </div>\n          {this.props.setupPhase! == SetupPhase.openedKeyboard && (\n            <div\n              className=\"keycode\"\n              style={{ marginTop: 200 + this.props.keyboardHeight! }}\n            >\n              <Keycodes />\n              {this.props.setupPhase === SetupPhase.openedKeyboard ? (\n                ''\n              ) : (\n                <div className=\"disable\"></div>\n              )}\n            </div>\n          )}\n          {this.props.hoverKey && <Desc keymap={this.props.hoverKey.keymap} />}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\ntype ConnectedKeyboardProps = {\n  keyboards: IKeyboard[];\n  setupPhase: ISetupPhase;\n};\nfunction ConnectedKeyboard(props: ConnectedKeyboardProps) {\n  switch (props.setupPhase) {\n    case SetupPhase.keyboardNotSelected:\n    case SetupPhase.connectingKeyboard:\n    case SetupPhase.openingKeyboard:\n      return <KeyboardList />;\n    case SetupPhase.fetchingKeyboardDefinition:\n    case SetupPhase.waitingKeyboardDefinitionUpload:\n      return <KeyboardDefinitionForm />;\n    case SetupPhase.openedKeyboard:\n      return <Keymap />;\n    default:\n      throw new Error(\n        `Unknown state.app.setupPhase value: ${props.setupPhase}`\n      );\n  }\n}\n\ntype DescType = {\n  keymap: IKeymap;\n};\nfunction Desc(props: DescType) {\n  if (props.keymap.keycodeInfo) {\n    const info = props.keymap.keycodeInfo!;\n    const long = info.name.long;\n    const desc =\n      long in KEY_DESCRIPTIONS\n        ? KEY_DESCRIPTIONS[long]\n        : hexadecimal(info.code);\n    return (\n      <div className=\"keycode-desc\">\n        {long}: {desc}\n      </div>\n    );\n  } else {\n    return <div className=\"keycode-desc\">Any</div>;\n  }\n}\n","import { connect } from 'react-redux';\nimport Content from './Content';\nimport { RootState } from '../../../store/state';\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    hoverKey: state.keycodeKey.hoverKey,\n    keyboard: state.entities.keyboard,\n    setupPhase: state.app.setupPhase,\n    keyboards: state.entities.keyboards,\n    keyboardHeight: state.app.keyboardHeight,\n  };\n};\nexport type ContentStateType = ReturnType<typeof mapStateToProps>;\n\nconst mapDispatchToProps = {};\nexport type ContentActionsType = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Content);\n","import React from 'react';\nimport './Configure.scss';\nimport { ProviderContext, withSnackbar } from 'notistack';\nimport Header from './header/Header.container';\nimport Content from './content/Content.container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n  ConfigureActionsType,\n  ConfigureStateType,\n} from './Configure.container';\nimport appPackage from '../../package.alias.json';\nimport { NotificationItem } from '../../actions/actions';\nimport { Button } from '@material-ui/core';\nimport { IKeyboard } from '../../services/hid/Hid';\n\ntype OwnProps = {};\ntype ConfigureProps = OwnProps &\n  Partial<ConfigureStateType> &\n  Partial<ConfigureActionsType> &\n  ProviderContext;\ntype OwnState = {\n  supportedBrowser: boolean;\n  signedInForClosedBeta: boolean;\n};\n\nclass Configure extends React.Component<ConfigureProps, OwnState> {\n  private displayedNoficationIds: string[] = [];\n  constructor(props: ConfigureProps) {\n    super(props);\n    this.state = {\n      supportedBrowser: true,\n      signedInForClosedBeta: true,\n    };\n  }\n\n  private storeDisplayedNotification = (key: string) => {\n    this.displayedNoficationIds = [...this.displayedNoficationIds, key];\n  };\n\n  private removeDisplayedNotification = (key: string) => {\n    this.displayedNoficationIds = [\n      ...this.displayedNoficationIds.filter((k) => key !== k),\n    ];\n  };\n\n  private updateNotifications() {\n    this.props.notifications!.forEach((item: NotificationItem) => {\n      if (this.displayedNoficationIds.includes(item.key)) return;\n\n      this.props.enqueueSnackbar(item.message, {\n        key: item.key,\n        variant: item.type,\n        autoHideDuration: 5000,\n        onExited: (event, key: React.ReactText) => {\n          this.props.removeNotification!(key as string);\n          this.removeDisplayedNotification(key as string);\n        },\n        action: (key: number) => (\n          <Button\n            onClick={() => {\n              this.props.closeSnackbar(key);\n            }}\n          >\n            <CloseIcon />\n          </Button>\n        ),\n      });\n      this.storeDisplayedNotification(item.key);\n    });\n  }\n\n  private updateTitle() {\n    const hasKeysToFlush = this.props.remaps!.reduce((has, v) => {\n      return 0 < Object.values(v).length || has;\n    }, false);\n    const title = hasKeysToFlush ? `*${appPackage.name}` : appPackage.name;\n    // eslint-disable-next-line no-undef\n    document.title = title;\n  }\n\n  private initKeyboardConnectionEventHandler() {\n    this.props.hid!.instance.setConnectionEventHandler({\n      connect: (connectedKeyboard: IKeyboard) => {\n        this.props.onConnectKeyboard!(connectedKeyboard);\n      },\n      disconnect: (disconnectedKeyboard: IKeyboard) => {\n        this.props.onDisconnectKeyboard!(disconnectedKeyboard);\n      },\n      close: (keyboard: IKeyboard) => {\n        this.props.onCloseKeyboard!(keyboard);\n      },\n    });\n  }\n\n  componentDidMount() {\n    // eslint-disable-next-line no-undef\n    if ((navigator as any).hid === undefined) {\n      this.setState({\n        supportedBrowser: false,\n      });\n      return;\n    }\n    this.props.auth!.subscribeAuthStatus((user) => {\n      if (user) {\n        this.props.storage!.fetchClosedBetaUsers().then((users) => {\n          if (users.includes(user.email!)) {\n            this.setState({ signedInForClosedBeta: true });\n            const version = appPackage.version;\n            const name = appPackage.name;\n            this.props.initAppPackage!(name, version);\n            this.updateTitle();\n            this.updateNotifications();\n            this.initKeyboardConnectionEventHandler();\n            this.props.updateAuthorizedKeyboardList!();\n          } else {\n            this.setState({ signedInForClosedBeta: false });\n          }\n        });\n      } else {\n        this.props.auth!.signInWithGitHubForClosedBeta().then(() => {\n          // N/A\n        });\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    this.updateTitle();\n    this.updateNotifications();\n  }\n\n  render() {\n    if (!this.state.supportedBrowser) {\n      return (\n        <React.Fragment>\n          <CssBaseline />\n          <div className=\"message-box-wrapper\">\n            <div className=\"message-box\">\n              <h1>Unsupported Web Browser</h1>\n              <p>\n                <a href=\"https://remap-keys.app\">Remap</a> works on Web Browsers\n                which the{' '}\n                <a href=\"https://wicg.github.io/webhid/\">WebHID API</a> is\n                supported.\n                <br />\n                For example,{' '}\n                <a href=\"https://www.google.com/chrome\">Google Chrome</a>{' '}\n                version 86 or later supports the WebHID API.\n              </p>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    }\n    if (!this.state.signedInForClosedBeta) {\n      return (\n        <React.Fragment>\n          <CssBaseline />\n          <div className=\"message-box-wrapper\">\n            <div className=\"message-box\">\n              <p>You are not allow to access to Remap Closed Beta.</p>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    }\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Header />\n        <main>\n          <Content />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(Configure);\n","import { connect } from 'react-redux';\nimport Configure from './Configure';\nimport { RootState } from '../../store/state';\nimport { HidActions, hidActionsThunk } from '../../actions/hid.action';\nimport { AppActions, NotificationActions } from '../../actions/actions';\nimport { IKeyboard } from '../../services/hid/Hid';\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    remaps: state.app.remaps,\n    notifications: state.app.notifications,\n    hid: state.hid,\n    auth: state.auth.instance,\n    storage: state.storage.instance,\n    draggingKey: state.keycodeKey.draggingKey,\n  };\n};\nexport type ConfigureStateType = ReturnType<typeof mapStateToProps>;\n\nconst mapDispatchToProps = (_dispatch: any) => {\n  return {\n    initAppPackage: (name: string, version: string) => {\n      _dispatch(AppActions.initAppPackage(name, version));\n    },\n    updateAuthorizedKeyboardList: () =>\n      _dispatch(hidActionsThunk.updateAuthorizedKeyboardList()),\n    test: () => _dispatch(NotificationActions.addWarn('hoge')),\n    removeNotification: (key: string) => {\n      _dispatch(NotificationActions.removeNotification(key));\n    },\n    onConnectKeyboard: (keyboard: IKeyboard) => {\n      _dispatch(HidActions.connectKeyboard(keyboard));\n    },\n    onDisconnectKeyboard: (keyboard: IKeyboard) => {\n      _dispatch(hidActionsThunk.closeKeyboard(keyboard));\n      _dispatch(HidActions.disconnectKeyboard(keyboard));\n    },\n    onCloseKeyboard: (keyboard: IKeyboard) => {\n      _dispatch(hidActionsThunk.closeKeyboard(keyboard));\n    },\n  };\n};\n\nexport type ConfigureActionsType = ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Configure);\n","import { WebHid } from '../WebHid';\nimport React, { useEffect, useState } from 'react';\nimport './Hid.scss';\nimport {\n  DynamicKeymapGetKeycodeCommand,\n  DynamicKeymapReadBufferCommand,\n} from '../Commands';\nimport { IKeyboard } from '../Hid';\nimport KeycodeArray from '../assets/keycodes.json';\n\nconst Hid = () => {\n  const [webHid] = useState<WebHid>(new WebHid());\n  const [keyboard, setKeyboard] = useState<IKeyboard | undefined>(undefined);\n  const [message, setMessage] = useState<string>('');\n  const [productName, setProductName] = useState<string>('');\n  const [vendorId, setVendorId] = useState<string>('5954');\n  const [productId, setProductId] = useState<string>('1');\n  const [useFilter, setUseFilter] = useState<boolean>(false);\n  const [connectedKeyboards, setConnectedKeyboards] = useState<IKeyboard[]>([]);\n  const [selectedKeyboardValue, setSelectedKeyboardValue] = useState<number>(0);\n  const [layerCount, setLayerCount] = useState<number>(0);\n  const [layer, setLayer] = useState<number>(0);\n  const [row, setRow] = useState<number>(0);\n  const [column, setColumn] = useState<number>(0);\n  const [code, setCode] = useState<number>(0);\n  const [layer2, setLayer2] = useState<number>(0);\n  const [rowCount, setRowCount] = useState<number>(0);\n  const [columnCount, setColumnCount] = useState<number>(0);\n  const [bufferOffset, setBufferOffset] = useState<number>(0);\n  const [bufferSize, setBufferSize] = useState<number>(28);\n\n  useEffect(() => {\n    webHid\n      .detectKeyboards()\n      .then((keyboards) => setConnectedKeyboards(keyboards));\n  }, [webHid]);\n\n  useEffect(() => {\n    webHid.setConnectionEventHandler({\n      connect: (connectedKeyboard) => {\n        const newConnectedKeyboards = [...connectedKeyboards];\n        newConnectedKeyboards.push(connectedKeyboard);\n        setConnectedKeyboards(newConnectedKeyboards);\n      },\n      disconnect: (disconnectedKeyboard) => {\n        const newConnectedKeyboards = connectedKeyboards.filter(\n          (x) => x !== disconnectedKeyboard\n        );\n        setConnectedKeyboards(newConnectedKeyboards);\n      },\n      close: (keyboard: IKeyboard) => {\n        console.log(keyboard);\n      },\n    });\n  }, []);\n\n  const handleConnectClick = async () => {\n    let result;\n    if (useFilter) {\n      result = await webHid.connect({\n        vendorId: parseInt(vendorId, 16),\n        productId: parseInt(productId, 16),\n      });\n    } else {\n      result = await webHid.connect();\n    }\n    if (result.success) {\n      await result.keyboard!.open();\n      setKeyboard(result.keyboard);\n      setProductName(result.keyboard!.getInformation().productName);\n    } else {\n      setMessage(result.error!);\n      console.log(result.cause);\n    }\n  };\n\n  const handleCloseClick = async () => {\n    if (keyboard) {\n      await keyboard.close();\n      setKeyboard(undefined);\n    }\n    setProductName('');\n    setMessage('');\n  };\n\n  const handleDynamicKeymapGetLayerCount = async () => {\n    if (keyboard) {\n      const result = await keyboard.fetchLayerCount();\n      if (result.success) {\n        setLayerCount(result.layerCount!);\n      } else {\n        setMessage(result.error!);\n        console.log(result.cause);\n      }\n    } else {\n      setMessage('No any keyboards opened.');\n    }\n  };\n\n  const handleVendorIdChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setVendorId(event.target.value);\n  };\n\n  const handleProductIdChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setProductId(event.target.value);\n  };\n\n  const handleUseFilterChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setUseFilter(event.target.checked);\n  };\n\n  const handleGetConnectedKeyboardsClick = async () => {\n    const keyboards = await webHid.detectKeyboards();\n    setConnectedKeyboards(keyboards);\n    setSelectedKeyboardValue(0);\n  };\n\n  const handleSelectedKeyboardValue = (\n    event: React.ChangeEvent<HTMLSelectElement>\n  ) => {\n    setSelectedKeyboardValue(Number(event.target.value));\n  };\n\n  const handleOpenClick = async () => {\n    const keyboard = connectedKeyboards[selectedKeyboardValue];\n    const result = await keyboard.open();\n    if (result.success) {\n      setKeyboard(keyboard);\n      setProductName(keyboard.getInformation().productName);\n    } else {\n      setMessage(result.error!);\n      console.log(result.cause);\n    }\n  };\n\n  const handleLayerChange = async (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setLayer(Number(event.target.value));\n  };\n\n  const handleLayer2Change = async (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setLayer2(Number(event.target.value));\n  };\n\n  const handleRowChange = async (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRow(Number(event.target.value));\n  };\n\n  const handleRowCountChange = async (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowCount(Number(event.target.value));\n  };\n\n  const handleColumnChange = async (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setColumn(Number(event.target.value));\n  };\n\n  const handleColumnCountChange = async (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setColumnCount(Number(event.target.value));\n  };\n\n  const handleCodeChange = async (\n    event: React.ChangeEvent<HTMLSelectElement>\n  ) => {\n    setCode(Number(event.target.value));\n  };\n\n  const handleBufferOffsetChange = async (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setBufferOffset(Number(event.target.value));\n  };\n\n  const handleBufferSizeChange = async (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setBufferSize(Number(event.target.value));\n  };\n\n  const handleFetchKeymapClick = async () => {\n    if (keyboard) {\n      const fetchKeymapResult = await keyboard.fetchKeymaps(\n        layer2,\n        rowCount,\n        columnCount\n      );\n      if (fetchKeymapResult.success) {\n        console.log(fetchKeymapResult.keymap);\n      } else {\n        setMessage(fetchKeymapResult.error!);\n        console.log(fetchKeymapResult.cause);\n      }\n    } else {\n      setMessage('No any keyboard opened.');\n    }\n  };\n\n  const handleDynamicKeymapGetKeycodeClick = async () => {\n    const command = new DynamicKeymapGetKeycodeCommand(\n      {\n        layer,\n        row,\n        column,\n      },\n      async (result) => {\n        if (result.success) {\n          console.log(result.response!.code);\n          setCode(result.response!.code);\n        } else {\n          setMessage(result.error!);\n          console.log(result.cause);\n        }\n      }\n    );\n    await keyboard!.enqueue(command);\n  };\n\n  const handleDynamicKeymapSetKeycodeClick = async () => {\n    const result = await keyboard!.updateKeymap(layer, row, column, code);\n    if (!result.success) {\n      setMessage(result.error!);\n      console.log(result.cause);\n    }\n  };\n\n  const handleReadBufferClick = async () => {\n    const command = new DynamicKeymapReadBufferCommand(\n      {\n        offset: bufferOffset,\n        size: bufferSize,\n      },\n      async (result) => {\n        console.log(result);\n      }\n    );\n    await keyboard!.enqueue(command);\n  };\n\n  return (\n    <div className=\"hid\">\n      <h1>WebHid Test</h1>\n      <div className=\"box\">\n        <button onClick={handleGetConnectedKeyboardsClick}>\n          Get connected keyboards\n        </button>\n        <select\n          value={selectedKeyboardValue}\n          onChange={handleSelectedKeyboardValue}\n        >\n          {connectedKeyboards.map((k, i) => {\n            return (\n              <option key={i} value={i}>\n                {k.getInformation().productName}\n              </option>\n            );\n          })}\n        </select>\n        <button onClick={handleOpenClick}>Open</button>\n      </div>\n      <div className=\"box\">\n        <input\n          type=\"checkbox\"\n          id=\"useFilter\"\n          checked={useFilter}\n          onChange={handleUseFilterChange}\n        />\n        <label htmlFor=\"useFilter\">Use filter</label>\n        <label htmlFor=\"vendorId\">Vendor ID: </label>\n        0x\n        <input\n          type=\"text\"\n          id=\"vendorId\"\n          value={vendorId}\n          onChange={handleVendorIdChange}\n        />\n        <label htmlFor=\"productId\">Product ID: </label>\n        0x\n        <input\n          type=\"text\"\n          id=\"productId\"\n          value={productId}\n          onChange={handleProductIdChange}\n        />\n        <button onClick={handleConnectClick}>Connect and open</button>\n      </div>\n      <div className=\"box\">\n        <span>Product Name: {productName}</span>\n        <button onClick={handleCloseClick}>Close</button>\n      </div>\n      <div className=\"box\">\n        <button onClick={handleDynamicKeymapGetLayerCount}>\n          Get layer count\n        </button>\n        Layers: {layerCount}\n      </div>\n      <div className=\"box\">\n        <label htmlFor=\"layer\">Layer</label>\n        <input\n          type=\"number\"\n          id=\"layer\"\n          min={0}\n          max={Math.max(layerCount - 1, 0)}\n          value={layer}\n          onChange={handleLayerChange}\n        />\n        <label htmlFor=\"row\">Row</label>\n        <input\n          type=\"number\"\n          id=\"row\"\n          min={0}\n          value={row}\n          onChange={handleRowChange}\n        />\n        <label htmlFor=\"column\">Column</label>\n        <input\n          type=\"number\"\n          id=\"column\"\n          min={0}\n          value={column}\n          onChange={handleColumnChange}\n        />\n        <select value={code} onChange={handleCodeChange}>\n          {KeycodeArray.map((keycode) => {\n            return (\n              <option key={keycode.code} value={keycode.code}>\n                {keycode.name.long}\n              </option>\n            );\n          })}\n        </select>\n        <button onClick={handleDynamicKeymapGetKeycodeClick}>\n          Get keycode\n        </button>\n        <button onClick={handleDynamicKeymapSetKeycodeClick}>\n          Set keycode\n        </button>\n      </div>\n      <div className=\"box\">\n        <label htmlFor=\"layer2\">Layer</label>\n        <input\n          type=\"number\"\n          id=\"layer2\"\n          min={0}\n          max={layerCount}\n          value={layer2}\n          onChange={handleLayer2Change}\n        />\n        <label htmlFor=\"rowCount\">Row count</label>\n        <input\n          type=\"number\"\n          id=\"rowCount\"\n          min={0}\n          value={rowCount}\n          onChange={handleRowCountChange}\n        />\n        <label htmlFor=\"columnCount\">Column count</label>\n        <input\n          type=\"number\"\n          id=\"columnCount\"\n          min={0}\n          value={columnCount}\n          onChange={handleColumnCountChange}\n        />\n        <button onClick={handleFetchKeymapClick}>Fetch keymap</button>\n      </div>\n      <div className=\"box\">\n        <label htmlFor=\"bufferOffset\">Offset</label>\n        <input\n          type=\"number\"\n          id=\"bufferOffset\"\n          min={0}\n          value={bufferOffset}\n          onChange={handleBufferOffsetChange}\n        />\n        <label htmlFor=\"bufferSize\">Size</label>\n        <input\n          type=\"number\"\n          id=\"bufferSize\"\n          min={0}\n          value={bufferSize}\n          onChange={handleBufferSizeChange}\n        />\n        <button onClick={handleReadBufferClick}>Read buffer</button>\n      </div>\n      <div className=\"box\">\n        <label htmlFor=\"Test\">Test</label>\n        <input type=\"text\" style={{ width: '300px' }} />\n      </div>\n      <div>{message}</div>\n    </div>\n  );\n};\n\nexport default Hid;\n","export default __webpack_public_path__ + \"static/media/card-1.6b1c70f8.png\";","export default __webpack_public_path__ + \"static/media/card-2.588faf52.png\";","export default __webpack_public_path__ + \"static/media/card-3.763d8fcb.png\";","export default __webpack_public_path__ + \"static/media/card-4.aa35e5c1.png\";","export default __webpack_public_path__ + \"static/media/card-5.2c66a936.png\";","import {\n  AppBar,\n  Button,\n  Card,\n  CardContent,\n  CardMedia,\n  Container,\n  CssBaseline,\n  Grid,\n  Link,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport card1 from '../../assets/images/top/card-1.png';\nimport card2 from '../../assets/images/top/card-2.png';\nimport card3 from '../../assets/images/top/card-3.png';\nimport card4 from '../../assets/images/top/card-4.png';\nimport card5 from '../../assets/images/top/card-5.png';\nimport './Top.scss';\n\ntype IFeatureCardProps = {\n  image: any;\n  imageTitle: string;\n  title: string;\n  description: string;\n};\n\nconst FeatureCard = (props: IFeatureCardProps) => {\n  return (\n    <Grid item xs={12} sm={6} md={4}>\n      <Card className=\"card\">\n        <CardMedia\n          className=\"card-media\"\n          image={props.image}\n          title={props.imageTitle}\n        />\n        <CardContent className=\"card-content\">\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.title}\n          </Typography>\n          <Typography>{props.description}</Typography>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nclass Top extends React.Component<RouteComponentProps, any> {\n  onClickStartRemap = () => {\n    this.props.history.push('/configure');\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"relative\">\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Remap\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <main>\n          <div className=\"hero-content\">\n            <Container maxWidth=\"sm\">\n              <Typography\n                component=\"h1\"\n                variant=\"h2\"\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n              >\n                Remap\n              </Typography>\n              <Typography\n                variant=\"h5\"\n                align=\"center\"\n                color=\"textSecondary\"\n                paragraph\n              >\n                Remap allows you to customize a keymap assign of your keyboard\n                directly in Web Browser.\n              </Typography>\n              <div className=\"hero-buttons\">\n                <Grid container spacing={2} justify=\"center\">\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={this.onClickStartRemap}\n                    >\n                      Start Remap for your keyboard!\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button variant=\"outlined\" color=\"primary\" disabled={true}>\n                      For Keyboard Developers\n                    </Button>\n                  </Grid>\n                </Grid>\n              </div>\n              <div className=\"hero-footer\">\n                <a\n                  href=\"https://docs.google.com/document/d/1Fo2-cbPcTNkckwJOl-YqnBuVeyREuYtyoY8mecdiUxE/edit?usp=sharing\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Terms of Use\n                </a>\n              </div>\n            </Container>\n          </div>\n          <Container className=\"card-grid\" maxWidth=\"md\">\n            <Grid container spacing={4}>\n              <FeatureCard\n                key={1}\n                image={card1}\n                imageTitle=\"card-1\"\n                title=\"Direct Access\"\n                description=\"Remap allows you to customize your keyboard from Web\n                      Browser directly without installing app.\"\n              />\n              <FeatureCard\n                key={2}\n                image={card2}\n                imageTitle=\"card-2\"\n                title=\"Key Layout\"\n                description=\"Intuitive customization according to the actual key\n                      layout.\"\n              />\n              <FeatureCard\n                key={3}\n                image={card3}\n                imageTitle=\"card-3\"\n                title=\"Show Difference\"\n                description=\"Easy-to-understand display of keymap changes.\"\n              />\n              <FeatureCard\n                key={4}\n                image={card5}\n                imageTitle=\"card-5\"\n                title=\"Pre-defined Keys\"\n                description=\"Provide many Pre-defined keys to enable remap your key\n                      mapping easily.\"\n              />\n              <FeatureCard\n                key={5}\n                image={card4}\n                imageTitle=\"card-4\"\n                title=\"Define Own Key\"\n                description=\"Direct definition of keycode for complex keybindings with\n                      a free label.\"\n              />\n            </Grid>\n          </Container>\n        </main>\n        <footer className=\"footer\">\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\n            Remap\n          </Typography>\n          <Typography\n            variant=\"subtitle1\"\n            align=\"center\"\n            color=\"textSecondary\"\n            component=\"p\"\n          >\n            Allow to customize your keyboard more easily.\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"http://twitter.com/yoichiro\">\n              @yoichiro\n            </Link>\n            ,{' '}\n            <Link color=\"inherit\" href=\"http://twitter.com/adamrocker\">\n              @adamrocker\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n            {'All rights reserved.'}\n          </Typography>\n        </footer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(Top);\n","import React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { StyledComponentProps, withStyles } from '@material-ui/core/styles';\nimport Configure from './components/configure/Configure.container';\nimport Hid from './services/hid/ui/Hid';\nimport Top from './components/top/Top';\n\nclass App extends React.Component<StyledComponentProps, {}> {\n  constructor(\n    props: StyledComponentProps<string> | Readonly<StyledComponentProps<string>>\n  ) {\n    super(props);\n  }\n  render() {\n    return (\n      <SnackbarProvider\n        dense\n        preventDuplicate\n        hideIconVariant\n        maxSnack={4}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        classes={{\n          variantSuccess: this.props.classes!.success,\n          variantError: this.props.classes!.error,\n          variantWarning: this.props.classes!.warning,\n          variantInfo: this.props.classes!.info,\n        }}\n      >\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/hid\" component={Hid} />\n            <Route exact path=\"/configure\" component={Configure} />\n            <Route component={Top} />\n          </Switch>\n        </BrowserRouter>\n      </SnackbarProvider>\n    );\n  }\n}\nconst styles = () => ({\n  success: { backgroundColor: '#3f51b5!important' },\n  error: { backgroundColor: '#f44336!important' },\n  warning: { backgroundColor: '#ff9800!important' },\n  info: { backgroundColor: '#8bc34a!important' },\n});\n\nexport default withStyles(styles, { withTheme: true })(App);\n","import immer from 'immer';\nimport { WritableDraft } from 'immer/dist/internal';\nimport {\n  KEYCODEKEY_ACTIONS,\n  KEYCODEKEY_UPDATE_HOVER_KEY,\n  KEYCODEKEY_UPDATE_SELECTED_KEY,\n  KEYCODES_ACTIONS,\n  KEYCODES_UPDATE_CATEGORY,\n  KEYCODES_UPDATE_MACRO,\n  KEYCODES_LOAD_KEYCODE_INFO_FOR_ALL_CATEGORIES,\n  KEYBOARDS_UPDATE_SELECTED_LAYER,\n  KEYBOARDS_ACTIONS,\n  NOTIFICATION_ACTIONS,\n  NOTIFICATION_ADD_ERROR,\n  NOTIFICATION_ADD_WARN,\n  HEADER_UPDATE_FLUSH_LOADING,\n  HEADER_ACTIONS,\n  KEYCODEKEY_UPDATE_DRAGGING_KEY,\n  KEYDIFF_ACTIONS,\n  KEYDIFF_UPDATE_KEYDIFF,\n  KEYDIFF_CLEAR_KEYDIFF,\n  KEYBOARDS_UPDATE_SELECTED_POS,\n  KEYBOARDS_CLEAR_SELECTED_POS,\n  APP_ACTIONS,\n  APP_REMAPS_SET_KEY,\n  APP_REMAPS_INIT,\n  APP_REMAPS_REMOVE_KEY,\n  APP_PACKAGE_INIT,\n  NOTIFICATION_REMOVE,\n  NOTIFICATION_ADD_INFO,\n  NOTIFICATION_ADD_SUCCESS,\n  APP_UPDATE_SETUP_PHASE,\n  KEYBOARD_DEFINITION_FORM_UPDATE_DRAGGING,\n  KEYBOARD_DEFINITION_FORM_ACTIONS,\n  APP_REMAPS_CLEAR,\n  KEYCODEKEY_CLEAR,\n  ANYKEYCODEKEY_ACTIONS,\n  ANYKEYCODEKEY_ADD_ANYKEY,\n  ANYKEYCODEKEY_UPDATE_ANYKEY,\n  LAYOUT_OPTIONS_ACTIONS,\n  LAYOUT_OPTIONS_UPDATE_SELECTED_OPTION,\n  LAYOUT_OPTIONS_INIT_SELECTED_OPTION,\n  APP_UPDATE_KEYBOARD_HEIGHT,\n} from '../actions/actions';\nimport {\n  HID_ACTIONS,\n  HID_CONNECT_KEYBOARD,\n  HID_DISCONNECT_KEYBOARD,\n  HID_UPDATE_KEYBOARD,\n  HID_UPDATE_KEYBOARD_LAYER_COUNT,\n  HID_UPDATE_KEYBOARD_LIST,\n  HID_UPDATE_KEYMAPS,\n} from '../actions/hid.action';\nimport {\n  STORAGE_ACTIONS,\n  STORAGE_UPDATE_KEYBOARD_DEFINITION,\n} from '../actions/storage.action';\nimport { AnyKey } from '../components/configure/keycodekey/KeycodeKey';\nimport {\n  Key,\n  KeycodeInfo,\n} from '../components/configure/keycodekey/KeycodeKey.container';\nimport { IKeyboard, IKeycodeCategory } from '../services/hid/Hid';\nimport { INIT_STATE, RootState } from './state';\n\nexport type Action = { type: string; value: any };\n\nconst reducers = (state: RootState = INIT_STATE, action: Action) =>\n  immer(state, (draft) => {\n    if (action.type.startsWith(HID_ACTIONS)) {\n      hidReducer(action, draft);\n    } else if (action.type.startsWith(HEADER_ACTIONS)) {\n      headerReducer(action, draft);\n    } else if (action.type.startsWith(KEYCODES_ACTIONS)) {\n      keycodesReducer(action, draft);\n    } else if (action.type.startsWith(KEYBOARDS_ACTIONS)) {\n      keyboardsReducer(action, draft);\n    } else if (action.type.startsWith(ANYKEYCODEKEY_ACTIONS)) {\n      keycodeAddKeyReducer(action, draft);\n    } else if (action.type.startsWith(KEYCODEKEY_ACTIONS)) {\n      keycodekeyReducer(action, draft);\n    } else if (action.type.startsWith(KEYDIFF_ACTIONS)) {\n      keydiffReducer(action, draft);\n    } else if (action.type.startsWith(LAYOUT_OPTIONS_ACTIONS)) {\n      layoutOptionsReducer(action, draft);\n    } else if (action.type.startsWith(NOTIFICATION_ACTIONS)) {\n      notificationReducer(action, draft);\n    } else if (action.type.startsWith(APP_ACTIONS)) {\n      appReducer(action, draft);\n    } else if (action.type.startsWith(STORAGE_ACTIONS)) {\n      storageReducer(action, draft);\n    } else if (action.type.startsWith(KEYBOARD_DEFINITION_FORM_ACTIONS)) {\n      keyboardDefinitionFormReducer(action, draft);\n    }\n  });\n\nconst keyboardDefinitionFormReducer = (\n  action: Action,\n  draft: WritableDraft<RootState>\n) => {\n  switch (action.type) {\n    case KEYBOARD_DEFINITION_FORM_UPDATE_DRAGGING:\n      draft.keyboardDefinitionForm.dragging = action.value;\n      break;\n  }\n};\n\nconst storageReducer = (action: Action, draft: WritableDraft<RootState>) => {\n  switch (action.type) {\n    case STORAGE_UPDATE_KEYBOARD_DEFINITION: {\n      draft.entities.keyboardDefinition = action.value;\n      break;\n    }\n  }\n};\n\nconst appReducer = (action: Action, draft: WritableDraft<RootState>) => {\n  switch (action.type) {\n    case APP_UPDATE_SETUP_PHASE: {\n      draft.app.setupPhase = action.value;\n      break;\n    }\n    case APP_REMAPS_INIT: {\n      draft.app.remaps = action.value;\n      break;\n    }\n    case APP_REMAPS_SET_KEY: {\n      const layer = action.value.layer;\n      draft.app.remaps[layer][action.value.pos] = action.value.keymap;\n      break;\n    }\n    case APP_REMAPS_REMOVE_KEY: {\n      const layer = action.value.layer;\n      const pos = action.value.pos;\n      delete draft.app.remaps[layer][pos];\n      break;\n    }\n    case APP_REMAPS_CLEAR: {\n      draft.app.remaps = [];\n      break;\n    }\n    case APP_PACKAGE_INIT: {\n      draft.app.package.name = action.value.name;\n      draft.app.package.version = action.value.version;\n      break;\n    }\n    case APP_UPDATE_KEYBOARD_HEIGHT: {\n      draft.app.keyboardHeight = action.value;\n      break;\n    }\n  }\n};\n\nconst hidReducer = (action: Action, draft: WritableDraft<RootState>) => {\n  // TODO: type-safe\n  switch (action.type) {\n    case HID_CONNECT_KEYBOARD: {\n      const keyboard: IKeyboard = action.value.keyboard;\n      draft.entities.keyboards.push(keyboard);\n      break;\n    }\n    case HID_DISCONNECT_KEYBOARD: {\n      const keyboard: IKeyboard = action.value.keyboard;\n      draft.entities.keyboards = draft.entities.keyboards.filter((item) => {\n        return !item.isSameDevice(keyboard);\n      });\n      break;\n    }\n    case HID_UPDATE_KEYBOARD: {\n      const keyboard: IKeyboard = action.value.keyboard;\n      draft.entities.keyboard = keyboard;\n      break;\n    }\n    case HID_UPDATE_KEYBOARD_LAYER_COUNT: {\n      const layerCount = action.value.layerCount;\n      draft.entities.device.layerCount = layerCount;\n      break;\n    }\n    case HID_UPDATE_KEYBOARD_LIST: {\n      const keyboards: IKeyboard[] = action.value.keyboards;\n      draft.entities.keyboards = keyboards;\n      break;\n    }\n    case HID_UPDATE_KEYMAPS: {\n      draft.entities.device.keymaps = action.value.keymaps;\n      break;\n    }\n  }\n};\n\nconst keyboardsReducer = (action: Action, draft: WritableDraft<RootState>) => {\n  // TODO: type-safe\n  switch (action.type) {\n    case KEYBOARDS_CLEAR_SELECTED_POS: {\n      draft.keyboards.selectedPos = '';\n      break;\n    }\n    case KEYBOARDS_UPDATE_SELECTED_LAYER: {\n      draft.keyboards.selectedLayer = action.value;\n      break;\n    }\n    case KEYBOARDS_UPDATE_SELECTED_POS: {\n      draft.keyboards.selectedPos = action.value;\n      break;\n    }\n  }\n};\n\nconst keycodesReducer = (action: Action, draft: WritableDraft<RootState>) => {\n  // TODO: type-safe\n  switch (action.type) {\n    case KEYCODES_UPDATE_CATEGORY: {\n      draft.keycodes.category = action.value;\n      break;\n    }\n    case KEYCODES_UPDATE_MACRO: {\n      const code = action.value.code;\n      draft.entities.device.macros[code] = action.value.text;\n      break;\n    }\n    case KEYCODES_LOAD_KEYCODE_INFO_FOR_ALL_CATEGORIES: {\n      draft.keycodes.keys = action.value;\n      break;\n    }\n  }\n};\n\nconst keydiffReducer = (action: Action, draft: WritableDraft<RootState>) => {\n  // TODO: type-safe\n  switch (action.type) {\n    case KEYDIFF_UPDATE_KEYDIFF: {\n      draft.keydiff.origin = action.value.origin;\n      draft.keydiff.destination = action.value.destination;\n      break;\n    }\n    case KEYDIFF_CLEAR_KEYDIFF: {\n      draft.keydiff.origin = null;\n      draft.keydiff.destination = null;\n      break;\n    }\n  }\n};\n\nconst keycodeAddKeyReducer = (\n  action: Action,\n  draft: WritableDraft<RootState>\n) => {\n  // TODO: type-safe\n  switch (action.type) {\n    case ANYKEYCODEKEY_ADD_ANYKEY: {\n      const anyKey: AnyKey = action.value;\n      const key: Key = {\n        label: anyKey.label,\n        meta: '',\n        keymap: {\n          isAny: true,\n          code: anyKey.code,\n          keycodeInfo: new KeycodeInfo(anyKey.label, anyKey.code),\n        },\n      };\n      draft.keycodes.keys[IKeycodeCategory.ANY] = [\n        ...draft.keycodes.keys[IKeycodeCategory.ANY],\n        key,\n      ];\n      break;\n    }\n    case ANYKEYCODEKEY_UPDATE_ANYKEY: {\n      const { index, anyKey } = action.value;\n      const key: Key = {\n        label: anyKey.label,\n        meta: '',\n        keymap: {\n          isAny: true,\n          code: anyKey.code,\n          keycodeInfo: new KeycodeInfo(anyKey.label, anyKey.code),\n        },\n      };\n      console.log(draft.keycodes.keys[IKeycodeCategory.ANY]);\n      draft.keycodes.keys[IKeycodeCategory.ANY] = draft.keycodes.keys[\n        IKeycodeCategory.ANY\n      ].map((k, i) => {\n        return i == index ? key : k;\n      });\n      console.log(draft.keycodes.keys[IKeycodeCategory.ANY]);\n\n      break;\n    }\n  }\n};\n\nconst keycodekeyReducer = (action: Action, draft: WritableDraft<RootState>) => {\n  // TODO: type-safe\n  switch (action.type) {\n    case KEYCODEKEY_UPDATE_DRAGGING_KEY: {\n      draft.keycodeKey.draggingKey = action.value;\n      break;\n    }\n    case KEYCODEKEY_UPDATE_SELECTED_KEY: {\n      draft.keycodeKey.selectedKey = action.value;\n      break;\n    }\n    case KEYCODEKEY_UPDATE_HOVER_KEY: {\n      draft.keycodeKey.hoverKey = action.value;\n      break;\n    }\n    case KEYCODEKEY_CLEAR: {\n      draft.keycodeKey.draggingKey = null;\n      draft.keycodeKey.selectedKey = null;\n      draft.keycodeKey.hoverKey = null;\n      break;\n    }\n  }\n};\n\nconst layoutOptionsReducer = (\n  action: Action,\n  draft: WritableDraft<RootState>\n) => {\n  switch (action.type) {\n    case LAYOUT_OPTIONS_UPDATE_SELECTED_OPTION: {\n      const { optionIndex, option } = action.value;\n      draft.layoutOptions.selectedOptions = draft.layoutOptions.selectedOptions.map(\n        (value, index) => {\n          return index == optionIndex ? option : value;\n        }\n      );\n      break;\n    }\n    case LAYOUT_OPTIONS_INIT_SELECTED_OPTION: {\n      draft.layoutOptions.selectedOptions = action.value;\n      break;\n    }\n  }\n};\n\nconst notificationReducer = (\n  action: Action,\n  draft: WritableDraft<RootState>\n) => {\n  // TODO: type-safe\n  switch (action.type) {\n    case NOTIFICATION_ADD_ERROR: {\n      draft.app.notifications = [\n        ...draft.app.notifications,\n        {\n          key: Date.now().toString(),\n          type: 'error',\n          message: action.value.message,\n        },\n      ];\n      break;\n    }\n    case NOTIFICATION_ADD_WARN: {\n      draft.app.notifications = [\n        ...draft.app.notifications,\n        {\n          key: Date.now().toString(),\n          type: 'warning',\n          message: action.value.message,\n        },\n      ];\n      break;\n    }\n    case NOTIFICATION_ADD_INFO: {\n      draft.app.notifications = [\n        ...draft.app.notifications,\n        {\n          key: Date.now().toString(),\n          type: 'info',\n          message: action.value,\n        },\n      ];\n      break;\n    }\n    case NOTIFICATION_ADD_SUCCESS: {\n      draft.app.notifications = [\n        ...draft.app.notifications,\n        {\n          key: Date.now().toString(),\n          type: 'success',\n          message: action.value,\n        },\n      ];\n      break;\n    }\n    case NOTIFICATION_REMOVE: {\n      const key = action.value;\n      draft.app.notifications = draft.app.notifications.filter(\n        (item) => item.key != key\n      );\n      break;\n    }\n  }\n};\n\nconst headerReducer = (action: Action, draft: WritableDraft<RootState>) => {\n  // TODO: type-safe\n  switch (action.type) {\n    case HEADER_UPDATE_FLUSH_LOADING: {\n      draft.header.flushLoading = action.value;\n      break;\n    }\n  }\n};\n\nexport default reducers;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { RootState } from '../store/state';\nimport { Action, AnyAction } from 'redux';\nimport {\n  NOTIFICATION_ADD_ERROR,\n  NOTIFICATION_ADD_WARN,\n} from '../actions/actions';\n\nconst StackdriverErrorReporter = require('stackdriver-errors-js/dist/stackdriver-errors-concat.min');\nconst errorHandler = new StackdriverErrorReporter();\nif (process.env.NODE_ENV === 'production') {\n  errorHandler.start({\n    key: process.env.REACT_APP_ERROR_REPORTING_KEY,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  });\n}\n\n// eslint-disable-next-line no-unused-vars\nexport const errorReportingLogger = (store: { getState: () => RootState }) => (\n  // eslint-disable-next-line no-unused-vars\n  next: (action: Action) => void\n) => (action: AnyAction) => {\n  if ([NOTIFICATION_ADD_ERROR, NOTIFICATION_ADD_WARN].includes(action.type)) {\n    if (process.env.NODE_ENV === 'production') {\n      if (action.value.cause) {\n        errorHandler.report(action.cause);\n      } else {\n        errorHandler.report(action.value);\n      }\n    }\n  }\n  next(action);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport App from './App';\nimport reducers from './store/reducers';\nimport reportWebVitals from './reportWebVitals';\nimport { errorReportingLogger } from './utils/ErrorReportingLogger';\n\nconst store = createStore(\n  reducers,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n    applyMiddleware(errorReportingLogger)\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  // eslint-disable-next-line no-undef\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}